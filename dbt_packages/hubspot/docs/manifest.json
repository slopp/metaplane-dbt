{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v4.json", "dbt_version": "1.0.0", "generated_at": "2022-06-13T18:00:54.625684Z", "invocation_id": "56bdf4f8-c420-47a7-b514-d510b585a28b", "env": {}, "project_id": "5e587fba07ab8a9a57427c930291accf", "user_id": "535a716f-60c0-47b9-9763-5e1b450166b6", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"seed.hubspot_integration_tests.email_event_delivered_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_delivered_data"], "unique_id": "seed.hubspot_integration_tests.email_event_delivered_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_delivered_data.csv", "original_file_path": "seeds/email_event_delivered_data.csv", "name": "email_event_delivered_data", "alias": "email_event_delivered_data", "checksum": {"name": "sha256", "checksum": "bac0832d9511cdf5afdd52248082bfa1e1c7f53a043271b3ef421bd4acd9cfb2"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.3302999, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_delivered_data`"}, "seed.hubspot_integration_tests.email_event_status_change_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_status_change_data"], "unique_id": "seed.hubspot_integration_tests.email_event_status_change_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_status_change_data.csv", "original_file_path": "seeds/email_event_status_change_data.csv", "name": "email_event_status_change_data", "alias": "email_event_status_change_data", "checksum": {"name": "sha256", "checksum": "4ebf917113fb6696a3c05c53bd9693f8912353cae6e3d501b5218bcd3ffd8ca8"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.331763, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_status_change_data`"}, "seed.hubspot_integration_tests.engagement_deal_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64", "deal_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_deal_data"], "unique_id": "seed.hubspot_integration_tests.engagement_deal_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_deal_data.csv", "original_file_path": "seeds/engagement_deal_data.csv", "name": "engagement_deal_data", "alias": "engagement_deal_data", "checksum": {"name": "sha256", "checksum": "851831bb563e331d84db49071e5c7eb6c110c0146fede28719f3925be3bac5b3"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "deal_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.33323, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_deal_data`"}, "seed.hubspot_integration_tests.deal_stage_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"deal_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_stage_data"], "unique_id": "seed.hubspot_integration_tests.deal_stage_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_stage_data.csv", "original_file_path": "seeds/deal_stage_data.csv", "name": "deal_stage_data", "alias": "deal_stage_data", "checksum": {"name": "sha256", "checksum": "d554a9a32c5c0eac1fe5b65c543fbb1b2add1193329d302c67d513ca4b8dd391"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"deal_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.336133, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_stage_data`"}, "seed.hubspot_integration_tests.email_campaign_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"id": "int64", "content_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_campaign_data"], "unique_id": "seed.hubspot_integration_tests.email_campaign_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_campaign_data.csv", "original_file_path": "seeds/email_campaign_data.csv", "name": "email_campaign_data", "alias": "email_campaign_data", "checksum": {"name": "sha256", "checksum": "646c26031131923064e3d756bd5e354c69884b1f1d123d40a289631b6afa3bc0"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "content_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.338042, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_campaign_data`"}, "seed.hubspot_integration_tests.engagement_call_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_call_data"], "unique_id": "seed.hubspot_integration_tests.engagement_call_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_call_data.csv", "original_file_path": "seeds/engagement_call_data.csv", "name": "engagement_call_data", "alias": "engagement_call_data", "checksum": {"name": "sha256", "checksum": "a14b53204e4bc88615b9071b41e9d017859b8332573b96e5d0329c23bc2403bf"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.339477, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_call_data`"}, "seed.hubspot_integration_tests.contact_merge_audit_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_merge_audit_data"], "unique_id": "seed.hubspot_integration_tests.contact_merge_audit_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_merge_audit_data.csv", "original_file_path": "seeds/contact_merge_audit_data.csv", "name": "contact_merge_audit_data", "alias": "contact_merge_audit_data", "checksum": {"name": "sha256", "checksum": "d858928ec48b2c3cdc29bebb52169ea4c8f636ed42d0a535ebe4cbf0af7f89c0"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.340875, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`contact_merge_audit_data`"}, "seed.hubspot_integration_tests.email_event_print_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_print_data"], "unique_id": "seed.hubspot_integration_tests.email_event_print_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_print_data.csv", "original_file_path": "seeds/email_event_print_data.csv", "name": "email_event_print_data", "alias": "email_event_print_data", "checksum": {"name": "sha256", "checksum": "4fd71501b3918ac0f75f86fffb30f73dc25de86973ec142716ade954ead8987e"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.342259, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_print_data`"}, "seed.hubspot_integration_tests.email_event_spam_report_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_spam_report_data"], "unique_id": "seed.hubspot_integration_tests.email_event_spam_report_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_spam_report_data.csv", "original_file_path": "seeds/email_event_spam_report_data.csv", "name": "email_event_spam_report_data", "alias": "email_event_spam_report_data", "checksum": {"name": "sha256", "checksum": "42c9e30686405fdae6401bd728369be29e94201b946ea45aa9bff0329e677e04"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.343756, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_spam_report_data`"}, "seed.hubspot_integration_tests.contact_list_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_list_data"], "unique_id": "seed.hubspot_integration_tests.contact_list_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_list_data.csv", "original_file_path": "seeds/contact_list_data.csv", "name": "contact_list_data", "alias": "contact_list_data", "checksum": {"name": "sha256", "checksum": "82789af9bccebcc6867b7e0d2029808f02bd9cbd7e3bedd43704d742ae565e94"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type != 'postgres' else false }}"}, "created_at": 1655143061.345149, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`contact_list_data`"}, "seed.hubspot_integration_tests.email_event_click_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_click_data"], "unique_id": "seed.hubspot_integration_tests.email_event_click_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_click_data.csv", "original_file_path": "seeds/email_event_click_data.csv", "name": "email_event_click_data", "alias": "email_event_click_data", "checksum": {"name": "sha256", "checksum": "5f2ae2a37b9c3862c09d680744fd3c391483ac00a859046dd616db2785540c71"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.346619, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_click_data`"}, "seed.hubspot_integration_tests.email_event_deferred_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_deferred_data"], "unique_id": "seed.hubspot_integration_tests.email_event_deferred_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_deferred_data.csv", "original_file_path": "seeds/email_event_deferred_data.csv", "name": "email_event_deferred_data", "alias": "email_event_deferred_data", "checksum": {"name": "sha256", "checksum": "a091eadc8b7953cc5ef605241e1f11c195a8d38fd3151ae75c590879d5c05c51"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.34796, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_deferred_data`"}, "seed.hubspot_integration_tests.email_event_open_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_open_data"], "unique_id": "seed.hubspot_integration_tests.email_event_open_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_open_data.csv", "original_file_path": "seeds/email_event_open_data.csv", "name": "email_event_open_data", "alias": "email_event_open_data", "checksum": {"name": "sha256", "checksum": "642853dc3235221a5f8f2879b460414670f1ee6b2d2f3c1930e566fee476be30"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.349321, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_open_data`"}, "seed.hubspot_integration_tests.company_property_history_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"company_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "company_property_history_data"], "unique_id": "seed.hubspot_integration_tests.company_property_history_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "company_property_history_data.csv", "original_file_path": "seeds/company_property_history_data.csv", "name": "company_property_history_data", "alias": "company_property_history_data", "checksum": {"name": "sha256", "checksum": "52c2f598754cd8b962bbeaf2a20b7cc8f82eb9a647e3f1fb08348ebb4c779c44"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"company_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.3508391, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`company_property_history_data`"}, "seed.hubspot_integration_tests.engagement_email_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_email_data"], "unique_id": "seed.hubspot_integration_tests.engagement_email_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_email_data.csv", "original_file_path": "seeds/engagement_email_data.csv", "name": "engagement_email_data", "alias": "engagement_email_data", "checksum": {"name": "sha256", "checksum": "893e4cc3d0ab0cf86cbf59052b53c316e5e64a7432c4789f97c45dcead3eebc7"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.352273, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_email_data`"}, "seed.hubspot_integration_tests.deal_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"deal_id": "int64", "owner_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_data"], "unique_id": "seed.hubspot_integration_tests.deal_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_data.csv", "original_file_path": "seeds/deal_data.csv", "name": "deal_data", "alias": "deal_data", "checksum": {"name": "sha256", "checksum": "092a6a2227f655822c156448b13e1cb645e38486405affcce7653dbba0dfad27"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"deal_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "owner_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.353719, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_data`"}, "seed.hubspot_integration_tests.engagement_note_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_note_data"], "unique_id": "seed.hubspot_integration_tests.engagement_note_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_note_data.csv", "original_file_path": "seeds/engagement_note_data.csv", "name": "engagement_note_data", "alias": "engagement_note_data", "checksum": {"name": "sha256", "checksum": "cee44946dc82d0a0ddb2a374562a6a5d927dc9c06c0b477bbe2b992114867e15"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.355173, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_note_data`"}, "seed.hubspot_integration_tests.deal_pipeline_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"pipeline_id": "string"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_pipeline_data"], "unique_id": "seed.hubspot_integration_tests.deal_pipeline_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_pipeline_data.csv", "original_file_path": "seeds/deal_pipeline_data.csv", "name": "deal_pipeline_data", "alias": "deal_pipeline_data", "checksum": {"name": "sha256", "checksum": "bf413926570c4630b2c2f6835282070e1217e15268543dbbfc2060c1e018ba3f"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"pipeline_id": "{{ 'varchar(100)'  if target.type in ('redshift','postgres') else 'string'}}"}}, "created_at": 1655143061.356758, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_pipeline_data`"}, "seed.hubspot_integration_tests.email_event_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_data"], "unique_id": "seed.hubspot_integration_tests.email_event_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_data.csv", "original_file_path": "seeds/email_event_data.csv", "name": "email_event_data", "alias": "email_event_data", "checksum": {"name": "sha256", "checksum": "e5baab5fa8523995b5b9ac0f84be3a94fb43a8e92214feb33b91a92364d1cbbd"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.3582988, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_data`"}, "seed.hubspot_integration_tests.engagement_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_data"], "unique_id": "seed.hubspot_integration_tests.engagement_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_data.csv", "original_file_path": "seeds/engagement_data.csv", "name": "engagement_data", "alias": "engagement_data", "checksum": {"name": "sha256", "checksum": "bc0116d99bbb4a5298349790e172681232dbb19655a95911dfb47527a5b1626c"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.359682, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_data`"}, "seed.hubspot_integration_tests.email_event_dropped_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_dropped_data"], "unique_id": "seed.hubspot_integration_tests.email_event_dropped_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_dropped_data.csv", "original_file_path": "seeds/email_event_dropped_data.csv", "name": "email_event_dropped_data", "alias": "email_event_dropped_data", "checksum": {"name": "sha256", "checksum": "8823d2c069348f748f2329a9a0652ac56616cd93194559ae01c6f397143850b8"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type not in ('snowflake', 'postgres') else false }}"}, "created_at": 1655143061.361113, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_dropped_data`"}, "seed.hubspot_integration_tests.owner_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"owner_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "owner_data"], "unique_id": "seed.hubspot_integration_tests.owner_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "owner_data.csv", "original_file_path": "seeds/owner_data.csv", "name": "owner_data", "alias": "owner_data", "checksum": {"name": "sha256", "checksum": "468986814827029c1ce9ab5bb57808f038a888b6ad5426f403a5d67bd8500469"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"owner_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.362684, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`owner_data`"}, "seed.hubspot_integration_tests.engagement_meeting_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_meeting_data"], "unique_id": "seed.hubspot_integration_tests.engagement_meeting_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_meeting_data.csv", "original_file_path": "seeds/engagement_meeting_data.csv", "name": "engagement_meeting_data", "alias": "engagement_meeting_data", "checksum": {"name": "sha256", "checksum": "13bdd431034bcf89a45d1c5e7ac03c1cc61e92188f652b244b7ee3ccc287eaa1"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.364119, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_meeting_data`"}, "seed.hubspot_integration_tests.email_event_forward_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_forward_data"], "unique_id": "seed.hubspot_integration_tests.email_event_forward_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_forward_data.csv", "original_file_path": "seeds/email_event_forward_data.csv", "name": "email_event_forward_data", "alias": "email_event_forward_data", "checksum": {"name": "sha256", "checksum": "8fc1066f680e8427a98c275e951906ea5e1235e9de8c2eb0a2e59cebd8524251"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.36559, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_forward_data`"}, "seed.hubspot_integration_tests.deal_pipeline_stage_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"stage_id": "string"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_pipeline_stage_data"], "unique_id": "seed.hubspot_integration_tests.deal_pipeline_stage_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_pipeline_stage_data.csv", "original_file_path": "seeds/deal_pipeline_stage_data.csv", "name": "deal_pipeline_stage_data", "alias": "deal_pipeline_stage_data", "checksum": {"name": "sha256", "checksum": "6847909107b6e19f87fe8306cb2a960e0aab531862989b615183a177e1440ada"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"stage_id": "{{ 'varchar(100)'  if target.type in ('redshift','postgres') else 'string'}}"}}, "created_at": 1655143061.366975, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_pipeline_stage_data`"}, "seed.hubspot_integration_tests.company_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "company_data"], "unique_id": "seed.hubspot_integration_tests.company_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "company_data.csv", "original_file_path": "seeds/company_data.csv", "name": "company_data", "alias": "company_data", "checksum": {"name": "sha256", "checksum": "7c07290d2bb20b6800a72e7a1e2be622d5cfd6e90271b3669de13bf676b8cc7d"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.369962, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`company_data`"}, "seed.hubspot_integration_tests.deal_contact_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"contact_id": "int64", "deal_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_contact_data"], "unique_id": "seed.hubspot_integration_tests.deal_contact_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_contact_data.csv", "original_file_path": "seeds/deal_contact_data.csv", "name": "deal_contact_data", "alias": "deal_contact_data", "checksum": {"name": "sha256", "checksum": "46cc00d4bdcf0a268083fec95c0aeb03efa6f84f13e3216fbde29f67b4a5f32c"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"contact_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "deal_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.371444, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_contact_data`"}, "seed.hubspot_integration_tests.contact_list_member_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_list_member_data"], "unique_id": "seed.hubspot_integration_tests.contact_list_member_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_list_member_data.csv", "original_file_path": "seeds/contact_list_member_data.csv", "name": "contact_list_member_data", "alias": "contact_list_member_data", "checksum": {"name": "sha256", "checksum": "17e5b2c82e8253e96f19e744ddaa56392ca4a265565904768e2abbead0e2bf9e"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.3728378, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`contact_list_member_data`"}, "seed.hubspot_integration_tests.contact_property_history_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_property_history_data"], "unique_id": "seed.hubspot_integration_tests.contact_property_history_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_property_history_data.csv", "original_file_path": "seeds/contact_property_history_data.csv", "name": "contact_property_history_data", "alias": "contact_property_history_data", "checksum": {"name": "sha256", "checksum": "3f25c81e8be97b3eb0d2e3d97df3c5c1000051ea46e09b04063d7336e6ed6648"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.3743439, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`contact_property_history_data`"}, "seed.hubspot_integration_tests.deal_property_history_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"deal_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_property_history_data"], "unique_id": "seed.hubspot_integration_tests.deal_property_history_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_property_history_data.csv", "original_file_path": "seeds/deal_property_history_data.csv", "name": "deal_property_history_data", "alias": "deal_property_history_data", "checksum": {"name": "sha256", "checksum": "57c14bbf7f8deae1838ab6acaa2689391c3859a2ae2c3331aca9876ef5b615ee"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"deal_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.37577, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_property_history_data`"}, "seed.hubspot_integration_tests.email_event_bounce_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_bounce_data"], "unique_id": "seed.hubspot_integration_tests.email_event_bounce_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_bounce_data.csv", "original_file_path": "seeds/email_event_bounce_data.csv", "name": "email_event_bounce_data", "alias": "email_event_bounce_data", "checksum": {"name": "sha256", "checksum": "8d61c401a95d57a403f5476b94e8c562be2a167fb6c9df0fa39444d4b71b86a1"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.377165, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_bounce_data`"}, "seed.hubspot_integration_tests.engagement_contact_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64", "contact_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_contact_data"], "unique_id": "seed.hubspot_integration_tests.engagement_contact_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_contact_data.csv", "original_file_path": "seeds/engagement_contact_data.csv", "name": "engagement_contact_data", "alias": "engagement_contact_data", "checksum": {"name": "sha256", "checksum": "50c5e0326fc2aca3df96f0411dff6e8f6c997608685b51ea224ddf28cd49f66f"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "contact_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.3785532, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_contact_data`"}, "seed.hubspot_integration_tests.email_event_sent_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_sent_data"], "unique_id": "seed.hubspot_integration_tests.email_event_sent_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_sent_data.csv", "original_file_path": "seeds/email_event_sent_data.csv", "name": "email_event_sent_data", "alias": "email_event_sent_data", "checksum": {"name": "sha256", "checksum": "dccc8671299c2a4bdfc5d9f055e495edf9a1aee6fb8a963106a1fc8929921b4a"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type not in ('snowflake', 'postgres') else false }}"}, "created_at": 1655143061.379998, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`email_event_sent_data`"}, "seed.hubspot_integration_tests.contact_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_data"], "unique_id": "seed.hubspot_integration_tests.contact_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_data.csv", "original_file_path": "seeds/contact_data.csv", "name": "contact_data", "alias": "contact_data", "checksum": {"name": "sha256", "checksum": "a549a63fa9d4c928bc6212168d0dbc230a6dea8069fa4f74186db691d779bf46"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.381512, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`contact_data`"}, "seed.hubspot_integration_tests.deal_company_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "deal_company_data"], "unique_id": "seed.hubspot_integration_tests.deal_company_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "deal_company_data.csv", "original_file_path": "seeds/deal_company_data.csv", "name": "deal_company_data", "alias": "deal_company_data", "checksum": {"name": "sha256", "checksum": "5cc92a73a5fe90aaa4346802255045b0d1e1e7ab8d6397dd1ea6bab7905cde83"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}"}, "created_at": 1655143061.3829892, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`deal_company_data`"}, "seed.hubspot_integration_tests.engagement_task_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64", "completion_date": "string"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_task_data"], "unique_id": "seed.hubspot_integration_tests.engagement_task_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_task_data.csv", "original_file_path": "seeds/engagement_task_data.csv", "name": "engagement_task_data", "alias": "engagement_task_data", "checksum": {"name": "sha256", "checksum": "34d96cdb535e89a3fc1e17ae3022c76d321f5714d2d26f3253319e8120b07742"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "completion_date": "{{ 'varchar(100)'  if target.type in ('redshift','postgres') else 'string'}}"}}, "created_at": 1655143061.387359, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_task_data`"}, "seed.hubspot_integration_tests.engagement_company_data": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {"engagement_id": "int64", "company_id": "int64"}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "engagement_company_data"], "unique_id": "seed.hubspot_integration_tests.engagement_company_data", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "engagement_company_data.csv", "original_file_path": "seeds/engagement_company_data.csv", "name": "engagement_company_data", "alias": "engagement_company_data", "checksum": {"name": "sha256", "checksum": "942de68372d1c4466fb1e5fca096ef06c8461085b3ea0005ffe3456f203268e2"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "column_types": {"engagement_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}", "company_id": "{{ 'int64' if target.name == 'bigquery' else 'bigint' }}"}}, "created_at": 1655143061.3889081, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test`.`engagement_company_data`"}, "model.hubspot_source.stg_hubspot__engagement_task": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_task_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_task_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_task_tmp')),\n                staging_columns=get_engagement_task_columns()\n            )\n        }}\n    from base\n\n/*\nSome users have experienced the `completion_date` field being synced as a string rather than a timestamp.\nTo address this, we use the below run_query command to query a sinlge record from the engagement_task tmp table\nand then assess in a conditional within the fields cte if the engagement_task field is indeed a UTC timestamp or not.\n\nIf the field is not a timestamp, then we safe_cast so downstream models do not fail. Otherwise, we do nothing to the \nfield.\n*/\n{% if execute -%}\n    {% set results = run_query('select completion_date from ' ~ ref('stg_hubspot__engagement_task_tmp') ~ ' where completion_date is not null limit 1') %}\n    {% set results_list = results.columns[0].values() | string %}\n{% endif -%}\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as task_note,\n\n        {% if 'tzinfo=<UTC>' not in results_list %}\n            {{ dbt_utils.safe_cast('completion_date', 'timestamp') }} as completion_timestamp,\n        {% else %}\n            completion_date as completion_timestamp,\n        {% endif %}\n\n        engagement_id,\n        for_object_type,\n        is_all_day,\n        priority,\n        probability_to_complete,\n        status as task_status,\n        subject as task_subject,\n        task_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_task_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.safe_cast", "macro.dbt.run_query"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_task_tmp", "model.hubspot_source.stg_hubspot__engagement_task_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_task"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_task", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_task.sql", "original_file_path": "models/stg_hubspot__engagement_task.sql", "name": "stg_hubspot__engagement_task", "alias": "stg_hubspot__engagement_task", "checksum": {"name": "sha256", "checksum": "141ca0f6dff813ecf5810bfbbecf3cf543aacac4a9d59ce3bde833b5357fe5f3"}, "tags": [], "refs": [["stg_hubspot__engagement_task_tmp"], ["stg_hubspot__engagement_task_tmp"]], "sources": [], "description": "Each record represents a TASK engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "completion_timestamp": {"name": "completion_timestamp", "description": "The timestamp the task was completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "for_object_type": {"name": "for_object_type", "description": "One of CONTACT or COMPANY, what object type the task is for.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_all_day": {"name": "is_all_day", "description": "Whether it is an all day task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "priority": {"name": "priority", "description": "The priority of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "probability_to_complete": {"name": "probability_to_complete", "description": "The probability that the task will be completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_note": {"name": "task_note", "description": "The body or details of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_status": {"name": "task_status", "description": "The status of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_subject": {"name": "task_subject", "description": "The subject or title of the task", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_type": {"name": "task_type", "description": "The type of task", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_task.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.710933, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    completion_date\n    \n as \n    \n    completion_date\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n, \n    \n    \n    for_object_type\n    \n as \n    \n    for_object_type\n    \n, \n    \n    \n    is_all_day\n    \n as \n    \n    is_all_day\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    probability_to_complete\n    \n as \n    \n    probability_to_complete\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    task_type\n    \n as \n    \n    task_type\n    \n\n\n\n    from base\n\n/*\nSome users have experienced the `completion_date` field being synced as a string rather than a timestamp.\nTo address this, we use the below run_query command to query a sinlge record from the engagement_task tmp table\nand then assess in a conditional within the fields cte if the engagement_task field is indeed a UTC timestamp or not.\n\nIf the field is not a timestamp, then we safe_cast so downstream models do not fail. Otherwise, we do nothing to the \nfield.\n*/\n\n    \n), fields as (\n\n    select\n        _fivetran_synced,\n        body as task_note,\n\n        \n            \n    safe_cast(completion_date as timestamp)\n as completion_timestamp,\n        \n\n        engagement_id,\n        for_object_type,\n        is_all_day,\n        priority,\n        probability_to_complete,\n        status as task_status,\n        subject as task_subject,\n        task_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task`"}, "model.hubspot_source.stg_hubspot__engagement_deal": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_deal_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_deal_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_deal_tmp')),\n                staging_columns=get_engagement_deal_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        deal_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_deal_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_deal_tmp", "model.hubspot_source.stg_hubspot__engagement_deal_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_deal"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_deal.sql", "original_file_path": "models/stg_hubspot__engagement_deal.sql", "name": "stg_hubspot__engagement_deal", "alias": "stg_hubspot__engagement_deal", "checksum": {"name": "sha256", "checksum": "898021a7f60addee81c2019a93b4f484169bd967975bedbfdf78cf3af94c2cc8"}, "tags": [], "refs": [["stg_hubspot__engagement_deal_tmp"], ["stg_hubspot__engagement_deal_tmp"]], "sources": [], "description": "Each record represents a 'link' between a deal and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_deal.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.694504, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_deal_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        deal_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_deal`"}, "model.hubspot_source.stg_hubspot__company_property_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__company_property_history_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__company_property_history_tmp')),\n                staging_columns=get_company_property_history_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        company_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_company_property_history_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__company_property_history_tmp", "model.hubspot_source.stg_hubspot__company_property_history_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__company_property_history"], "unique_id": "model.hubspot_source.stg_hubspot__company_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__company_property_history.sql", "original_file_path": "models/stg_hubspot__company_property_history.sql", "name": "stg_hubspot__company_property_history", "alias": "stg_hubspot__company_property_history", "checksum": {"name": "sha256", "checksum": "59dea02252bdf8822fdd523bd457e25ed57a8be7e7045427e3a62a3676481c23"}, "tags": [], "refs": [["stg_hubspot__company_property_history_tmp"], ["stg_hubspot__company_property_history_tmp"]], "sources": [], "description": "Each record represents a change to company record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_timestamp": {"name": "change_timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__company.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__company_property_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.9622998, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_property_history_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    timestamp\n    \n as change_timestamp , \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        company_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_property_history`"}, "model.hubspot_source.stg_hubspot__email_event_delivered": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_delivered_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_delivered_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_delivered_tmp')),\n                staging_columns=get_email_event_delivered_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        id as event_id,\n        response as returned_response,\n        smtp_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_delivered_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_delivered_tmp", "model.hubspot_source.stg_hubspot__email_event_delivered_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_delivered"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_delivered", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_delivered.sql", "original_file_path": "models/stg_hubspot__email_event_delivered.sql", "name": "stg_hubspot__email_event_delivered", "alias": "stg_hubspot__email_event_delivered", "checksum": {"name": "sha256", "checksum": "a2b5ac41bde0c92869fe7e96ecc82b021c45ce01df87dbcac040fa1bfa4ab6dd"}, "tags": [], "refs": [["stg_hubspot__email_event_delivered_tmp"], ["stg_hubspot__email_event_delivered_tmp"]], "sources": [], "description": "Each record represents a DELIVERED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "smtp_id": {"name": "smtp_id", "description": "An ID attached to the message by HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_delivered.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.6063879, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    response\n    \n as \n    \n    response\n    \n, \n    \n    \n    smtp_id\n    \n as \n    \n    smtp_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        id as event_id,\n        response as returned_response,\n        smtp_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered`"}, "model.hubspot_source.stg_hubspot__owner": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_owner_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__owner_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__owner_tmp')),\n                staging_columns=get_owner_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        created_at as created_timestamp,\n        email as email_address,\n        first_name,\n        last_name,\n        owner_id,\n        portal_id,\n        type as owner_type,\n        updated_at as updated_timestamp,\n        trim( {{ dbt_utils.concat(['first_name', \"' '\", 'last_name']) }} ) as full_name\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_owner_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.concat"], "nodes": ["model.hubspot_source.stg_hubspot__owner_tmp", "model.hubspot_source.stg_hubspot__owner_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__owner"], "unique_id": "model.hubspot_source.stg_hubspot__owner", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__owner.sql", "original_file_path": "models/stg_hubspot__owner.sql", "name": "stg_hubspot__owner", "alias": "stg_hubspot__owner", "checksum": {"name": "sha256", "checksum": "626ce2b5147c5f027d6c45dbc4e4b7601787b13202e2181ce1fd06a6e2a1308c"}, "tags": [], "refs": [["stg_hubspot__owner_tmp"], ["stg_hubspot__owner_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__owner.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143061.489892, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    portal_id\n    \n as \n    \n    portal_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        created_at as created_timestamp,\n        email as email_address,\n        first_name,\n        last_name,\n        owner_id,\n        portal_id,\n        type as owner_type,\n        updated_at as updated_timestamp,\n        trim( first_name || ' ' || last_name ) as full_name\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`"}, "model.hubspot_source.stg_hubspot__email_event": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_tmp')),\n                staging_columns=get_email_event_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        app_id,\n        caused_by_created as caused_timestamp,\n        caused_by_id as caused_by_event_id,\n        created as created_timestamp,\n        email_campaign_id,\n        filtered_event as is_filtered_event,\n        id as event_id,\n        obsoleted_by_created as obsoleted_timestamp,\n        obsoleted_by_id as obsoleted_by_event_id,\n        portal_id,\n        recipient as recipient_email_address,\n        sent_by_created as sent_timestamp,\n        sent_by_id as sent_by_event_id,\n        type as event_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_tmp", "model.hubspot_source.stg_hubspot__email_event_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event"], "unique_id": "model.hubspot_source.stg_hubspot__email_event", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event.sql", "original_file_path": "models/stg_hubspot__email_event.sql", "name": "stg_hubspot__email_event", "alias": "stg_hubspot__email_event", "checksum": {"name": "sha256", "checksum": "bb1e2e17bfe96ee5eee95744f9c9bb5834309f76e7dba67159225ec074341d24"}, "tags": [], "refs": [["stg_hubspot__email_event_tmp"], ["stg_hubspot__email_event_tmp"]], "sources": [], "description": "Each record represents an email event in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The ID of the app that sent the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "caused_by_event_id": {"name": "caused_by_event_id", "description": "The event ID which uniquely identifies the event which directly caused this event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "caused_timestamp": {"name": "caused_timestamp", "description": "The timestamp of the event that caused this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "The type of event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_filtered_event": {"name": "is_filtered_event", "description": "A boolean representing whether the event has been filtered out of reporting based on customer reports settings or not.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "obsoleted_by_event_id": {"name": "obsoleted_by_event_id", "description": "The event ID which uniquely identifies the follow-on event which makes this current event obsolete. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "obsoleted_timestamp": {"name": "obsoleted_timestamp", "description": "The timestamp of the event that made the current event obsolete.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_by_event_id": {"name": "sent_by_event_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_timestamp": {"name": "sent_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.6308239, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    app_id\n    \n as \n    \n    app_id\n    \n, \n    \n    \n    caused_by_created\n    \n as \n    \n    caused_by_created\n    \n, \n    \n    \n    caused_by_id\n    \n as \n    \n    caused_by_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    email_campaign_id\n    \n as \n    \n    email_campaign_id\n    \n, \n    \n    \n    filtered_event\n    \n as \n    \n    filtered_event\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    obsoleted_by_created\n    \n as \n    \n    obsoleted_by_created\n    \n, \n    \n    \n    obsoleted_by_id\n    \n as \n    \n    obsoleted_by_id\n    \n, \n    \n    \n    portal_id\n    \n as \n    \n    portal_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    sent_by_created\n    \n as \n    \n    sent_by_created\n    \n, \n    \n    \n    sent_by_id\n    \n as \n    \n    sent_by_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        app_id,\n        caused_by_created as caused_timestamp,\n        caused_by_id as caused_by_event_id,\n        created as created_timestamp,\n        email_campaign_id,\n        filtered_event as is_filtered_event,\n        id as event_id,\n        obsoleted_by_created as obsoleted_timestamp,\n        obsoleted_by_id as obsoleted_by_event_id,\n        portal_id,\n        recipient as recipient_email_address,\n        sent_by_created as sent_timestamp,\n        sent_by_id as sent_by_event_id,\n        type as event_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`"}, "model.hubspot_source.stg_hubspot__engagement_meeting": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_email_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_meeting_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_meeting_tmp')),\n                staging_columns=get_engagement_meeting_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as meeting_notes,\n        created_from_link_id,\n        end_time as end_timestamp,\n        engagement_id,\n        external_url,\n        meeting_outcome,\n        pre_meeting_prospect_reminders,\n        source,\n        source_id,\n        start_time as start_timestamp,\n        title as meeting_title,\n        web_conference_meeting_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_meeting_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_meeting_tmp", "model.hubspot_source.stg_hubspot__engagement_meeting_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_meeting"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_meeting", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_meeting.sql", "original_file_path": "models/stg_hubspot__engagement_meeting.sql", "name": "stg_hubspot__engagement_meeting", "alias": "stg_hubspot__engagement_meeting", "checksum": {"name": "sha256", "checksum": "d910723f79bca69c002268a0d48154cf925a26a01204efde0e5e3e3d10f4caaa"}, "tags": [], "refs": [["stg_hubspot__engagement_meeting_tmp"], ["stg_hubspot__engagement_meeting_tmp"]], "sources": [], "description": "Each record represents a MEETING engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "end_timestamp": {"name": "end_timestamp", "description": "A timestamp representing the end time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_url": {"name": "external_url", "description": "The external URL of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_notes": {"name": "meeting_notes", "description": "The details or body of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_outcome": {"name": "meeting_outcome", "description": "The meeting outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_title": {"name": "meeting_title", "description": "The title or subject of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The internal ID of the meeting source.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "start_timestamp": {"name": "start_timestamp", "description": "A timestamp representing the start time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "web_conference_meeting_id": {"name": "web_conference_meeting_id", "description": "The ID of the web conference meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_meeting.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.705376, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    created_from_link_id\n    \n as \n    \n    created_from_link_id\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n, \n    \n    \n    external_url\n    \n as \n    \n    external_url\n    \n, \n    cast(null as \n    string\n) as \n    \n    location\n    \n , \n    \n    \n    meeting_outcome\n    \n as \n    \n    meeting_outcome\n    \n, \n    \n    \n    pre_meeting_prospect_reminders\n    \n as \n    \n    pre_meeting_prospect_reminders\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    web_conference_meeting_id\n    \n as \n    \n    web_conference_meeting_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as meeting_notes,\n        created_from_link_id,\n        end_time as end_timestamp,\n        engagement_id,\n        external_url,\n        meeting_outcome,\n        pre_meeting_prospect_reminders,\n        source,\n        source_id,\n        start_time as start_timestamp,\n        title as meeting_title,\n        web_conference_meeting_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting`"}, "model.hubspot_source.stg_hubspot__engagement_email": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_email_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_email_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_email_tmp')),\n                staging_columns=get_engagement_email_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        attached_video_id,\n        attached_video_opened as was_attached_video_opened,\n        attached_video_watched as was_attached_video_watched,\n        email_send_event_id_created as email_send_event_created_timestamp,\n        email_send_event_id_id as email_send_event_id,\n        engagement_id,\n        error_message,\n        facsimile_send_id,\n        from_email,\n        from_first_name,\n        from_last_name,\n        html as email_html,\n        logged_from,\n        media_processing_status,\n        message_id,\n        post_send_status,\n        recipient_drop_reasons,\n        sent_via,\n        status as email_status,\n        subject as email_subject,\n        text as email_text,\n        thread_id,\n        tracker_key,\n        validation_skipped\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_email_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_email_tmp", "model.hubspot_source.stg_hubspot__engagement_email_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_email"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_email", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_email.sql", "original_file_path": "models/stg_hubspot__engagement_email.sql", "name": "stg_hubspot__engagement_email", "alias": "stg_hubspot__engagement_email", "checksum": {"name": "sha256", "checksum": "edd7d47164f70610df36c264e85497c09e96507a9fb7cba4d4116f31eb16c0e4"}, "tags": [], "refs": [["stg_hubspot__engagement_email_tmp"], ["stg_hubspot__engagement_email_tmp"]], "sources": [], "description": "Each record represents an EMAIL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attached_video_id": {"name": "attached_video_id", "description": "The ID of the video attached.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_html": {"name": "email_html", "description": "The body of the HTML email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_created_timestamp": {"name": "email_send_event_created_timestamp", "description": "When the SENT event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_id": {"name": "email_send_event_id", "description": "The ID of the related SENT email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_status": {"name": "email_status", "description": "The status of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject of the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_text": {"name": "email_text", "description": "The body of the text-only email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "error_message": {"name": "error_message", "description": "The error message, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The email address of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_first_name": {"name": "from_first_name", "description": "The first name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_last_name": {"name": "from_last_name", "description": "The last name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "media_processing_status": {"name": "media_processing_status", "description": "The processing status of the media content in the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "message_id": {"name": "message_id", "description": "The ID of the message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_via": {"name": "sent_via", "description": "How the email was sent.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "thread_id": {"name": "thread_id", "description": "The ID of the email thread.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_attached_video_opened": {"name": "was_attached_video_opened", "description": "Whether the the attached video was opened.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_attached_video_watched": {"name": "was_attached_video_watched", "description": "Whether the the attached video was watched.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_email.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.701205, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    attached_video_id\n    \n as \n    \n    attached_video_id\n    \n, \n    \n    \n    attached_video_opened\n    \n as \n    \n    attached_video_opened\n    \n, \n    \n    \n    attached_video_watched\n    \n as \n    \n    attached_video_watched\n    \n, \n    \n    \n    email_send_event_id_created\n    \n as \n    \n    email_send_event_id_created\n    \n, \n    \n    \n    email_send_event_id_id\n    \n as \n    \n    email_send_event_id_id\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n, \n    \n    \n    error_message\n    \n as \n    \n    error_message\n    \n, \n    \n    \n    facsimile_send_id\n    \n as \n    \n    facsimile_send_id\n    \n, \n    \n    \n    from_email\n    \n as \n    \n    from_email\n    \n, \n    \n    \n    from_first_name\n    \n as \n    \n    from_first_name\n    \n, \n    \n    \n    from_last_name\n    \n as \n    \n    from_last_name\n    \n, \n    \n    \n    html\n    \n as \n    \n    html\n    \n, \n    \n    \n    logged_from\n    \n as \n    \n    logged_from\n    \n, \n    \n    \n    media_processing_status\n    \n as \n    \n    media_processing_status\n    \n, \n    cast(null as boolean) as \n    \n    member_of_forwarded_subthread\n    \n , \n    \n    \n    message_id\n    \n as \n    \n    message_id\n    \n, \n    \n    \n    post_send_status\n    \n as \n    \n    post_send_status\n    \n, \n    \n    \n    recipient_drop_reasons\n    \n as \n    \n    recipient_drop_reasons\n    \n, \n    \n    \n    sent_via\n    \n as \n    \n    sent_via\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    text\n    \n as \n    \n    text\n    \n, \n    \n    \n    thread_id\n    \n as \n    \n    thread_id\n    \n, \n    \n    \n    tracker_key\n    \n as \n    \n    tracker_key\n    \n, \n    \n    \n    validation_skipped\n    \n as \n    \n    validation_skipped\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        attached_video_id,\n        attached_video_opened as was_attached_video_opened,\n        attached_video_watched as was_attached_video_watched,\n        email_send_event_id_created as email_send_event_created_timestamp,\n        email_send_event_id_id as email_send_event_id,\n        engagement_id,\n        error_message,\n        facsimile_send_id,\n        from_email,\n        from_first_name,\n        from_last_name,\n        html as email_html,\n        logged_from,\n        media_processing_status,\n        message_id,\n        post_send_status,\n        recipient_drop_reasons,\n        sent_via,\n        status as email_status,\n        subject as email_subject,\n        text as email_text,\n        thread_id,\n        tracker_key,\n        validation_skipped\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email`"}, "model.hubspot_source.stg_hubspot__email_event_status_change": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_status_change_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_status_change_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_status_change_tmp')),\n                staging_columns=get_email_event_status_change_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bounced as is_bounced,\n        id as event_id,\n        portal_subscription_status as subscription_status,\n        requested_by as requested_by_email,\n        source as change_source,\n        subscriptions\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_status_change_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_status_change_tmp", "model.hubspot_source.stg_hubspot__email_event_status_change_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_status_change"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_status_change", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_status_change.sql", "original_file_path": "models/stg_hubspot__email_event_status_change.sql", "name": "stg_hubspot__email_event_status_change", "alias": "stg_hubspot__email_event_status_change", "checksum": {"name": "sha256", "checksum": "47cf9452432fd6984c4804eafa08188df00800c45c65d7be98bc993031756230"}, "tags": [], "refs": [["stg_hubspot__email_event_status_change_tmp"], ["stg_hubspot__email_event_status_change_tmp"]], "sources": [], "description": "Each record represents a STATUS_CHANGE email event in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source of the subscription change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_bounced": {"name": "is_bounced", "description": "A HubSpot employee explicitly initiated the status change to block messages to the recipient. \n(Note this usage has been deprecated in favor of dropping messages with a 'dropReason' of BLOCKED_ADDRESS.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requested_by_email": {"name": "requested_by_email", "description": "The email address of the person requesting the change on behalf of the recipient. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subscription_status": {"name": "subscription_status", "description": "The recipient's portal subscription status. \nNote that if this is 'UNSUBSCRIBED', the property 'subscriptions' is not necessarily an empty array, nor are all \nsubscriptions contained in it necessarily going to have their statuses set to 'UNSUBSCRIBED'.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subscriptions": {"name": "subscriptions", "description": "An array of JSON objects representing the status of subscriptions for the recipient. \nEach JSON subscription object is comprised of the properties: 'id', 'status'.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_status_change.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.625151, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    bounced\n    \n as \n    \n    bounced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    portal_subscription_status\n    \n as \n    \n    portal_subscription_status\n    \n, \n    \n    \n    requested_by\n    \n as \n    \n    requested_by\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    subscriptions\n    \n as \n    \n    subscriptions\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bounced as is_bounced,\n        id as event_id,\n        portal_subscription_status as subscription_status,\n        requested_by as requested_by_email,\n        source as change_source,\n        subscriptions\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change`"}, "model.hubspot_source.stg_hubspot__contact_list_member": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_member_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__contact_list_member_tmp') }} \n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_list_member_tmp')),\n                staging_columns=get_contact_list_member_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        added_at as added_timestamp,\n        contact_id,\n        contact_list_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_contact_list_member_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__contact_list_member_tmp", "model.hubspot_source.stg_hubspot__contact_list_member_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__contact_list_member"], "unique_id": "model.hubspot_source.stg_hubspot__contact_list_member", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__contact_list_member.sql", "original_file_path": "models/stg_hubspot__contact_list_member.sql", "name": "stg_hubspot__contact_list_member", "alias": "stg_hubspot__contact_list_member", "checksum": {"name": "sha256", "checksum": "2c31809e6613abd9cc024596a0fd5a91abb72f450d3708f52a6f1f4784d0a127"}, "tags": [], "refs": [["stg_hubspot__contact_list_member_tmp"], ["stg_hubspot__contact_list_member_tmp"]], "sources": [], "description": "Each record represents a 'link' between a contact and a contact list.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "added_timestamp": {"name": "added_timestamp", "description": "The timestamp a contact was added to a list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_id": {"name": "contact_list_id", "description": "The ID of the related contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__contact.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact_list_member.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.543512, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_member_tmp` \n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    added_at\n    \n as \n    \n    added_at\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    contact_list_id\n    \n as \n    \n    contact_list_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        added_at as added_timestamp,\n        contact_id,\n        contact_list_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_member`"}, "model.hubspot_source.stg_hubspot__contact": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__contact_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_tmp')),\n                staging_columns=get_contact_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        id as contact_id,\n\n{% if var('hubspot__pass_through_all_columns', false) %}\n        -- just pass everything through\n        {{ \n            fivetran_utils.remove_prefix_from_columns(\n                columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_tmp')), \n                prefix='property_', exclude=['id', 'property_contact_id']) \n        }}\n    from base\n\n{% else %}\n        -- just default columns + explicitly configured passthrough columns\n        property_email as email,\n        property_company as contact_company,\n        property_firstname as first_name,\n        property_lastname as last_name,\n        property_createdate as created_at,\n        property_jobtitle as job_title,\n        property_annualrevenue as company_annual_revenue,\n        _fivetran_deleted,\n        _fivetran_synced\n\n        --The below macro adds the fields defined within your hubspot__contact_pass_through_columns variable into the staging model\n        {{ fivetran_utils.fill_pass_through_columns('hubspot__contact_pass_through_columns') }}\n\n        -- The below macro add the ability to create calculated fields using the hubspot__contact_calculated_fields variable.\n        {{ fivetran_utils.calculated_fields('hubspot__contact_calculated_fields') }}\n\n    from macro\n{% endif %}    \n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_contact_columns", "macro.fivetran_utils.fill_staging_columns", "macro.fivetran_utils.fill_pass_through_columns", "macro.fivetran_utils.calculated_fields"], "nodes": ["model.hubspot_source.stg_hubspot__contact_tmp", "model.hubspot_source.stg_hubspot__contact_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__contact"], "unique_id": "model.hubspot_source.stg_hubspot__contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__contact.sql", "original_file_path": "models/stg_hubspot__contact.sql", "name": "stg_hubspot__contact", "alias": "stg_hubspot__contact", "checksum": {"name": "sha256", "checksum": "43c0d771a643ce9cfd69d04a8a1cb2214f08877f292f90d171db9a44b895146b"}, "tags": [], "refs": [["stg_hubspot__contact_tmp"], ["stg_hubspot__contact_tmp"]], "sources": [], "description": "Each record represents a contact in Hubspot.", "columns": {"contact_id": {"name": "contact_id", "description": "The ID of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "The contact's email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_company": {"name": "contact_company", "description": "The name of the contact's company", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "The contact's first name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "The contact's last name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The date that the contact was created in your HubSpot account.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "job_title": {"name": "job_title", "description": "The contact's job title.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_annual_revenue": {"name": "company_annual_revenue", "description": "The contact's annual company revenue.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__contact.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.585305, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as \n    timestamp\n) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    property_email\n    \n as \n    \n    property_email\n    \n, \n    cast(null as \n    string\n) as \n    \n    property_company\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_firstname\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_lastname\n    \n , \n    cast(null as \n    timestamp\n) as \n    \n    property_createdate\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_jobtitle\n    \n , \n    cast(null as \n    int64\n) as \n    \n    property_annualrevenue\n    \n \n\n\n    from base\n\n), fields as (\n\n    select\n        id as contact_id,\n\n\n        -- just default columns + explicitly configured passthrough columns\n        property_email as email,\n        property_company as contact_company,\n        property_firstname as first_name,\n        property_lastname as last_name,\n        property_createdate as created_at,\n        property_jobtitle as job_title,\n        property_annualrevenue as company_annual_revenue,\n        _fivetran_deleted,\n        _fivetran_synced\n\n        --The below macro adds the fields defined within your hubspot__contact_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n        -- The below macro add the ability to create calculated fields using the hubspot__contact_calculated_fields variable.\n        \n\n\n\n    from macro\n    \n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact`"}, "model.hubspot_source.stg_hubspot__deal": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_tmp')),\n                staging_columns=get_deal_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n\n{% if var('hubspot__pass_through_all_columns', false) %}\n        -- just pass everything through\n        {{ \n            fivetran_utils.remove_prefix_from_columns(\n                columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_tmp')), \n                prefix='property_') \n        }}\n    from base\n\n{% else %}\n        -- just default columns + explicitly configured passthrough columns\n        _fivetran_synced,\n        is_deleted,\n        deal_id,\n        cast(deal_pipeline_id as {{ dbt_utils.type_string() }}) as deal_pipeline_id,\n        cast(deal_pipeline_stage_id as {{ dbt_utils.type_string() }}) as deal_pipeline_stage_id,\n        owner_id,\n        portal_id,\n        property_dealname as deal_name,\n        property_description as description,\n        property_amount as amount,\n        property_closedate as closed_at,\n        property_createdate as created_at\n\n        --The below macro adds the fields defined within your hubspot__deal_pass_through_columns variable into the staging model\n        {{ fivetran_utils.fill_pass_through_columns('hubspot__deal_pass_through_columns') }}\n\n        -- The below macro add the ability to create calculated fields using the hubspot__deal_calculated_fields variable.\n        {{ fivetran_utils.calculated_fields('hubspot__deal_calculated_fields') }}\n\n    from macro\n{% endif %}\n\n)\n\nselect *\nfrom fields\nwhere not coalesce(is_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.type_string", "macro.fivetran_utils.fill_pass_through_columns", "macro.fivetran_utils.calculated_fields"], "nodes": ["model.hubspot_source.stg_hubspot__deal_tmp", "model.hubspot_source.stg_hubspot__deal_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal"], "unique_id": "model.hubspot_source.stg_hubspot__deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal.sql", "original_file_path": "models/stg_hubspot__deal.sql", "name": "stg_hubspot__deal", "alias": "stg_hubspot__deal", "checksum": {"name": "sha256", "checksum": "b6bc92c3a0009fece78d83f892f8e8802e46c4efdedc105ea9930d70cef94755"}, "tags": [], "refs": [["stg_hubspot__deal_tmp"], ["stg_hubspot__deal_tmp"]], "sources": [], "description": "Each record represents a deal in Hubspot.", "columns": {"deal_id": {"name": "deal_id", "description": "The ID of the deal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_stage_id": {"name": "deal_pipeline_stage_id", "description": "The ID of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_name": {"name": "deal_name", "description": "The name you have given this deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "A brief description of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "amount": {"name": "amount", "description": "The total value of the deal in the deal's currency.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "closed_at": {"name": "closed_at", "description": "The day the deal is expected to close, or was closed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The date the deal was created. This property is set automatically by HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.5062962, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as \n    timestamp\n) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    deal_pipeline_id\n    \n as \n    \n    deal_pipeline_id\n    \n, \n    \n    \n    deal_pipeline_stage_id\n    \n as \n    \n    deal_pipeline_stage_id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    cast(null as \n    int64\n) as \n    \n    portal_id\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_dealname\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_description\n    \n , \n    cast(null as \n    int64\n) as \n    \n    property_amount\n    \n , \n    cast(null as \n    timestamp\n) as \n    \n    property_closedate\n    \n , \n    cast(null as \n    timestamp\n) as \n    \n    property_createdate\n    \n \n\n\n    from base\n\n), fields as (\n\n    select\n\n\n        -- just default columns + explicitly configured passthrough columns\n        _fivetran_synced,\n        is_deleted,\n        deal_id,\n        cast(deal_pipeline_id as \n    string\n) as deal_pipeline_id,\n        cast(deal_pipeline_stage_id as \n    string\n) as deal_pipeline_stage_id,\n        owner_id,\n        portal_id,\n        property_dealname as deal_name,\n        property_description as description,\n        property_amount as amount,\n        property_closedate as closed_at,\n        property_createdate as created_at\n\n        --The below macro adds the fields defined within your hubspot__deal_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n        -- The below macro add the ability to create calculated fields using the hubspot__deal_calculated_fields variable.\n        \n\n\n\n    from macro\n\n\n)\n\nselect *\nfrom fields\nwhere not coalesce(is_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`"}, "model.hubspot_source.stg_hubspot__deal_pipeline": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_pipeline_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_pipeline_tmp')),\n                staging_columns=get_deal_pipeline_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        display_order,\n        label as pipeline_label,\n        cast(pipeline_id as {{ dbt_utils.type_string() }}) as deal_pipeline_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_pipeline_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.type_string"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline_tmp", "model.hubspot_source.stg_hubspot__deal_pipeline_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_pipeline"], "unique_id": "model.hubspot_source.stg_hubspot__deal_pipeline", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_pipeline.sql", "original_file_path": "models/stg_hubspot__deal_pipeline.sql", "name": "stg_hubspot__deal_pipeline", "alias": "stg_hubspot__deal_pipeline", "checksum": {"name": "sha256", "checksum": "2d7e5f348c37bd618f40433657e198c2f03f175ba32d8f4a161b6ceb3ff509ea"}, "tags": [], "refs": [["stg_hubspot__deal_pipeline_tmp"], ["stg_hubspot__deal_pipeline_tmp"]], "sources": [], "description": "Each record represents a pipeline in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the pipelines appear when viewed in HubSpot", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the stage is currently in use.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_label": {"name": "pipeline_label", "description": "The human-readable label for the pipeline. The label is used when showing the pipeline in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_pipeline.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.503032, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    display_order\n    \n as \n    \n    display_order\n    \n, \n    \n    \n    label\n    \n as \n    \n    label\n    \n, \n    \n    \n    pipeline_id\n    \n as \n    \n    pipeline_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        display_order,\n        label as pipeline_label,\n        cast(pipeline_id as \n    string\n) as deal_pipeline_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`"}, "model.hubspot_source.stg_hubspot__deal_company": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled','hubspot_deal_company_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_company_tmp') }}\n\n), macro as (\n\n    select \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_company_tmp')),\n                staging_columns=get_deal_company_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        company_id,\n        deal_id,\n        _fivetran_synced\n        \n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_company_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__deal_company_tmp", "model.hubspot_source.stg_hubspot__deal_company_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_company"], "unique_id": "model.hubspot_source.stg_hubspot__deal_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_company.sql", "original_file_path": "models/stg_hubspot__deal_company.sql", "name": "stg_hubspot__deal_company", "alias": "stg_hubspot__deal_company", "checksum": {"name": "sha256", "checksum": "c983b53b3367493154bef750609cb5e6985ae420a959fb1c0685ad9a781f2372"}, "tags": [], "refs": [["stg_hubspot__deal_company_tmp"], ["stg_hubspot__deal_company_tmp"]], "sources": [], "description": "Each record represents a 'link' between a deal and company.", "columns": {"company_id": {"name": "company_id", "description": "The ID of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_company.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.51038, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_company_tmp`\n\n), macro as (\n\n    select \n        \n    cast(null as \n    timestamp\n) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        company_id,\n        deal_id,\n        _fivetran_synced\n        \n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_company`"}, "model.hubspot_source.stg_hubspot__engagement_note": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_note_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_note_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_note_tmp')),\n                staging_columns=get_engagement_note_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as note,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_note_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_note_tmp", "model.hubspot_source.stg_hubspot__engagement_note_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_note"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_note", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_note.sql", "original_file_path": "models/stg_hubspot__engagement_note.sql", "name": "stg_hubspot__engagement_note", "alias": "stg_hubspot__engagement_note", "checksum": {"name": "sha256", "checksum": "7b310c029c7520e9bbf11fcdde24318af6cf4e23b59f246479f692b7893809e6"}, "tags": [], "refs": [["stg_hubspot__engagement_note_tmp"], ["stg_hubspot__engagement_note_tmp"]], "sources": [], "description": "Each record represents a NOTE engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "note": {"name": "note", "description": "The body of the note. The body has a limit of 65536 characters.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_note.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.7068422, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as note,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note`"}, "model.hubspot_source.stg_hubspot__engagement_contact": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_contact_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_contact_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_contact_tmp')),\n                staging_columns=get_engagement_contact_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        contact_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_contact_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_contact_tmp", "model.hubspot_source.stg_hubspot__engagement_contact_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_contact"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_contact.sql", "original_file_path": "models/stg_hubspot__engagement_contact.sql", "name": "stg_hubspot__engagement_contact", "alias": "stg_hubspot__engagement_contact", "checksum": {"name": "sha256", "checksum": "b19c1faca89259973191ee9267a2f2ac0af262a365eb881c9ea16e702478435a"}, "tags": [], "refs": [["stg_hubspot__engagement_contact_tmp"], ["stg_hubspot__engagement_contact_tmp"]], "sources": [], "description": "Each record represents a 'link' between a contact and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_contact.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.69311, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        contact_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`"}, "model.hubspot_source.stg_hubspot__contact_list": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__contact_list_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_list_tmp')),\n                staging_columns=get_contact_list_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        created_at as created_timestamp,\n        deleteable as is_deletable,\n        dynamic as is_dynamic,\n        id as contact_list_id,\n        metadata_error,\n        metadata_last_processing_state_change_at,\n        metadata_last_size_change_at,\n        metadata_processing,\n        metadata_size,\n        name as contact_list_name,\n        portal_id,\n        updated_at as updated_timestamp\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_contact_list_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__contact_list_tmp", "model.hubspot_source.stg_hubspot__contact_list_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__contact_list"], "unique_id": "model.hubspot_source.stg_hubspot__contact_list", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__contact_list.sql", "original_file_path": "models/stg_hubspot__contact_list.sql", "name": "stg_hubspot__contact_list", "alias": "stg_hubspot__contact_list", "checksum": {"name": "sha256", "checksum": "7d60fa5b22c108bf1b0e3248455a68852a9b7f1a21dbeec34be0ff1485031c95"}, "tags": [], "refs": [["stg_hubspot__contact_list_tmp"], ["stg_hubspot__contact_list_tmp"]], "sources": [], "description": "Each record represents a contact list in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_id": {"name": "contact_list_id", "description": "The ID of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_name": {"name": "contact_list_name", "description": "The name of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp of the time the list was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deletable": {"name": "is_deletable", "description": "If this is false, this is a system list and cannot be deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_dynamic": {"name": "is_dynamic", "description": "Whether the contact list is dynamic.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_error": {"name": "metadata_error", "description": "Any errors that happened the last time the list was processed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_processing_state_change_at": {"name": "metadata_last_processing_state_change_at", "description": "A timestamp of the last time that the processing state changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_size_change_at": {"name": "metadata_last_size_change_at", "description": "A timestamp of the last time that the size of the list changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_processing": {"name": "metadata_processing", "description": "One of DONE, REFRESHING, INITIALIZING, or PROCESSING. \nDONE indicates the list has finished processing, any other value indicates that list membership is being evaluated.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_size": {"name": "metadata_size", "description": "The approximate number of contacts in the list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "A timestamp of the time that the list was last modified.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__contact.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact_list.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.5682921, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    deleteable\n    \n as \n    \n    deleteable\n    \n, \n    \n    \n    dynamic\n    \n as \n    \n    dynamic\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    metadata_error\n    \n as \n    \n    metadata_error\n    \n, \n    \n    \n    metadata_last_processing_state_change_at\n    \n as \n    \n    metadata_last_processing_state_change_at\n    \n, \n    \n    \n    metadata_last_size_change_at\n    \n as \n    \n    metadata_last_size_change_at\n    \n, \n    \n    \n    metadata_processing\n    \n as \n    \n    metadata_processing\n    \n, \n    \n    \n    metadata_size\n    \n as \n    \n    metadata_size\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    portal_id\n    \n as \n    \n    portal_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        created_at as created_timestamp,\n        deleteable as is_deletable,\n        dynamic as is_dynamic,\n        id as contact_list_id,\n        metadata_error,\n        metadata_last_processing_state_change_at,\n        metadata_last_size_change_at,\n        metadata_processing,\n        metadata_size,\n        name as contact_list_name,\n        portal_id,\n        updated_at as updated_timestamp\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list`"}, "model.hubspot_source.stg_hubspot__email_event_spam_report": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_spam_report_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_spam_report_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_spam_report_tmp')),\n                staging_columns=get_email_event_spam_report_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        id as event_id,\n        ip_address,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_spam_report_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_spam_report_tmp", "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_spam_report"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_spam_report", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_spam_report.sql", "original_file_path": "models/stg_hubspot__email_event_spam_report.sql", "name": "stg_hubspot__email_event_spam_report", "alias": "stg_hubspot__email_event_spam_report", "checksum": {"name": "sha256", "checksum": "85421198bb7bbdce49003dbf19fccf4704af2b5f9725d4bce09b5d4bbee33826"}, "tags": [], "refs": [["stg_hubspot__email_event_spam_report_tmp"], ["stg_hubspot__email_event_spam_report_tmp"]], "sources": [], "description": "Each record represents a SPAM_REPORT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_spam_report.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.622268, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ip_address\n    \n as \n    \n    ip_address\n    \n, \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        id as event_id,\n        ip_address,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report`"}, "model.hubspot_source.stg_hubspot__deal_pipeline_stage": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_pipeline_stage_tmp') }}\n\n), macro as (\n\n    select \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_pipeline_stage_tmp')),\n                staging_columns=get_deal_pipeline_stage_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        closed_won as is_closed_won,\n        display_order,\n        label as pipeline_stage_label,\n        pipeline_id as deal_pipeline_id,\n        probability,\n        cast(stage_id as {{ dbt_utils.type_string() }}) as deal_pipeline_stage_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_pipeline_stage_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.type_string"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp", "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_pipeline_stage"], "unique_id": "model.hubspot_source.stg_hubspot__deal_pipeline_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_pipeline_stage.sql", "original_file_path": "models/stg_hubspot__deal_pipeline_stage.sql", "name": "stg_hubspot__deal_pipeline_stage", "alias": "stg_hubspot__deal_pipeline_stage", "checksum": {"name": "sha256", "checksum": "210f8a837e061de0f88557699f81f1eb6328131064b6d796b69c3cd0e23f7a5f"}, "tags": [], "refs": [["stg_hubspot__deal_pipeline_stage_tmp"], ["stg_hubspot__deal_pipeline_stage_tmp"]], "sources": [], "description": "Each record represents a pipeline stage in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the related pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_stage_id": {"name": "deal_pipeline_stage_id", "description": "The ID of the pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the stages appear when viewed in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the pipeline stage is currently in use.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_closed_won": {"name": "is_closed_won", "description": "Whether the stage represents a Closed Won deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_stage_label": {"name": "pipeline_stage_label", "description": "The human-readable label for the stage. The label is used when showing the stage in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "probability": {"name": "probability", "description": "The probability that the deal will close. Used for the deal forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_pipeline_stage.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.50091, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage_tmp`\n\n), macro as (\n\n    select \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    closed_won\n    \n as \n    \n    closed_won\n    \n, \n    \n    \n    display_order\n    \n as \n    \n    display_order\n    \n, \n    \n    \n    label\n    \n as \n    \n    label\n    \n, \n    \n    \n    pipeline_id\n    \n as \n    \n    pipeline_id\n    \n, \n    \n    \n    probability\n    \n as \n    \n    probability\n    \n, \n    \n    \n    stage_id\n    \n as \n    \n    stage_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        closed_won as is_closed_won,\n        display_order,\n        label as pipeline_stage_label,\n        pipeline_id as deal_pipeline_id,\n        probability,\n        cast(stage_id as \n    string\n) as deal_pipeline_stage_id\n    from macro\n    \n)\n\nselect *\nfrom fields\nwhere not coalesce(_fivetran_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`"}, "model.hubspot_source.stg_hubspot__email_event_dropped": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_dropped_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_dropped_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_dropped_tmp')),\n                staging_columns=get_email_event_dropped_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bcc as bcc_emails,\n        cc as cc_emails,\n        drop_message,\n        drop_reason,\n        from_email,\n        id as event_id,\n        reply_to as reply_to_email,\n        subject as email_subject\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_dropped_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_dropped_tmp", "model.hubspot_source.stg_hubspot__email_event_dropped_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_dropped"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_dropped", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_dropped.sql", "original_file_path": "models/stg_hubspot__email_event_dropped.sql", "name": "stg_hubspot__email_event_dropped", "alias": "stg_hubspot__email_event_dropped", "checksum": {"name": "sha256", "checksum": "2d5939db8f2fb9a3bfbc5e734b8554fad4dbd3dfc3401c90cad38a532ba467f0"}, "tags": [], "refs": [["stg_hubspot__email_event_dropped_tmp"], ["stg_hubspot__email_event_dropped_tmp"]], "sources": [], "description": "Each record represents a DROPPED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc_emails": {"name": "bcc_emails", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc_emails": {"name": "cc_emails", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_message": {"name": "drop_message", "description": "The raw message describing why the email message was dropped. This will usually provide additional details beyond 'dropReason'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_reason": {"name": "drop_reason", "description": "The reason why the email message was dropped. See below for the possible values.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to_email": {"name": "reply_to_email", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_dropped.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.6097841, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    bcc\n    \n as \n    \n    bcc\n    \n, \n    \n    \n    cc\n    \n as \n    \n    cc\n    \n, \n    \n    \n    drop_message\n    \n as \n    \n    drop_message\n    \n, \n    \n    \n    drop_reason\n    \n as \n    \n    drop_reason\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    reply_to\n    \n as \n    \n    reply_to\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n        \n            \n            `from`\n            \n        \n    \n as from_email \n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bcc as bcc_emails,\n        cc as cc_emails,\n        drop_message,\n        drop_reason,\n        from_email,\n        id as event_id,\n        reply_to as reply_to_email,\n        subject as email_subject\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped`"}, "model.hubspot_source.stg_hubspot__deal_stage": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_hubspot__deal_stage_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_stage_tmp')),\n                staging_columns=get_deal_stage_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        date_entered,\n        deal_id,\n        source,\n        source_id,\n        value as deal_stage_name,\n        _fivetran_active,\n        _fivetran_end,\n        _fivetran_start\n    from fields\n)\n\nselect * \nfrom final", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_stage_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__deal_stage_tmp", "model.hubspot_source.stg_hubspot__deal_stage_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_stage"], "unique_id": "model.hubspot_source.stg_hubspot__deal_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_stage.sql", "original_file_path": "models/stg_hubspot__deal_stage.sql", "name": "stg_hubspot__deal_stage", "alias": "stg_hubspot__deal_stage", "checksum": {"name": "sha256", "checksum": "bb5e4d21137deba5d5a08fcf0c5e6d646ac24eff16a58fb067f3193acf6eb05e"}, "tags": [], "refs": [["stg_hubspot__deal_stage_tmp"], ["stg_hubspot__deal_stage_tmp"]], "sources": [], "description": "Each record represents a deal stage.", "columns": {"_fivetran_active": {"name": "_fivetran_active", "description": "Boolean indicating whether the deal stage is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_end": {"name": "_fivetran_end", "description": "The Fivetran calculated exist time of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_start": {"name": "_fivetran_start", "description": "The date the deal stage was entered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_entered": {"name": "date_entered", "description": "The timestamp the deal stage was entered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "Reference to the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The relevant source of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "Reference to the source.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_stage_name": {"name": "deal_stage_name", "description": "The value of the deal stage. Typically the name of the stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_stage.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.509442, "compiled_sql": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_stage_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date_entered\n    \n as \n    \n    date_entered\n    \n, \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        date_entered,\n        deal_id,\n        source,\n        source_id,\n        value as deal_stage_name,\n        _fivetran_active,\n        _fivetran_end,\n        _fivetran_start\n    from fields\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_stage`"}, "model.hubspot_source.stg_hubspot__deal_property_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_property_history_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_property_history_tmp')),\n                staging_columns=get_deal_property_history_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        deal_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_property_history_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__deal_property_history_tmp", "model.hubspot_source.stg_hubspot__deal_property_history_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_property_history"], "unique_id": "model.hubspot_source.stg_hubspot__deal_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_property_history.sql", "original_file_path": "models/stg_hubspot__deal_property_history.sql", "name": "stg_hubspot__deal_property_history", "alias": "stg_hubspot__deal_property_history", "checksum": {"name": "sha256", "checksum": "d5a1b5ea2f28e232ad9e562b7baac22d94d4aece9b549a47a84ffba8f7d867f5"}, "tags": [], "refs": [["stg_hubspot__deal_property_history_tmp"], ["stg_hubspot__deal_property_history_tmp"]], "sources": [], "description": "Each record represents the details of your deal properties.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_timestamp": {"name": "change_timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related deal record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__deal.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_property_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.512718, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_property_history_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    timestamp\n    \n as change_timestamp , \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        deal_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_property_history`"}, "model.hubspot_source.stg_hubspot__email_event_forward": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_forward_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_forward_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_forward_tmp')),\n                staging_columns=get_email_event_forward_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_forward_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_forward_tmp", "model.hubspot_source.stg_hubspot__email_event_forward_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_forward"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_forward", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_forward.sql", "original_file_path": "models/stg_hubspot__email_event_forward.sql", "name": "stg_hubspot__email_event_forward", "alias": "stg_hubspot__email_event_forward", "checksum": {"name": "sha256", "checksum": "00813368b7860a58153dc20ec275a28fc00a8dd68d9713af5f7d2ea784f8d205"}, "tags": [], "refs": [["stg_hubspot__email_event_forward_tmp"], ["stg_hubspot__email_event_forward_tmp"]], "sources": [], "description": "Each record represents a FORWARD email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_forward.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.612136, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    browser\n    \n as \n    \n    browser\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ip_address\n    \n as \n    \n    ip_address\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward`"}, "model.hubspot_source.stg_hubspot__email_event_bounce": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_bounce_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_bounce_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_bounce_tmp')),\n                staging_columns=get_email_event_bounce_columns()\n            )\n        }}\n    from base\n    \n), fields as (\n\n    select\n        _fivetran_synced,\n        category as bounce_category,\n        id as event_id,\n        response as returned_response,\n        status as returned_status\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_bounce_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_bounce_tmp", "model.hubspot_source.stg_hubspot__email_event_bounce_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_bounce"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_bounce", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_bounce.sql", "original_file_path": "models/stg_hubspot__email_event_bounce.sql", "name": "stg_hubspot__email_event_bounce", "alias": "stg_hubspot__email_event_bounce", "checksum": {"name": "sha256", "checksum": "025e8ac7e6d46d4db4879f113c367e3ba915d1179642f26a1afb35d61cf78d77"}, "tags": [], "refs": [["stg_hubspot__email_event_bounce_tmp"], ["stg_hubspot__email_event_bounce_tmp"]], "sources": [], "description": "Each record represents a BOUNCE email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bounce_category": {"name": "bounce_category", "description": "The best-guess of the type of bounce encountered. \nIf an appropriate category couldn't be determined, this property is omitted. See below for the possible values. \nNote that this is a derived value, and may be modified at any time to improve the accuracy of classification.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_status": {"name": "returned_status", "description": "The status code returned from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_bounce.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.59961, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    response\n    \n as \n    \n    response\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n    from base\n    \n), fields as (\n\n    select\n        _fivetran_synced,\n        category as bounce_category,\n        id as event_id,\n        response as returned_response,\n        status as returned_status\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce`"}, "model.hubspot_source.stg_hubspot__engagement_company": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_company_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_company_tmp') }}\n\n), macro as (\n\n    select \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_company_tmp')),\n                staging_columns=get_engagement_company_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        company_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_company_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_company_tmp", "model.hubspot_source.stg_hubspot__engagement_company_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_company"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_company.sql", "original_file_path": "models/stg_hubspot__engagement_company.sql", "name": "stg_hubspot__engagement_company", "alias": "stg_hubspot__engagement_company", "checksum": {"name": "sha256", "checksum": "a82033c7d83fb6aa8c725ec650e15509e3f63bb9cc935ad55e8f500d16e876a0"}, "tags": [], "refs": [["stg_hubspot__engagement_company_tmp"], ["stg_hubspot__engagement_company_tmp"]], "sources": [], "description": "Each record represents a 'link' between a company and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_company.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.691545, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_company_tmp`\n\n), macro as (\n\n    select \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        company_id,\n        engagement_id\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_company`"}, "model.hubspot_source.stg_hubspot__email_event_deferred": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_deferred_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_deferred_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_deferred_tmp')),\n                staging_columns=get_email_event_deferred_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        attempt as attempt_number,\n        id as event_id,\n        response as returned_response\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_deferred_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_deferred_tmp", "model.hubspot_source.stg_hubspot__email_event_deferred_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_deferred"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_deferred", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_deferred.sql", "original_file_path": "models/stg_hubspot__email_event_deferred.sql", "name": "stg_hubspot__email_event_deferred", "alias": "stg_hubspot__email_event_deferred", "checksum": {"name": "sha256", "checksum": "48b248becf6638995434435185f496caa08055bb06a77aa97929f0e9bddcaa3d"}, "tags": [], "refs": [["stg_hubspot__email_event_deferred_tmp"], ["stg_hubspot__email_event_deferred_tmp"]], "sources": [], "description": "Each record represents a DEFERRED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attempt_number": {"name": "attempt_number", "description": "The delivery attempt number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_deferred.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.60464, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    attempt\n    \n as \n    \n    attempt\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    response\n    \n as \n    \n    response\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        attempt as attempt_number,\n        id as event_id,\n        response as returned_response\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred`"}, "model.hubspot_source.stg_hubspot__company": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__company_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__company_tmp')),\n                staging_columns=get_company_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        id as company_id,\n\n{% if var('hubspot__pass_through_all_columns', false) %}\n        -- just pass everything through\n        {{ \n            fivetran_utils.remove_prefix_from_columns(\n                columns=adapter.get_columns_in_relation(ref('stg_hubspot__company_tmp')), \n                prefix='property_', exclude=['id']\n            ) \n        }}\n\n    from base\n\n{% else %}\n        -- just default columns + explicitly configured passthrough columns\n        _fivetran_synced,\n        is_deleted,\n        property_name as company_name,\n        property_description as description,\n        property_createdate as created_at,\n        property_industry as industry,\n        property_address as street_address,\n        property_address_2 as street_address_2,\n        property_city as city,\n        property_state as state,\n        property_country as country,\n        property_annualrevenue as company_annual_revenue\n        \n        --The below macro adds the fields defined within your hubspot__ticket_pass_through_columns variable into the staging model\n        {{ fivetran_utils.fill_pass_through_columns('hubspot__company_pass_through_columns') }}\n\n        -- The below macro add the ability to create calculated fields using the hubspot__company_calculated_fields variable.\n        {{ fivetran_utils.calculated_fields('hubspot__company_calculated_fields') }}\n        \n    from macro\n\n{% endif %}\n)\n\nselect *\nfrom fields\nwhere not coalesce(is_deleted, false)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_company_columns", "macro.fivetran_utils.fill_staging_columns", "macro.fivetran_utils.fill_pass_through_columns", "macro.fivetran_utils.calculated_fields"], "nodes": ["model.hubspot_source.stg_hubspot__company_tmp", "model.hubspot_source.stg_hubspot__company_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__company"], "unique_id": "model.hubspot_source.stg_hubspot__company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__company.sql", "original_file_path": "models/stg_hubspot__company.sql", "name": "stg_hubspot__company", "alias": "stg_hubspot__company", "checksum": {"name": "sha256", "checksum": "76029f613d480015f7b3f3ff015172a2ad9d619d1fc5ad881a5454aba6e50795"}, "tags": [], "refs": [["stg_hubspot__company_tmp"], ["stg_hubspot__company_tmp"]], "sources": [], "description": "Each record represents a company in Hubspot.", "columns": {"company_id": {"name": "company_id", "description": "The ID of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_name": {"name": "company_name", "description": "The name of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "A short statement about the company's mission and goals.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "The date the company was added to your account.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "industry": {"name": "industry", "description": "The type of business the company performs.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "street_address": {"name": "street_address", "description": "The street address of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "street_address_2": {"name": "street_address_2", "description": "Additional address information for the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "city": {"name": "city", "description": "The city where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "state": {"name": "state", "description": "The state where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "country": {"name": "country", "description": "The country where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_annual_revenue": {"name": "company_annual_revenue", "description": "The actual or estimated annual revenue of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__company.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__company.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.966052, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_tmp`\n\n), macro as (\n\n    select\n        \n    cast(null as \n    timestamp\n) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    cast(null as \n    string\n) as \n    \n    property_name\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_description\n    \n , \n    cast(null as \n    timestamp\n) as \n    \n    property_createdate\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_industry\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_address\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_address_2\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_city\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_state\n    \n , \n    cast(null as \n    string\n) as \n    \n    property_country\n    \n , \n    cast(null as \n    int64\n) as \n    \n    property_annualrevenue\n    \n \n\n\n    from base\n\n), fields as (\n\n    select\n        id as company_id,\n\n\n        -- just default columns + explicitly configured passthrough columns\n        _fivetran_synced,\n        is_deleted,\n        property_name as company_name,\n        property_description as description,\n        property_createdate as created_at,\n        property_industry as industry,\n        property_address as street_address,\n        property_address_2 as street_address_2,\n        property_city as city,\n        property_state as state,\n        property_country as country,\n        property_annualrevenue as company_annual_revenue\n        \n        --The below macro adds the fields defined within your hubspot__ticket_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n        -- The below macro add the ability to create calculated fields using the hubspot__company_calculated_fields variable.\n        \n\n\n        \n    from macro\n\n\n)\n\nselect *\nfrom fields\nwhere not coalesce(is_deleted, false)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company`"}, "model.hubspot_source.stg_hubspot__deal_contact": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled','hubspot_deal_contact_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__deal_contact_tmp') }}\n\n), macro as (\n\n    select \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__deal_contact_tmp')),\n                staging_columns=get_deal_contact_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        contact_id,\n        deal_id,\n        _fivetran_synced\n        \n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_deal_contact_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__deal_contact_tmp", "model.hubspot_source.stg_hubspot__deal_contact_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__deal_contact"], "unique_id": "model.hubspot_source.stg_hubspot__deal_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__deal_contact.sql", "original_file_path": "models/stg_hubspot__deal_contact.sql", "name": "stg_hubspot__deal_contact", "alias": "stg_hubspot__deal_contact", "checksum": {"name": "sha256", "checksum": "8cc9751b0ba46e41a08d216ebac3398320573aaddb5916ebf07db94f35bf28a8"}, "tags": [], "refs": [["stg_hubspot__deal_contact_tmp"], ["stg_hubspot__deal_contact_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal_contact.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143061.840929, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_contact_tmp`\n\n), macro as (\n\n    select \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    deal_id\n    \n as \n    \n    deal_id\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        contact_id,\n        deal_id,\n        _fivetran_synced\n        \n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_contact`"}, "model.hubspot_source.stg_hubspot__email_event_click": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_click_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_click_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_click_tmp')),\n                staging_columns=get_email_event_click_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        referer as referer_url,\n        url as click_url,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_click_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_click_tmp", "model.hubspot_source.stg_hubspot__email_event_click_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_click"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_click", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_click.sql", "original_file_path": "models/stg_hubspot__email_event_click.sql", "name": "stg_hubspot__email_event_click", "alias": "stg_hubspot__email_event_click", "checksum": {"name": "sha256", "checksum": "9b390439502d6d4b7fc06e29435dc73e8af78365e92c4577749d8108ebd3c0b5"}, "tags": [], "refs": [["stg_hubspot__email_event_click_tmp"], ["stg_hubspot__email_event_click_tmp"]], "sources": [], "description": "Each record represents a CLICK email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "click_url": {"name": "click_url", "description": "The URL within the message that the recipient clicked.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer_url": {"name": "referer_url", "description": "The URL of the webpage that linked to the URL clicked. Whether this is provided, and what its value is, is determined by the recipient's email client.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_click.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.602697, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    browser\n    \n as \n    \n    browser\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ip_address\n    \n as \n    \n    ip_address\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    referer\n    \n as \n    \n    referer\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        referer as referer_url,\n        url as click_url,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click`"}, "model.hubspot_source.stg_hubspot__engagement_call": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_call_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_call_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_call_tmp')),\n                staging_columns=get_engagement_call_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as call_notes,\n        callee_object_id,\n        callee_object_type,\n        disposition as disposition_id,\n        duration_milliseconds as call_duration_milliseconds,\n        engagement_id,\n        external_account_id,\n        external_id,\n        from_number,\n        recording_url,\n        status as call_status,\n        to_number,\n        transcription_id,\n        unknown_visitor_conversation\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_call_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_call_tmp", "model.hubspot_source.stg_hubspot__engagement_call_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement_call"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_call", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement_call.sql", "original_file_path": "models/stg_hubspot__engagement_call.sql", "name": "stg_hubspot__engagement_call", "alias": "stg_hubspot__engagement_call", "checksum": {"name": "sha256", "checksum": "dc7d0533bf3301520d71db2b46ddf5c79a76392ba12bac6b464815e00a727a09"}, "tags": [], "refs": [["stg_hubspot__engagement_call_tmp"], ["stg_hubspot__engagement_call_tmp"]], "sources": [], "description": "Each record represents a CALL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "call_duration_milliseconds": {"name": "call_duration_milliseconds", "description": "The length of the call in milliseconds", "meta": {}, "data_type": null, "quote": null, "tags": []}, "disposition_id": {"name": "disposition_id", "description": "The internal ID for the call outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_account_id": {"name": "external_account_id", "description": "For calls made in HubSpot, this will be the internal ID of the account used to make the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_id": {"name": "external_id", "description": "For calls made in HubSpot, this will be the internal ID of the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_number": {"name": "from_number", "description": "The phone number that was used as the from number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recording_url": {"name": "recording_url", "description": "The URL of the recording file .", "meta": {}, "data_type": null, "quote": null, "tags": []}, "to_number": {"name": "to_number", "description": "The phone number that was called.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement_call.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.690065, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    callee_object_id\n    \n as \n    \n    callee_object_id\n    \n, \n    \n    \n    callee_object_type\n    \n as \n    \n    callee_object_type\n    \n, \n    \n    \n    disposition\n    \n as \n    \n    disposition\n    \n, \n    \n    \n    duration_milliseconds\n    \n as \n    \n    duration_milliseconds\n    \n, \n    \n    \n    engagement_id\n    \n as \n    \n    engagement_id\n    \n, \n    \n    \n    external_account_id\n    \n as \n    \n    external_account_id\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    from_number\n    \n as \n    \n    from_number\n    \n, \n    \n    \n    recording_url\n    \n as \n    \n    recording_url\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    to_number\n    \n as \n    \n    to_number\n    \n, \n    \n    \n    transcription_id\n    \n as \n    \n    transcription_id\n    \n, \n    \n    \n    unknown_visitor_conversation\n    \n as \n    \n    unknown_visitor_conversation\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        body as call_notes,\n        callee_object_id,\n        callee_object_type,\n        disposition as disposition_id,\n        duration_milliseconds as call_duration_milliseconds,\n        engagement_id,\n        external_account_id,\n        external_id,\n        from_number,\n        recording_url,\n        status as call_status,\n        to_number,\n        transcription_id,\n        unknown_visitor_conversation\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call`"}, "model.hubspot_source.stg_hubspot__engagement": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__engagement_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__engagement_tmp')),\n                staging_columns=get_engagement_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        active as is_active,\n        activity_type,\n        created_at as created_timestamp,\n        id as engagement_id,\n        last_updated as last_updated_timestamp,\n        owner_id,\n        portal_id,\n        occurred_timestamp,\n        engagement_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_engagement_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_tmp", "model.hubspot_source.stg_hubspot__engagement_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__engagement"], "unique_id": "model.hubspot_source.stg_hubspot__engagement", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__engagement.sql", "original_file_path": "models/stg_hubspot__engagement.sql", "name": "stg_hubspot__engagement", "alias": "stg_hubspot__engagement", "checksum": {"name": "sha256", "checksum": "05bf5578777dbb9ae9a0facdee9187c1f9daa7a80b970ca6166d9baa7e50d2e7"}, "tags": [], "refs": [["stg_hubspot__engagement_tmp"], ["stg_hubspot__engagement_tmp"]], "sources": [], "description": "Each record represents an engagement", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "activity_type": {"name": "activity_type", "description": "The engagement's activity type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_type": {"name": "engagement_type", "description": "One of NOTE, EMAIL, TASK, MEETING, or CALL, the type of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_updated_timestamp": {"name": "last_updated_timestamp", "description": "A timestamp in representing when the engagement was last updated.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__engagement.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.71456, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    activity_type\n    \n as \n    \n    activity_type\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_updated\n    \n as \n    \n    last_updated\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    portal_id\n    \n as \n    \n    portal_id\n    \n, \n    \n    \n    timestamp\n    \n as occurred_timestamp , \n    \n    \n    type\n    \n as engagement_type \n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        active as is_active,\n        activity_type,\n        created_at as created_timestamp,\n        id as engagement_id,\n        last_updated as last_updated_timestamp,\n        owner_id,\n        portal_id,\n        occurred_timestamp,\n        engagement_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement`"}, "model.hubspot_source.stg_hubspot__email_campaign": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_campaign_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_campaign_tmp')),\n                staging_columns=get_email_campaign_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        app_id,\n        app_name,\n        content_id,\n        id as email_campaign_id,\n        name as email_campaign_name,\n        num_included,\n        num_queued,\n        sub_type as email_campaign_sub_type,\n        subject as email_campaign_subject,\n        type as email_campaign_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_campaign_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_campaign_tmp", "model.hubspot_source.stg_hubspot__email_campaign_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_campaign"], "unique_id": "model.hubspot_source.stg_hubspot__email_campaign", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_campaign.sql", "original_file_path": "models/stg_hubspot__email_campaign.sql", "name": "stg_hubspot__email_campaign", "alias": "stg_hubspot__email_campaign", "checksum": {"name": "sha256", "checksum": "d13056dfea036822ae4400b796b742196e648d1ae5aad273f005f3ab80ad525f"}, "tags": [], "refs": [["stg_hubspot__email_campaign_tmp"], ["stg_hubspot__email_campaign_tmp"]], "sources": [], "description": "Each record represents an email campaign in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The app ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_name": {"name": "app_name", "description": "The app name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "The ID of the content.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_name": {"name": "email_campaign_name", "description": "The name of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_sub_type": {"name": "email_campaign_sub_type", "description": "The email campaign sub-type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_subject": {"name": "email_campaign_subject", "description": "The subject of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_type": {"name": "email_campaign_type", "description": "The email campaign type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_included": {"name": "num_included", "description": "The number of messages included as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_queued": {"name": "num_queued", "description": "The number of messages queued as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.637743, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    app_id\n    \n as \n    \n    app_id\n    \n, \n    \n    \n    app_name\n    \n as \n    \n    app_name\n    \n, \n    \n    \n    content_id\n    \n as \n    \n    content_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    num_included\n    \n as \n    \n    num_included\n    \n, \n    \n    \n    num_queued\n    \n as \n    \n    num_queued\n    \n, \n    \n    \n    sub_type\n    \n as \n    \n    sub_type\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        app_id,\n        app_name,\n        content_id,\n        id as email_campaign_id,\n        name as email_campaign_name,\n        num_included,\n        num_queued,\n        sub_type as email_campaign_sub_type,\n        subject as email_campaign_subject,\n        type as email_campaign_type\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign`"}, "model.hubspot_source.stg_hubspot__email_event_print": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_print_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_print_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_print_tmp')),\n                staging_columns=get_email_event_print_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_print_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_print_tmp", "model.hubspot_source.stg_hubspot__email_event_print_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_print"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_print", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_print.sql", "original_file_path": "models/stg_hubspot__email_event_print.sql", "name": "stg_hubspot__email_event_print", "alias": "stg_hubspot__email_event_print", "checksum": {"name": "sha256", "checksum": "4f85478e5950ad6676e59750250108ce65c0419781a741346e461f1a5f949fd2"}, "tags": [], "refs": [["stg_hubspot__email_event_print_tmp"], ["stg_hubspot__email_event_print_tmp"]], "sources": [], "description": "Each record represents a PRINT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_print.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.6174998, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    browser\n    \n as \n    \n    browser\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ip_address\n    \n as \n    \n    ip_address\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print`"}, "model.hubspot_source.stg_hubspot__contact_property_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_property_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__contact_property_history_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_property_history_tmp')),\n                staging_columns=get_contact_property_history_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        contact_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_contact_property_history_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__contact_property_history_tmp", "model.hubspot_source.stg_hubspot__contact_property_history_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__contact_property_history"], "unique_id": "model.hubspot_source.stg_hubspot__contact_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__contact_property_history.sql", "original_file_path": "models/stg_hubspot__contact_property_history.sql", "name": "stg_hubspot__contact_property_history", "alias": "stg_hubspot__contact_property_history", "checksum": {"name": "sha256", "checksum": "41a20615d43c724be78ee13ea4bacf6ec049df1fe93ae87f691a261c5cfe0754"}, "tags": [], "refs": [["stg_hubspot__contact_property_history_tmp"], ["stg_hubspot__contact_property_history_tmp"]], "sources": [], "description": "Each record represents a change to contact record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_timestamp": {"name": "change_timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__contact.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact_property_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.5757701, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_property_history_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    timestamp\n    \n as change_timestamp , \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        contact_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        change_timestamp,\n        value as new_value\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_property_history`"}, "model.hubspot_source.stg_hubspot__email_event_open": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_open_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_open_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_open_tmp')),\n                staging_columns=get_email_event_open_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        duration as duration_open,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_open_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_open_tmp", "model.hubspot_source.stg_hubspot__email_event_open_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_open"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_open", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_open.sql", "original_file_path": "models/stg_hubspot__email_event_open.sql", "name": "stg_hubspot__email_event_open", "alias": "stg_hubspot__email_event_open", "checksum": {"name": "sha256", "checksum": "d889037fe49d3d49be46e693b50f152013f882c31d692beb0af2cfc35d2b9ed4"}, "tags": [], "refs": [["stg_hubspot__email_event_open_tmp"], ["stg_hubspot__email_event_open_tmp"]], "sources": [], "description": "Each record represents a OPEN email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "duration_open": {"name": "duration_open", "description": "If provided and nonzero, the approximate number of milliseconds the user had opened the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_open.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.615051, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    browser\n    \n as \n    \n    browser\n    \n, \n    \n    \n    duration\n    \n as \n    \n    duration\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ip_address\n    \n as \n    \n    ip_address\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    user_agent\n    \n as \n    \n    user_agent\n    \n\n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        browser,\n        duration as duration_open,\n        id as event_id,\n        ip_address,\n        location as geo_location,\n        user_agent\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open`"}, "model.hubspot_source.stg_hubspot__email_event_sent": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_sent_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__email_event_sent_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__email_event_sent_tmp')),\n                staging_columns=get_email_event_sent_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bcc as bcc_emails,\n        cc as cc_emails,\n        from_email,\n        id as event_id,\n        reply_to as reply_to_email,\n        subject as email_subject\n    from macro\n    \n)\n\nselect *\nfrom fields", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_email_event_sent_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_sent_tmp", "model.hubspot_source.stg_hubspot__email_event_sent_tmp"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__email_event_sent"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_sent", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__email_event_sent.sql", "original_file_path": "models/stg_hubspot__email_event_sent.sql", "name": "stg_hubspot__email_event_sent", "alias": "stg_hubspot__email_event_sent", "checksum": {"name": "sha256", "checksum": "0a148b58f423ac9c54192caf4a28011dbce37267b06f0983a42f01050c197f50"}, "tags": [], "refs": [["stg_hubspot__email_event_sent_tmp"], ["stg_hubspot__email_event_sent_tmp"]], "sources": [], "description": "Each record represents a SENT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc_emails": {"name": "bcc_emails", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc_emails": {"name": "cc_emails", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to_email": {"name": "reply_to_email", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__email.yml", "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email_event_sent.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.62029, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent_tmp`\n\n), macro as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    bcc\n    \n as \n    \n    bcc\n    \n, \n    \n    \n    cc\n    \n as \n    \n    cc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    reply_to\n    \n as \n    \n    reply_to\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n        \n            \n            `from`\n            \n        \n    \n as from_email \n\n\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        bcc as bcc_emails,\n        cc as cc_emails,\n        from_email,\n        id as event_id,\n        reply_to as reply_to_email,\n        subject as email_subject\n    from macro\n    \n)\n\nselect *\nfrom fields", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent`"}, "model.hubspot_source.stg_hubspot__contact_property_history_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_property_enabled'])) }}\n\nselect *\nfrom {{ var('contact_property_history') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.contact_property_history_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__contact_property_history_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__contact_property_history_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__contact_property_history_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__contact_property_history_tmp.sql", "name": "stg_hubspot__contact_property_history_tmp", "alias": "stg_hubspot__contact_property_history_tmp", "checksum": {"name": "sha256", "checksum": "94e046ad79ff164894e3d2ee9fa6d094236277d5e4eb61c16ba48a454a9d1092"}, "tags": [], "refs": [["contact_property_history_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__contact_property_history_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143061.987923, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`contact_property_history_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_property_history_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_dropped_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_dropped_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_dropped') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.fivetran_utils.seed_data_helper"], "nodes": ["seed.hubspot_integration_tests.email_event_dropped_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_dropped_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_dropped_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_dropped_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_dropped_tmp.sql", "name": "stg_hubspot__email_event_dropped_tmp", "alias": "stg_hubspot__email_event_dropped_tmp", "checksum": {"name": "sha256", "checksum": "6ea29cc5169d736f3d306ada0e68c21d47fdffaadf1d92fa7e63df762b71c67c"}, "tags": [], "refs": [["email_event_dropped_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_dropped_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143061.9932292, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_dropped_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_sent_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_sent_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_sent') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.fivetran_utils.seed_data_helper"], "nodes": ["seed.hubspot_integration_tests.email_event_sent_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_sent_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_sent_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_sent_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_sent_tmp.sql", "name": "stg_hubspot__email_event_sent_tmp", "alias": "stg_hubspot__email_event_sent_tmp", "checksum": {"name": "sha256", "checksum": "c755ee8e2ade057381ab3f7264b0aff04fb1e666940b91bbc35d9dab8f6c79df"}, "tags": [], "refs": [["email_event_sent_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_sent_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.0341399, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_sent_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent_tmp`"}, "model.hubspot_source.stg_hubspot__deal_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nselect *\nfrom {{ var('deal') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_tmp.sql", "name": "stg_hubspot__deal_tmp", "alias": "stg_hubspot__deal_tmp", "checksum": {"name": "sha256", "checksum": "124a98f73b4fa274b33cb876e1627e3bd328f16b00633a8af0904bd05a1eaf7e"}, "tags": [], "refs": [["deal_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.041582, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_tmp`"}, "model.hubspot_source.stg_hubspot__deal_contact_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled','hubspot_deal_contact_enabled'])) }}\n\nselect *\nfrom {{ var('deal_contact') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_contact_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_contact_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_contact_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_contact_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_contact_tmp.sql", "name": "stg_hubspot__deal_contact_tmp", "alias": "stg_hubspot__deal_contact_tmp", "checksum": {"name": "sha256", "checksum": "d428077a4a1b950402d8fcb4f46de1fccf04bbef6a7274dc35f1a2f3a25d5688"}, "tags": [], "refs": [["deal_contact_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_contact_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.059469, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_contact_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_contact_tmp`"}, "model.hubspot_source.stg_hubspot__contact_list_member_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_member_enabled'])) }}\n\nselect *\nfrom {{ var('contact_list_member') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.contact_list_member_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__contact_list_member_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__contact_list_member_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__contact_list_member_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__contact_list_member_tmp.sql", "name": "stg_hubspot__contact_list_member_tmp", "alias": "stg_hubspot__contact_list_member_tmp", "checksum": {"name": "sha256", "checksum": "c5f4b38033f7e73b8c560ae9b10c959ab53636db77febaea2878864bfcbd47e8"}, "tags": [], "refs": [["contact_list_member_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__contact_list_member_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.065849, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`contact_list_member_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_member_tmp`"}, "model.hubspot_source.stg_hubspot__owner_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_owner_enabled'])) }}\n\nselect *\nfrom {{ var('owner') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.owner_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__owner_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__owner_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__owner_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__owner_tmp.sql", "name": "stg_hubspot__owner_tmp", "alias": "stg_hubspot__owner_tmp", "checksum": {"name": "sha256", "checksum": "8b06d5fa0a2f2102fcc69868ed48699af552e012171048d5c9afccc2e3074859"}, "tags": [], "refs": [["owner_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__owner_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.072574, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`owner_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner_tmp`"}, "model.hubspot_source.stg_hubspot__deal_stage_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nselect * \nfrom {{ var('deal_stage') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_stage_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_stage_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_stage_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_stage_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_stage_tmp.sql", "name": "stg_hubspot__deal_stage_tmp", "alias": "stg_hubspot__deal_stage_tmp", "checksum": {"name": "sha256", "checksum": "ec97e0066c2090f43c12562580a53d3de824e0c1408f86af9f1279119eec35e9"}, "tags": [], "refs": [["deal_stage_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_stage_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.078348, "compiled_sql": "\n\nselect * \nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_stage_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_stage_tmp`"}, "model.hubspot_source.stg_hubspot__deal_pipeline_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nselect *\nfrom {{ var('deal_pipeline') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_pipeline_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_pipeline_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_pipeline_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_pipeline_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_pipeline_tmp.sql", "name": "stg_hubspot__deal_pipeline_tmp", "alias": "stg_hubspot__deal_pipeline_tmp", "checksum": {"name": "sha256", "checksum": "5ec1c0f28d2a898b8e0d02a04aba6b9721c90b43e037d327e43c6c327cc0fb8f"}, "tags": [], "refs": [["deal_pipeline_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_pipeline_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.084054, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_pipeline_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_company_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_company_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_company') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_company_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_company_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_company_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_company_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_company_tmp.sql", "name": "stg_hubspot__engagement_company_tmp", "alias": "stg_hubspot__engagement_company_tmp", "checksum": {"name": "sha256", "checksum": "d3e3765d608bc56f3bc07549accc1026e5d5ca93d650eb66d5522d4ad33bf3bc"}, "tags": [], "refs": [["engagement_company_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_company_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.103926, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_company_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_company_tmp`"}, "model.hubspot_source.stg_hubspot__contact_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_enabled'])) }}\n\nselect *\nfrom {{ var('contact') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.contact_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__contact_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__contact_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__contact_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__contact_tmp.sql", "name": "stg_hubspot__contact_tmp", "alias": "stg_hubspot__contact_tmp", "checksum": {"name": "sha256", "checksum": "17272cbcc9301857a35b6df8ea8a8426315db16044249a83a6dee8a13bda051d"}, "tags": [], "refs": [["contact_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__contact_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1084428, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`contact_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_status_change_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_status_change_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_status_change') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_status_change_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_status_change_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_status_change_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_status_change_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_status_change_tmp.sql", "name": "stg_hubspot__email_event_status_change_tmp", "alias": "stg_hubspot__email_event_status_change_tmp", "checksum": {"name": "sha256", "checksum": "4834d0413d972cb9b335efa782358855be7be2c4b7f70f2473ae5b13dda09c08"}, "tags": [], "refs": [["email_event_status_change_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_status_change_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1129081, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_status_change_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_note_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_note_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_note') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_note_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_note_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_note_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_note_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_note_tmp.sql", "name": "stg_hubspot__engagement_note_tmp", "alias": "stg_hubspot__engagement_note_tmp", "checksum": {"name": "sha256", "checksum": "bd3aa3ac5c07c206010b172fb2049c3724cdea3cc838cd1b536071f88543b79d"}, "tags": [], "refs": [["engagement_note_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_note_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.117424, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_note_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note_tmp`"}, "model.hubspot_source.stg_hubspot__deal_company_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled','hubspot_deal_company_enabled'])) }}\n\nselect *\nfrom {{ var('deal_company') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_company_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_company_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_company_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_company_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_company_tmp.sql", "name": "stg_hubspot__deal_company_tmp", "alias": "stg_hubspot__deal_company_tmp", "checksum": {"name": "sha256", "checksum": "dd18ea003d261853bceba6b07f5f614d9719b423a1d54fbc0305590ca499d9c5"}, "tags": [], "refs": [["deal_company_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_company_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.126657, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_company_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_company_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_deal_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_deal_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_deal') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_deal_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_deal_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_deal_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_deal_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_deal_tmp.sql", "name": "stg_hubspot__engagement_deal_tmp", "alias": "stg_hubspot__engagement_deal_tmp", "checksum": {"name": "sha256", "checksum": "700d960779a56df2619e3c72d555fd04f536d5cec3459618b2ca3e3ac5cfe25b"}, "tags": [], "refs": [["engagement_deal_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_deal_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.136699, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_deal_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_deal_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_print_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_print_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_print') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_print_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_print_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_print_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_print_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_print_tmp.sql", "name": "stg_hubspot__email_event_print_tmp", "alias": "stg_hubspot__email_event_print_tmp", "checksum": {"name": "sha256", "checksum": "e1492dcb7f40e0a445b55f116658d58a9380ec0cf1dcbc0237b77e0d7b37e34a"}, "tags": [], "refs": [["email_event_print_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_print_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1412401, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_print_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print_tmp`"}, "model.hubspot_source.stg_hubspot__company_property_history_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nselect *\nfrom {{ var('company_property_history') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.company_property_history_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__company_property_history_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__company_property_history_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__company_property_history_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__company_property_history_tmp.sql", "name": "stg_hubspot__company_property_history_tmp", "alias": "stg_hubspot__company_property_history_tmp", "checksum": {"name": "sha256", "checksum": "c63579bdf13286d3fef53cd3fc735d3e299f41623a8d2bb19c63bb5d1195df93"}, "tags": [], "refs": [["company_property_history_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__company_property_history_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.145749, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`company_property_history_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_property_history_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nselect *\nfrom {{ var('email_event') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_tmp.sql", "name": "stg_hubspot__email_event_tmp", "alias": "stg_hubspot__email_event_tmp", "checksum": {"name": "sha256", "checksum": "bd2e785786c99cc9fca040403c1a44c02605d01c2fb1f8828631b22218761fcb"}, "tags": [], "refs": [["email_event_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.150296, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_tmp`"}, "model.hubspot_source.stg_hubspot__company_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nselect *\nfrom {{ var('company') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.company_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__company_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__company_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__company_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__company_tmp.sql", "name": "stg_hubspot__company_tmp", "alias": "stg_hubspot__company_tmp", "checksum": {"name": "sha256", "checksum": "71e14b733d49851913c34d2a6a973e8e696bb05d7779e51cffdae2718fc65059"}, "tags": [], "refs": [["company_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__company_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.154936, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`company_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_click_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_click_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_click') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_click_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_click_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_click_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_click_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_click_tmp.sql", "name": "stg_hubspot__email_event_click_tmp", "alias": "stg_hubspot__email_event_click_tmp", "checksum": {"name": "sha256", "checksum": "6b724be03dd8dbaec06b9515c1143a84c95d5b3a4c7a674cb6544cefb449bf74"}, "tags": [], "refs": [["email_event_click_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_click_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1603851, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_click_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_contact_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_contact_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_contact') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_contact_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_contact_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_contact_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_contact_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_contact_tmp.sql", "name": "stg_hubspot__engagement_contact_tmp", "alias": "stg_hubspot__engagement_contact_tmp", "checksum": {"name": "sha256", "checksum": "68896f07089718c2878b9e71accc1f75d6d35516b996a7be2c0541d6b13c4508"}, "tags": [], "refs": [["engagement_contact_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_contact_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1648939, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_contact_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact_tmp`"}, "model.hubspot_source.stg_hubspot__contact_list_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_enabled'])) }}\n\nselect *\nfrom {{ var('contact_list') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.fivetran_utils.seed_data_helper"], "nodes": ["seed.hubspot_integration_tests.contact_list_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__contact_list_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__contact_list_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__contact_list_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__contact_list_tmp.sql", "name": "stg_hubspot__contact_list_tmp", "alias": "stg_hubspot__contact_list_tmp", "checksum": {"name": "sha256", "checksum": "fd9af8e7a35d01dc575bf5c19d751d25794d7acb7d5bb1463e5caeab72d857a2"}, "tags": [], "refs": [["contact_list_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__contact_list_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.1699278, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`contact_list_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_meeting_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_email_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_meeting') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_meeting_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_meeting_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_meeting_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_meeting_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_meeting_tmp.sql", "name": "stg_hubspot__engagement_meeting_tmp", "alias": "stg_hubspot__engagement_meeting_tmp", "checksum": {"name": "sha256", "checksum": "a58491a8d1b6fd5215742826e225c96c32641c971ca4471fc186d15baebe0069"}, "tags": [], "refs": [["engagement_meeting_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_meeting_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.174697, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_meeting_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled'])) }}\n\nselect *\nfrom {{ var('engagement') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_tmp.sql", "name": "stg_hubspot__engagement_tmp", "alias": "stg_hubspot__engagement_tmp", "checksum": {"name": "sha256", "checksum": "5ac51429780d9f7160a9e98ac3c4735e92321b47835e9793189c928bf9299da7"}, "tags": [], "refs": [["engagement_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.179213, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_delivered_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_delivered_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_delivered') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_delivered_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_delivered_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_delivered_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_delivered_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_delivered_tmp.sql", "name": "stg_hubspot__email_event_delivered_tmp", "alias": "stg_hubspot__email_event_delivered_tmp", "checksum": {"name": "sha256", "checksum": "f0d72c7ce2193ae96b6a3b5c317755bc9e53a598f3a1668496d4ded7b42dce2b"}, "tags": [], "refs": [["email_event_delivered_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_delivered_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.184778, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_delivered_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_email_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_email_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_email') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_email_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_email_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_email_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_email_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_email_tmp.sql", "name": "stg_hubspot__engagement_email_tmp", "alias": "stg_hubspot__engagement_email_tmp", "checksum": {"name": "sha256", "checksum": "6b83154fa1de07667ec47ca47bb8be3450fb5ad4bb983f86656630df3fdbb8a9"}, "tags": [], "refs": [["engagement_email_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_email_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.189495, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_email_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_forward_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_forward_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_forward') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_forward_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_forward_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_forward_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_forward_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_forward_tmp.sql", "name": "stg_hubspot__email_event_forward_tmp", "alias": "stg_hubspot__email_event_forward_tmp", "checksum": {"name": "sha256", "checksum": "e84459ef11badbd945ca410cbdeccb77f66ce169f85e3c9ee7384798669ea5c6"}, "tags": [], "refs": [["email_event_forward_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_forward_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.194019, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_forward_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_spam_report_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_spam_report') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_spam_report_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_spam_report_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_spam_report_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_spam_report_tmp.sql", "name": "stg_hubspot__email_event_spam_report_tmp", "alias": "stg_hubspot__email_event_spam_report_tmp", "checksum": {"name": "sha256", "checksum": "86e3d74a05d22e93b2031516eb80c73cc43c061c804f52d16d35a11bfae1a468"}, "tags": [], "refs": [["email_event_spam_report_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_spam_report_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.198625, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_spam_report_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_bounce_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_bounce_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_bounce') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_bounce_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_bounce_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_bounce_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_bounce_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_bounce_tmp.sql", "name": "stg_hubspot__email_event_bounce_tmp", "alias": "stg_hubspot__email_event_bounce_tmp", "checksum": {"name": "sha256", "checksum": "5cf2f855ec70b4296cb2a2c12a040e5eaef869d317876a4979e9f1671ebb2ca3"}, "tags": [], "refs": [["email_event_bounce_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_bounce_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.207798, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_bounce_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_call_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_call_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_call') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_call_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_call_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_call_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_call_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_call_tmp.sql", "name": "stg_hubspot__engagement_call_tmp", "alias": "stg_hubspot__engagement_call_tmp", "checksum": {"name": "sha256", "checksum": "69b0b24222e906148931a0ccf9ff6b546b8dba794fbab4e375e4b787d1e93110"}, "tags": [], "refs": [["engagement_call_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_call_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.213278, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_call_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call_tmp`"}, "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nselect *\nfrom {{ var('deal_pipeline_stage') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_pipeline_stage_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_pipeline_stage_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_pipeline_stage_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_pipeline_stage_tmp.sql", "name": "stg_hubspot__deal_pipeline_stage_tmp", "alias": "stg_hubspot__deal_pipeline_stage_tmp", "checksum": {"name": "sha256", "checksum": "1600e72fdab295282f0c932e6476a36d14de2beeddba11eef56704c5e19dfece"}, "tags": [], "refs": [["deal_pipeline_stage_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_pipeline_stage_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.2223868, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_pipeline_stage_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage_tmp`"}, "model.hubspot_source.stg_hubspot__engagement_task_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_task_enabled'])) }}\n\nselect *\nfrom {{ var('engagement_task') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.engagement_task_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__engagement_task_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__engagement_task_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__engagement_task_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__engagement_task_tmp.sql", "name": "stg_hubspot__engagement_task_tmp", "alias": "stg_hubspot__engagement_task_tmp", "checksum": {"name": "sha256", "checksum": "77c59970e529c5fbcbe4aa4d15d0b2bee88de8ba394efb53a0a998b722e941bb"}, "tags": [], "refs": [["engagement_task_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__engagement_task_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.227146, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`engagement_task_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_open_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_open_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_open') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_open_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_open_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_open_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_open_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_open_tmp.sql", "name": "stg_hubspot__email_event_open_tmp", "alias": "stg_hubspot__email_event_open_tmp", "checksum": {"name": "sha256", "checksum": "f3ada0551ce1bab0ca3302c0464e2d17c8bbe5f4f74daccdf0bf84ee5fcd0a81"}, "tags": [], "refs": [["email_event_open_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_open_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.23211, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_open_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open_tmp`"}, "model.hubspot_source.stg_hubspot__deal_property_history_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nselect *\nfrom {{ var('deal_property_history') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.deal_property_history_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__deal_property_history_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__deal_property_history_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__deal_property_history_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__deal_property_history_tmp.sql", "name": "stg_hubspot__deal_property_history_tmp", "alias": "stg_hubspot__deal_property_history_tmp", "checksum": {"name": "sha256", "checksum": "168adec4f1836e664cfd6ae9d122a38bfd62840a758c7ade3ff13e7373bbfb31"}, "tags": [], "refs": [["deal_property_history_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__deal_property_history_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.236775, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`deal_property_history_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_property_history_tmp`"}, "model.hubspot_source.stg_hubspot__email_event_deferred_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_deferred_enabled'])) }}\n\nselect *\nfrom {{ var('email_event_deferred') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_event_deferred_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_event_deferred_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_event_deferred_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_event_deferred_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_event_deferred_tmp.sql", "name": "stg_hubspot__email_event_deferred_tmp", "alias": "stg_hubspot__email_event_deferred_tmp", "checksum": {"name": "sha256", "checksum": "49cc95430e8375d3d61ea116f5e866c90d1e094df57a2afc11aaa879856003af"}, "tags": [], "refs": [["email_event_deferred_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_event_deferred_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.242107, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_event_deferred_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred_tmp`"}, "model.hubspot_source.stg_hubspot__email_campaign_tmp": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nselect *\nfrom {{ var('email_campaign') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["seed.hubspot_integration_tests.email_campaign_data"]}, "config": {"enabled": true, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__email_campaign_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__email_campaign_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__email_campaign_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__email_campaign_tmp.sql", "name": "stg_hubspot__email_campaign_tmp", "alias": "stg_hubspot__email_campaign_tmp", "checksum": {"name": "sha256", "checksum": "82140dbdec643b7ca1159e66138817a6e05cacce7ed8ddefdd9934f40f6afc38"}, "tags": [], "refs": [["email_campaign_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/tmp/stg_hubspot__email_campaign_tmp.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": true}, "created_at": 1655143062.2466292, "compiled_sql": "\n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test`.`email_campaign_data`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign_tmp`"}, "model.hubspot.hubspot__companies": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nwith companies as (\n\n    select *\n    from {{ var('company') }}\n\n{% if fivetran_utils.enabled_vars(['hubspot_engagement_enabled','hubspot_engagement_company_enabled']) %}\n\n), engagements as (\n\n    select *\n    from {{ ref('hubspot__engagements') }}\n\n), engagement_companies as (\n\n    select *\n    from {{ var('engagement_company') }}\n\n), engagement_companies_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_companies.company_id\n    from engagements\n    inner join engagement_companies\n        using (engagement_id)\n\n), engagement_companies_agg as (\n\n    {{ engagements_aggregated('engagement_companies_joined', 'company_id') }}\n\n), joined as (\n\n    select \n        companies.*,\n        {% for metric in engagement_metrics() %}\n        coalesce(engagement_companies_agg.{{ metric }},0) as {{ metric }} {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from companies\n    left join engagement_companies_agg\n        using (company_id)\n\n)\n\nselect *\nfrom joined\n\n{% else %}\n\n)\n\nselect *\nfrom companies\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_aggregated", "macro.hubspot.engagement_metrics"], "nodes": ["model.hubspot_source.stg_hubspot__company", "model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_company"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "hubspot__companies"], "unique_id": "model.hubspot.hubspot__companies", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/hubspot__companies.sql", "original_file_path": "models/sales/hubspot__companies.sql", "name": "hubspot__companies", "alias": "hubspot__companies", "checksum": {"name": "sha256", "checksum": "154ed1f5973a9bcbb7a137bb4c09d75a0daee546ddbcacea4b396e0ba8395bf2"}, "tags": [], "refs": [["stg_hubspot__company"], ["hubspot__engagements"], ["stg_hubspot__engagement_company"]], "sources": [], "description": "Each record represents a company in Hubspot.", "columns": {"company_id": {"name": "company_id", "description": "The ID of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "Whether the record has been deleted in Hubspot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_notes": {"name": "count_engagement_notes", "description": "The total number of related note engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_tasks": {"name": "count_engagement_tasks", "description": "The total number of related task engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_calls": {"name": "count_engagement_calls", "description": "The total number of related call engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_meetings": {"name": "count_engagement_meetings", "description": "The total number of related meeting engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_emails": {"name": "count_engagement_emails", "description": "The total number of related email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_incoming_emails": {"name": "count_engagement_incoming_emails", "description": "The total number of related incoming email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_forwarded_emails": {"name": "count_engagement_forwarded_emails", "description": "The total number of related forwarded email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/sales.yml", "compiled_path": "target/compiled/hubspot/models/sales/hubspot__companies.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143062.987287, "compiled_sql": "\n\nwith companies as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company`\n\n\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_companies as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_company`\n\n), engagement_companies_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_companies.company_id\n    from engagements\n    inner join engagement_companies\n        using (engagement_id)\n\n), engagement_companies_agg as (\n\n    \n\n    select\n        company_id,\n        count(case when engagement_type = 'NOTE' then company_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then company_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then company_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then company_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then company_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then company_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then company_id end) as count_engagement_forwarded_emails\n    from engagement_companies_joined\n    group by 1\n\n\n\n), joined as (\n\n    select \n        companies.*,\n        \n        coalesce(engagement_companies_agg.count_engagement_notes,0) as count_engagement_notes ,\n        \n        coalesce(engagement_companies_agg.count_engagement_tasks,0) as count_engagement_tasks ,\n        \n        coalesce(engagement_companies_agg.count_engagement_calls,0) as count_engagement_calls ,\n        \n        coalesce(engagement_companies_agg.count_engagement_meetings,0) as count_engagement_meetings ,\n        \n        coalesce(engagement_companies_agg.count_engagement_emails,0) as count_engagement_emails ,\n        \n        coalesce(engagement_companies_agg.count_engagement_incoming_emails,0) as count_engagement_incoming_emails ,\n        \n        coalesce(engagement_companies_agg.count_engagement_forwarded_emails,0) as count_engagement_forwarded_emails \n        \n    from companies\n    left join engagement_companies_agg\n        using (company_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__companies`"}, "model.hubspot.hubspot__deals": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith deals_enhanced as (\n\n    select *\n    from {{ ref('int_hubspot__deals_enhanced') }}\n\n{% if fivetran_utils.enabled_vars(['hubspot_engagement_enabled','hubspot_engagement_deal_enabled']) %}\n\n), engagements as (\n\n    select *\n    from {{ ref('hubspot__engagements') }}\n\n), engagement_deals as (\n\n    select *\n    from {{ var('engagement_deal') }}\n\n), engagement_deal_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_deals.deal_id\n    from engagements\n    inner join engagement_deals\n        using (engagement_id)\n\n), engagement_deal_agg as (\n\n    {{ engagements_aggregated('engagement_deal_joined', 'deal_id') }}\n\n), engagements_joined as (\n\n    select \n        deals_enhanced.*,\n        {% for metric in engagement_metrics() %}\n        coalesce(engagement_deal_agg.{{ metric }},0) as {{ metric }} {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from deals_enhanced\n    left join engagement_deal_agg\n        using (deal_id)\n\n)\n\nselect *\nfrom engagements_joined\n\n{% else %}\n\n)\n\nselect *\nfrom deals_enhanced\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_aggregated", "macro.hubspot.engagement_metrics"], "nodes": ["model.hubspot.int_hubspot__deals_enhanced", "model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_deal"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "hubspot__deals"], "unique_id": "model.hubspot.hubspot__deals", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/hubspot__deals.sql", "original_file_path": "models/sales/hubspot__deals.sql", "name": "hubspot__deals", "alias": "hubspot__deals", "checksum": {"name": "sha256", "checksum": "2f06f65ba141d55137e6305d15f76fad8ec323b4acfce983ed1cab911847847a"}, "tags": [], "refs": [["int_hubspot__deals_enhanced"], ["hubspot__engagements"], ["stg_hubspot__engagement_deal"]], "sources": [], "description": "Each record represents a deal in Hubspot.", "columns": {"deal_id": {"name": "deal_id", "description": "The ID of the deal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "Whether the record was deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_stage_id": {"name": "deal_pipeline_stage_id", "description": "The ID of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_notes": {"name": "count_engagement_notes", "description": "The total number of related note engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_tasks": {"name": "count_engagement_tasks", "description": "The total number of related task engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_calls": {"name": "count_engagement_calls", "description": "The total number of related call engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_meetings": {"name": "count_engagement_meetings", "description": "The total number of related meeting engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_emails": {"name": "count_engagement_emails", "description": "The total number of related email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_incoming_emails": {"name": "count_engagement_incoming_emails", "description": "The total number of related incoming email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_forwarded_emails": {"name": "count_engagement_forwarded_emails", "description": "The total number of related forwarded email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_label": {"name": "pipeline_label", "description": "The label of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_stage_label": {"name": "pipeline_stage_label", "description": "The label of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_email_address": {"name": "owner_email_address", "description": "The email address of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_full_name": {"name": "owner_full_name", "description": "The full name of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/sales.yml", "compiled_path": "target/compiled/hubspot/models/sales/hubspot__deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143062.978763, "compiled_sql": "\n\nwith  __dbt__cte__int_hubspot__deals_enhanced as (\n\n\nwith deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n\n), pipelines as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n\n), pipeline_stages as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n\n), owners as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined\n),deals_enhanced as (\n\n    select *\n    from __dbt__cte__int_hubspot__deals_enhanced\n\n\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_deal`\n\n), engagement_deal_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_deals.deal_id\n    from engagements\n    inner join engagement_deals\n        using (engagement_id)\n\n), engagement_deal_agg as (\n\n    \n\n    select\n        deal_id,\n        count(case when engagement_type = 'NOTE' then deal_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then deal_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then deal_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then deal_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then deal_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then deal_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then deal_id end) as count_engagement_forwarded_emails\n    from engagement_deal_joined\n    group by 1\n\n\n\n), engagements_joined as (\n\n    select \n        deals_enhanced.*,\n        \n        coalesce(engagement_deal_agg.count_engagement_notes,0) as count_engagement_notes ,\n        \n        coalesce(engagement_deal_agg.count_engagement_tasks,0) as count_engagement_tasks ,\n        \n        coalesce(engagement_deal_agg.count_engagement_calls,0) as count_engagement_calls ,\n        \n        coalesce(engagement_deal_agg.count_engagement_meetings,0) as count_engagement_meetings ,\n        \n        coalesce(engagement_deal_agg.count_engagement_emails,0) as count_engagement_emails ,\n        \n        coalesce(engagement_deal_agg.count_engagement_incoming_emails,0) as count_engagement_incoming_emails ,\n        \n        coalesce(engagement_deal_agg.count_engagement_forwarded_emails,0) as count_engagement_forwarded_emails \n        \n    from deals_enhanced\n    left join engagement_deal_agg\n        using (deal_id)\n\n)\n\nselect *\nfrom engagements_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__deals_enhanced", "sql": " __dbt__cte__int_hubspot__deals_enhanced as (\n\n\nwith deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n\n), pipelines as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n\n), pipeline_stages as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n\n), owners as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined\n)"}], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deals`"}, "model.hubspot.hubspot__deal_stages": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith deals_enhanced as (\n\n    select *\n    from {{ ref('int_hubspot__deals_enhanced') }}\n\n), deal_stage as (\n\n    select *\n    from {{ var('deal_stage') }}\n\n), final as (\n\n    select\n        deal_stage.deal_id || '-' || row_number() over(partition by deal_stage.deal_id order by deal_stage.date_entered asc) as deal_stage_id,\n        deal_stage.deal_stage_name, \n        deal_stage._fivetran_start as date_stage_entered,\n        deal_stage._fivetran_end as date_stage_exited,\n        deal_stage._fivetran_active as is_stage_active,\n        deals_enhanced.*\n\n    from deal_stage\n\n    left join deals_enhanced\n        on deal_stage.deal_id = deals_enhanced.deal_id\n)\n\nselect * \nfrom final", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot.int_hubspot__deals_enhanced", "model.hubspot_source.stg_hubspot__deal_stage"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "hubspot__deal_stages"], "unique_id": "model.hubspot.hubspot__deal_stages", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/hubspot__deal_stages.sql", "original_file_path": "models/sales/hubspot__deal_stages.sql", "name": "hubspot__deal_stages", "alias": "hubspot__deal_stages", "checksum": {"name": "sha256", "checksum": "c374b5acd38e145919857ac97b25460aa0c2ea312a8de4e71ba4da095860ad94"}, "tags": [], "refs": [["int_hubspot__deals_enhanced"], ["stg_hubspot__deal_stage"]], "sources": [], "description": "Each record represents a stage within a deal in Hubspot", "columns": {"deal_stage_id": {"name": "deal_stage_id", "description": "The unique deal stage identifier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_stage_name": {"name": "deal_stage_name", "description": "The name of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_stage_entered": {"name": "date_stage_entered", "description": "The timestamp the deal stage was entered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_stage_exited": {"name": "date_stage_exited", "description": "The Fivetran calculated exit time of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_stage_active": {"name": "is_stage_active", "description": "Boolean indicating whether the deal stage is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_stage_id": {"name": "deal_pipeline_stage_id", "description": "The ID of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_label": {"name": "pipeline_label", "description": "The label of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_pipeline_active": {"name": "is_pipeline_active", "description": "Boolean indicating if the deal pipeline is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_stage_label": {"name": "pipeline_stage_label", "description": "The label of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_email_address": {"name": "owner_email_address", "description": "The email address of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_full_name": {"name": "owner_full_name", "description": "The full name of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/sales.yml", "compiled_path": "target/compiled/hubspot/models/sales/hubspot__deal_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143062.98393, "compiled_sql": "\n\nwith  __dbt__cte__int_hubspot__deals_enhanced as (\n\n\nwith deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n\n), pipelines as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n\n), pipeline_stages as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n\n), owners as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined\n),deals_enhanced as (\n\n    select *\n    from __dbt__cte__int_hubspot__deals_enhanced\n\n), deal_stage as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_stage`\n\n), final as (\n\n    select\n        deal_stage.deal_id || '-' || row_number() over(partition by deal_stage.deal_id order by deal_stage.date_entered asc) as deal_stage_id,\n        deal_stage.deal_stage_name, \n        deal_stage._fivetran_start as date_stage_entered,\n        deal_stage._fivetran_end as date_stage_exited,\n        deal_stage._fivetran_active as is_stage_active,\n        deals_enhanced.*\n\n    from deal_stage\n\n    left join deals_enhanced\n        on deal_stage.deal_id = deals_enhanced.deal_id\n)\n\nselect * \nfrom final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__deals_enhanced", "sql": " __dbt__cte__int_hubspot__deals_enhanced as (\n\n\nwith deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n\n), pipelines as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n\n), pipeline_stages as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n\n), owners as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined\n)"}], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_stages`"}, "model.hubspot.hubspot__engagements": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled'])) }}\n\nwith engagements as (\n\n    select *\n    from {{ var('engagement') }}\n\n{% if fivetran_utils.enabled_vars(['hubspot_engagement_contact_enabled']) %}\n\n), contacts as (\n\n    select *\n    from {{ var('engagement_contact') }}\n\n), contacts_agg as (\n\n    select \n        engagement_id,\n        {{ fivetran_utils.array_agg('contact_id') }} as contact_ids\n    from contacts\n    group by 1\n\n{% endif %}\n\n{% if fivetran_utils.enabled_vars(['hubspot_engagement_deal_enabled']) %}\n\n), deals as (\n\n    select *\n    from {{ var('engagement_deal') }}\n \n), deals_agg as (\n\n    select \n        engagement_id,\n        {{ fivetran_utils.array_agg('deal_id') }} as deal_ids\n    from deals\n    group by 1\n\n{% endif %}\n\n{% if fivetran_utils.enabled_vars(['hubspot_engagement_company_enabled']) %}\n\n), companies as (\n\n    select *\n    from {{ var('engagement_company') }}\n\n), companies_agg as (\n\n    select \n        engagement_id,\n        {{ fivetran_utils.array_agg('company_id') }} as company_ids\n    from companies\n    group by 1\n\n{% endif %}\n\n), joined as (\n\n    select \n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_contact_enabled']) %} contacts_agg.contact_ids, {% endif %}\n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_deal_enabled']) %} deals_agg.deal_ids, {% endif %}\n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_company_enabled']) %} companies_agg.company_ids, {% endif %}\n        engagements.*\n    from engagements\n    {% if fivetran_utils.enabled_vars(['hubspot_engagement_contact_enabled']) %} left join contacts_agg using (engagement_id) {% endif %}\n    {% if fivetran_utils.enabled_vars(['hubspot_engagement_deal_enabled']) %} left join deals_agg using (engagement_id) {% endif %}\n    {% if fivetran_utils.enabled_vars(['hubspot_engagement_company_enabled']) %} left join companies_agg using (engagement_id) {% endif %}\n\n)\n\nselect *\nfrom joined", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.fivetran_utils.array_agg"], "nodes": ["model.hubspot_source.stg_hubspot__engagement", "model.hubspot_source.stg_hubspot__engagement_contact", "model.hubspot_source.stg_hubspot__engagement_deal", "model.hubspot_source.stg_hubspot__engagement_company"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "hubspot__engagements"], "unique_id": "model.hubspot.hubspot__engagements", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/hubspot__engagements.sql", "original_file_path": "models/sales/hubspot__engagements.sql", "name": "hubspot__engagements", "alias": "hubspot__engagements", "checksum": {"name": "sha256", "checksum": "287fb9ef6ed072e803731e55ddc15089e166966a5ff55f33c79edc0c0c5ab4a8"}, "tags": [], "refs": [["stg_hubspot__engagement"], ["stg_hubspot__engagement_contact"], ["stg_hubspot__engagement_deal"], ["stg_hubspot__engagement_company"]], "sources": [], "description": "Each record represents an engagement", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "activity_type": {"name": "activity_type", "description": "The engagement's activity type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_type": {"name": "engagement_type", "description": "One of NOTE, EMAIL, TASK, MEETING, or CALL, the type of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_updated_timestamp": {"name": "last_updated_timestamp", "description": "A timestamp in representing when the engagement was last updated.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/sales.yml", "compiled_path": "target/compiled/hubspot/models/sales/hubspot__engagements.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143062.991489, "compiled_sql": "\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement`\n\n\n\n), contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), contacts_agg as (\n\n    select \n        engagement_id,\n        \n    array_agg(contact_id)\n as contact_ids\n    from contacts\n    group by 1\n\n\n\n\n\n), deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_deal`\n \n), deals_agg as (\n\n    select \n        engagement_id,\n        \n    array_agg(deal_id)\n as deal_ids\n    from deals\n    group by 1\n\n\n\n\n\n), companies as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_company`\n\n), companies_agg as (\n\n    select \n        engagement_id,\n        \n    array_agg(company_id)\n as company_ids\n    from companies\n    group by 1\n\n\n\n), joined as (\n\n    select \n         contacts_agg.contact_ids, \n         deals_agg.deal_ids, \n         companies_agg.company_ids, \n        engagements.*\n    from engagements\n     left join contacts_agg using (engagement_id) \n     left join deals_agg using (engagement_id) \n     left join companies_agg using (engagement_id) \n\n)\n\nselect *\nfrom joined", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`"}, "model.hubspot.hubspot__deal_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith history as (\n\n    select *\n    from {{ var('deal_property_history') }}\n\n), windows as (\n\n    select\n        deal_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by deal_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        {{ dbt_utils.surrogate_key(['field_name','deal_id','valid_from']) }} as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.dbt_utils.surrogate_key"], "nodes": ["model.hubspot_source.stg_hubspot__deal_property_history"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "history", "hubspot__deal_history"], "unique_id": "model.hubspot.hubspot__deal_history", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/history/hubspot__deal_history.sql", "original_file_path": "models/sales/history/hubspot__deal_history.sql", "name": "hubspot__deal_history", "alias": "hubspot__deal_history", "checksum": {"name": "sha256", "checksum": "5b97d9925ec7bb737ea0722fe9d62fc05bf6f476e25ebebe565d76b1ff664e45"}, "tags": [], "refs": [["stg_hubspot__deal_property_history"]], "sources": [], "description": "Each record represents a change to deal record in Hubspot; the grain of this model is deal_id -> field_name -> valid_to.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_from": {"name": "valid_from", "description": "The timestamp the change was valid from.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_to": {"name": "valid_to", "description": "The timestamp the change was valid to. Null if still valid.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related deal record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/history/history.yml", "compiled_path": "target/compiled/hubspot/models/sales/history/hubspot__deal_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.0106082, "compiled_sql": "\n\nwith history as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_property_history`\n\n), windows as (\n\n    select\n        deal_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by deal_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        to_hex(md5(cast(coalesce(cast(field_name as \n    string\n), '') || '-' || coalesce(cast(deal_id as \n    string\n), '') || '-' || coalesce(cast(valid_from as \n    string\n), '') as \n    string\n))) as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_history`"}, "model.hubspot.hubspot__company_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_company_enabled'])) }}\n\nwith history as (\n\n    select *\n    from {{ var('company_property_history') }}\n\n), windows as (\n\n    select\n        company_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by company_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        {{ dbt_utils.surrogate_key(['field_name','company_id','valid_from']) }} as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.dbt_utils.surrogate_key"], "nodes": ["model.hubspot_source.stg_hubspot__company_property_history"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "history", "hubspot__company_history"], "unique_id": "model.hubspot.hubspot__company_history", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/history/hubspot__company_history.sql", "original_file_path": "models/sales/history/hubspot__company_history.sql", "name": "hubspot__company_history", "alias": "hubspot__company_history", "checksum": {"name": "sha256", "checksum": "a9cdcbdcea578c47c3c4bc14f2105ee662026cc06f7b429e88685649f9b78d14"}, "tags": [], "refs": [["stg_hubspot__company_property_history"]], "sources": [], "description": "Each record represents a change to company record in Hubspot; the grain of this model is company_id -> field_name -> valid_to.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_from": {"name": "valid_from", "description": "The timestamp the change was valid from.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_to": {"name": "valid_to", "description": "The timestamp the change was valid to. Null if still valid.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/history/history.yml", "compiled_path": "target/compiled/hubspot/models/sales/history/hubspot__company_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.007593, "compiled_sql": "\n\nwith history as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company_property_history`\n\n), windows as (\n\n    select\n        company_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by company_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        to_hex(md5(cast(coalesce(cast(field_name as \n    string\n), '') || '-' || coalesce(cast(company_id as \n    string\n), '') || '-' || coalesce(cast(valid_from as \n    string\n), '') as \n    string\n))) as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__company_history`"}, "model.hubspot.hubspot__engagement_tasks": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_task_enabled','hubspot_engagement_enabled'])) }}\n\n{{ engagements_joined(var('engagement_task')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_joined"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_task", "model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "engagement_events", "hubspot__engagement_tasks"], "unique_id": "model.hubspot.hubspot__engagement_tasks", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/engagement_events/hubspot__engagement_tasks.sql", "original_file_path": "models/sales/engagement_events/hubspot__engagement_tasks.sql", "name": "hubspot__engagement_tasks", "alias": "hubspot__engagement_tasks", "checksum": {"name": "sha256", "checksum": "ed927f800196acc2e97fc161fe3f1e245d601865deb17e8739933c4417397589"}, "tags": [], "refs": [["stg_hubspot__engagement_task"], ["hubspot__engagements"]], "sources": [], "description": "Each record represents a TASK engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "completion_timestamp": {"name": "completion_timestamp", "description": "The timestamp the task was completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "for_object_type": {"name": "for_object_type", "description": "One of CONTACT or COMPANY, what object type the task is for.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_all_day": {"name": "is_all_day", "description": "Whether it is an all day task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "priority": {"name": "priority", "description": "The priority of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "probability_to_complete": {"name": "probability_to_complete", "description": "The probability that the task will be completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_note": {"name": "task_note", "description": "The body or details of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_status": {"name": "task_status", "description": "The status of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_subject": {"name": "task_subject", "description": "The subject or title of the task", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_type": {"name": "task_type", "description": "The type of task", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/engagement_events/engagement_events.yml", "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/hubspot__engagement_tasks.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.0704262, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task`\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), joined as (\n\n    select \n        base.*,\n         engagements.contact_ids, \n         engagements.deal_ids, \n         engagements.company_ids, \n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_tasks`"}, "model.hubspot.hubspot__engagement_notes": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_note_enabled','hubspot_engagement_enabled'])) }}\n\n{{ engagements_joined(var('engagement_note')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_joined"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_note", "model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "engagement_events", "hubspot__engagement_notes"], "unique_id": "model.hubspot.hubspot__engagement_notes", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/engagement_events/hubspot__engagement_notes.sql", "original_file_path": "models/sales/engagement_events/hubspot__engagement_notes.sql", "name": "hubspot__engagement_notes", "alias": "hubspot__engagement_notes", "checksum": {"name": "sha256", "checksum": "c7ccb3b2fa0f9f70bc924cd13b8b5dbd027c65499f3c3d60cef0e66741e44e86"}, "tags": [], "refs": [["stg_hubspot__engagement_note"], ["hubspot__engagements"]], "sources": [], "description": "Each record represents a NOTE engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "note": {"name": "note", "description": "The body of the note. The body has a limit of 65536 characters.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/engagement_events/engagement_events.yml", "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/hubspot__engagement_notes.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.064118, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note`\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), joined as (\n\n    select \n        base.*,\n         engagements.contact_ids, \n         engagements.deal_ids, \n         engagements.company_ids, \n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_notes`"}, "model.hubspot.hubspot__engagement_calls": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_call_enabled','hubspot_engagement_enabled'])) }}\n\n{{ engagements_joined(var('engagement_call')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_joined"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_call", "model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "engagement_events", "hubspot__engagement_calls"], "unique_id": "model.hubspot.hubspot__engagement_calls", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/engagement_events/hubspot__engagement_calls.sql", "original_file_path": "models/sales/engagement_events/hubspot__engagement_calls.sql", "name": "hubspot__engagement_calls", "alias": "hubspot__engagement_calls", "checksum": {"name": "sha256", "checksum": "f5e094f3180675aee83776940893660de874d9e6cceaab45450f49ec537f5597"}, "tags": [], "refs": [["stg_hubspot__engagement_call"], ["hubspot__engagements"]], "sources": [], "description": "Each record represents a CALL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "call_duration_milliseconds": {"name": "call_duration_milliseconds", "description": "The length of the call in milliseconds", "meta": {}, "data_type": null, "quote": null, "tags": []}, "disposition_id": {"name": "disposition_id", "description": "The internal ID for the call outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_account_id": {"name": "external_account_id", "description": "For calls made in HubSpot, this will be the internal ID of the account used to make the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_id": {"name": "external_id", "description": "For calls made in HubSpot, this will be the internal ID of the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_number": {"name": "from_number", "description": "The phone number that was used as the from number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recording_url": {"name": "recording_url", "description": "The URL of the recording file .", "meta": {}, "data_type": null, "quote": null, "tags": []}, "to_number": {"name": "to_number", "description": "The phone number that was called.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/engagement_events/engagement_events.yml", "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/hubspot__engagement_calls.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.0456169, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call`\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), joined as (\n\n    select \n        base.*,\n         engagements.contact_ids, \n         engagements.deal_ids, \n         engagements.company_ids, \n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_calls`"}, "model.hubspot.hubspot__engagement_emails": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_email_enabled','hubspot_engagement_enabled'])) }}\n\n{{ engagements_joined(var('engagement_email')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_joined"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_email", "model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "engagement_events", "hubspot__engagement_emails"], "unique_id": "model.hubspot.hubspot__engagement_emails", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/engagement_events/hubspot__engagement_emails.sql", "original_file_path": "models/sales/engagement_events/hubspot__engagement_emails.sql", "name": "hubspot__engagement_emails", "alias": "hubspot__engagement_emails", "checksum": {"name": "sha256", "checksum": "16b83242d8424d9fbd8c22ced83153357a0674783980d84fa8b5c43fa7d66f4c"}, "tags": [], "refs": [["stg_hubspot__engagement_email"], ["hubspot__engagements"]], "sources": [], "description": "Each record represents an EMAIL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attached_video_id": {"name": "attached_video_id", "description": "The ID of the video attached.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_html": {"name": "email_html", "description": "The body of the HTML email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_created_timestamp": {"name": "email_send_event_created_timestamp", "description": "When the SENT event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_id": {"name": "email_send_event_id", "description": "The ID of the related SENT email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_status": {"name": "email_status", "description": "The status of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject of the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_text": {"name": "email_text", "description": "The body of the text-only email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "error_message": {"name": "error_message", "description": "The error message, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The email address of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_first_name": {"name": "from_first_name", "description": "The first name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_last_name": {"name": "from_last_name", "description": "The last name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "media_processing_status": {"name": "media_processing_status", "description": "The processing status of the media content in the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "message_id": {"name": "message_id", "description": "The ID of the message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_via": {"name": "sent_via", "description": "How the email was sent.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "thread_id": {"name": "thread_id", "description": "The ID of the email thread.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_attached_video_opened": {"name": "was_attached_video_opened", "description": "Whether the the attached video was opened.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_attached_video_watched": {"name": "was_attached_video_watched", "description": "Whether the the attached video was watched.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/engagement_events/engagement_events.yml", "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/hubspot__engagement_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.053646, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email`\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), joined as (\n\n    select \n        base.*,\n         engagements.contact_ids, \n         engagements.deal_ids, \n         engagements.company_ids, \n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_emails`"}, "model.hubspot.hubspot__engagement_meetings": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_meeting_enabled','hubspot_engagement_enabled'])) }}\n\n{{ engagements_joined(var('engagement_meeting')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_joined"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_meeting", "model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "engagement_events", "hubspot__engagement_meetings"], "unique_id": "model.hubspot.hubspot__engagement_meetings", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/engagement_events/hubspot__engagement_meetings.sql", "original_file_path": "models/sales/engagement_events/hubspot__engagement_meetings.sql", "name": "hubspot__engagement_meetings", "alias": "hubspot__engagement_meetings", "checksum": {"name": "sha256", "checksum": "69bf205e7fe981d7152bdd0a4f591cc7e0721b352c14794d98a999785d5a268f"}, "tags": [], "refs": [["stg_hubspot__engagement_meeting"], ["hubspot__engagements"]], "sources": [], "description": "Each record represents a MEETING engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "end_timestamp": {"name": "end_timestamp", "description": "A timestamp representing the end time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_url": {"name": "external_url", "description": "The external URL of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_notes": {"name": "meeting_notes", "description": "The details or body of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_outcome": {"name": "meeting_outcome", "description": "The meeting outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_title": {"name": "meeting_title", "description": "The title or subject of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The internal ID of the meeting source.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "start_timestamp": {"name": "start_timestamp", "description": "A timestamp representing the start time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "web_conference_meeting_id": {"name": "web_conference_meeting_id", "description": "The ID of the web conference meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "occurred_timestamp": {"name": "occurred_timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_ids": {"name": "contact_ids", "description": "List of contacts related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_ids": {"name": "deal_ids", "description": "List of deals related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_ids": {"name": "company_ids", "description": "List of companies related to the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/sales/engagement_events/engagement_events.yml", "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/hubspot__engagement_meetings.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.059343, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting`\n\n), engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), joined as (\n\n    select \n        base.*,\n         engagements.contact_ids, \n         engagements.deal_ids, \n         engagements.company_ids, \n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_meetings`"}, "model.hubspot.int_hubspot__deals_enhanced": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_deal_enabled'])) }}\n\nwith deals as (\n\n    select *\n    from {{ var('deal') }}\n\n), pipelines as (\n\n    select *\n    from {{ var('deal_pipeline') }}\n\n), pipeline_stages as (\n\n    select *\n    from {{ var('deal_pipeline_stage') }}\n\n), owners as (\n\n    select *\n    from {{ var('owner') }}\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot_source.stg_hubspot__deal", "model.hubspot_source.stg_hubspot__deal_pipeline", "model.hubspot_source.stg_hubspot__deal_pipeline_stage", "model.hubspot_source.stg_hubspot__owner"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "sales", "intermediate", "int_hubspot__deals_enhanced"], "unique_id": "model.hubspot.int_hubspot__deals_enhanced", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "sales/intermediate/int_hubspot__deals_enhanced.sql", "original_file_path": "models/sales/intermediate/int_hubspot__deals_enhanced.sql", "name": "int_hubspot__deals_enhanced", "alias": "int_hubspot__deals_enhanced", "checksum": {"name": "sha256", "checksum": "9a519cb2a222d38612ffd4e0c91b8f039baa8c43a336eb185197dbe49074a84a"}, "tags": [], "refs": [["stg_hubspot__deal"], ["stg_hubspot__deal_pipeline"], ["stg_hubspot__deal_pipeline_stage"], ["stg_hubspot__owner"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/intermediate/int_hubspot__deals_enhanced.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "schema": "hubspot", "enabled": true}, "created_at": 1655143062.347264, "compiled_sql": "\n\nwith deals as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n\n), pipelines as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n\n), pipeline_stages as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n\n), owners as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__owner`\n\n), deal_fields_joined as (\n\n    select \n        deals.*,\n        pipelines.pipeline_label,\n        pipelines.is_active as is_pipeline_active,\n        pipeline_stages.pipeline_stage_label,\n        owners.email_address as owner_email_address,\n        owners.full_name as owner_full_name\n\n    from deals    \n    left join pipelines \n        on deals.deal_pipeline_id = pipelines.deal_pipeline_id\n    left join pipeline_stages \n        on deals.deal_pipeline_stage_id = pipeline_stages.deal_pipeline_stage_id\n    left join owners \n        on deals.owner_id = owners.owner_id\n)\n\nselect *\nfrom deal_fields_joined", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.hubspot.hubspot__email_sends": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nwith sends as (\n\n    select *\n    from {{ ref('hubspot__email_event_sent') }}\n\n), metrics as (\n\n    select *\n    from {{ ref('int_hubspot__email_event_aggregates') }}\n\n), joined as (\n\n    select\n        sends.*,\n        coalesce(metrics.bounces,0) as bounces,\n        coalesce(metrics.clicks,0) as clicks,\n        coalesce(metrics.deferrals,0) as deferrals,\n        coalesce(metrics.deliveries,0) as deliveries,\n        coalesce(metrics.drops,0) as drops,\n        coalesce(metrics.forwards,0) as forwards,\n        coalesce(metrics.opens,0) as opens,\n        coalesce(metrics.prints,0) as prints,\n        coalesce(metrics.spam_reports,0) as spam_reports\n    from sends\n    left join metrics using (email_send_id)\n\n), booleans as (\n\n    select \n        *,\n        bounces > 0 as was_bounced,\n        clicks > 0 as was_clicked,\n        deferrals > 0 as was_deferred,\n        deliveries > 0 as was_delivered,\n        forwards > 0 as was_forwarded,\n        opens > 0 as was_opened,\n        prints > 0 as was_printed,\n        spam_reports > 0 as was_spam_reported\n    from joined\n\n{% if fivetran_utils.enabled_vars(['hubspot_email_event_status_change_enabled']) %}\n\n), unsubscribes as (\n\n    select *\n    from {{ ref('int_hubspot__email_aggregate_status_change') }}\n\n), unsubscribes_joined as (\n\n    select \n        booleans.*,\n        coalesce(unsubscribes.unsubscribes,0) as unsubscribes,\n        coalesce(unsubscribes.unsubscribes,0) > 0 as was_unsubcribed\n    from booleans\n    left join unsubscribes using (email_send_id)\n\n)\n\nselect *\nfrom unsubscribes_joined\n\n{% else %}\n\n)\n\nselect *\nfrom booleans\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot.hubspot__email_event_sent", "model.hubspot.int_hubspot__email_event_aggregates", "model.hubspot.int_hubspot__email_aggregate_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "hubspot__email_sends"], "unique_id": "model.hubspot.hubspot__email_sends", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/hubspot__email_sends.sql", "original_file_path": "models/marketing/hubspot__email_sends.sql", "name": "hubspot__email_sends", "alias": "hubspot__email_sends", "checksum": {"name": "sha256", "checksum": "1eb48b5c443cbef4644238a4ca46094889f92cee2ab9c18e8ed33e67d00ebb50"}, "tags": [], "refs": [["hubspot__email_event_sent"], ["int_hubspot__email_event_aggregates"], ["int_hubspot__email_aggregate_status_change"]], "sources": [], "description": "Each record represents a SENT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc_emails": {"name": "bcc_emails", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc_emails": {"name": "cc_emails", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to_email": {"name": "reply_to_email", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bounces": {"name": "bounces", "description": "The total number of bounce email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The total number of click email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deferrals": {"name": "deferrals", "description": "The total number of deferral email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deliveries": {"name": "deliveries", "description": "The total number of delivery email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drops": {"name": "drops", "description": "The total number of drop email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forwards": {"name": "forwards", "description": "The total number of forward email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "opens": {"name": "opens", "description": "The total number of open email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "prints": {"name": "prints", "description": "The total number of print email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "spam_reports": {"name": "spam_reports", "description": "The total number of spam report email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "unsubscribes": {"name": "unsubscribes", "description": "The total number of unsubscribe email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_bounced": {"name": "was_bounced", "description": "Whether the email was bounced.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_clicked": {"name": "was_clicked", "description": "Whether the email was clicked.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_deferred": {"name": "was_deferred", "description": "Whether the email was deferred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_delivered": {"name": "was_delivered", "description": "Whether the email was delivered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_forwarded": {"name": "was_forwarded", "description": "Whether the email was forwarded.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_opened": {"name": "was_opened", "description": "Whether the email was opened.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_printed": {"name": "was_printed", "description": "Whether the email was printed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_spam_reported": {"name": "was_spam_reported", "description": "Whether the email was spam reported.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "was_unsubcribed": {"name": "was_unsubcribed", "description": "Whether the email was unsubcribed.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/marketing.yml", "compiled_path": "target/compiled/hubspot/models/marketing/hubspot__email_sends.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.101367, "compiled_sql": "\n\nwith  __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n),  __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n),sends as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_sent`\n\n), metrics as (\n\n    select *\n    from __dbt__cte__int_hubspot__email_event_aggregates\n\n), joined as (\n\n    select\n        sends.*,\n        coalesce(metrics.bounces,0) as bounces,\n        coalesce(metrics.clicks,0) as clicks,\n        coalesce(metrics.deferrals,0) as deferrals,\n        coalesce(metrics.deliveries,0) as deliveries,\n        coalesce(metrics.drops,0) as drops,\n        coalesce(metrics.forwards,0) as forwards,\n        coalesce(metrics.opens,0) as opens,\n        coalesce(metrics.prints,0) as prints,\n        coalesce(metrics.spam_reports,0) as spam_reports\n    from sends\n    left join metrics using (email_send_id)\n\n), booleans as (\n\n    select \n        *,\n        bounces > 0 as was_bounced,\n        clicks > 0 as was_clicked,\n        deferrals > 0 as was_deferred,\n        deliveries > 0 as was_delivered,\n        forwards > 0 as was_forwarded,\n        opens > 0 as was_opened,\n        prints > 0 as was_printed,\n        spam_reports > 0 as was_spam_reported\n    from joined\n\n\n\n), unsubscribes as (\n\n    select *\n    from __dbt__cte__int_hubspot__email_aggregate_status_change\n\n), unsubscribes_joined as (\n\n    select \n        booleans.*,\n        coalesce(unsubscribes.unsubscribes,0) as unsubscribes,\n        coalesce(unsubscribes.unsubscribes,0) > 0 as was_unsubcribed\n    from booleans\n    left join unsubscribes using (email_send_id)\n\n)\n\nselect *\nfrom unsubscribes_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__email_event_aggregates", "sql": " __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n)"}, {"id": "model.hubspot.int_hubspot__email_aggregate_status_change", "sql": " __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n)"}], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`"}, "model.hubspot.hubspot__contact_lists": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_enabled'])) }}\n\nwith contact_lists as (\n\n    select *\n    from {{ var('contact_list') }}\n\n{% if fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_email_event_enabled']) %}\n\n), email_metrics as (\n\n    select *\n    from {{ ref('int_hubspot__email_metrics__by_contact_list') }}\n\n), joined as (\n\n    select \n        contact_lists.*,\n        {% for metric in var('email_metrics') %}\n        coalesce(email_metrics.total_{{ metric }}, 0) as total_{{ metric }},\n        coalesce(email_metrics.total_unique_{{ metric }}, 0) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from contact_lists\n    left join email_metrics\n        using (contact_list_id)\n\n)\n\nselect *\nfrom joined\n\n{% else %}\n\n)\n\nselect *\nfrom contact_lists\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot_source.stg_hubspot__contact_list", "model.hubspot.int_hubspot__email_metrics__by_contact_list"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "hubspot__contact_lists"], "unique_id": "model.hubspot.hubspot__contact_lists", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/hubspot__contact_lists.sql", "original_file_path": "models/marketing/hubspot__contact_lists.sql", "name": "hubspot__contact_lists", "alias": "hubspot__contact_lists", "checksum": {"name": "sha256", "checksum": "59f87858320cb1751167db880d178fa9a7e8b1e343bec6ad796c2ccbe3c4433e"}, "tags": [], "refs": [["stg_hubspot__contact_list"], ["int_hubspot__email_metrics__by_contact_list"]], "sources": [], "description": "Each record represents a contact list in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_id": {"name": "contact_list_id", "description": "The ID of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_name": {"name": "contact_list_name", "description": "The name of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "A timestamp of the time the list was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deletable": {"name": "is_deletable", "description": "If this is false, this is a system list and cannot be deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_dynamic": {"name": "is_dynamic", "description": "Whether the contact list is dynamic.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_error": {"name": "metadata_error", "description": "Any errors that happened the last time the list was processed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_processing_state_change_at": {"name": "metadata_last_processing_state_change_at", "description": "A timestamp of the last time that the processing state changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_size_change_at": {"name": "metadata_last_size_change_at", "description": "A timestamp of the last time that the size of the list changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_processing": {"name": "metadata_processing", "description": "One of DONE, REFRESHING, INITIALIZING, or PROCESSING. \nDONE indicates the list has finished processing, any other value indicates that list membership is being evaluated.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_size": {"name": "metadata_size", "description": "The approximate number of contacts in the list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "A timestamp of the time that the list was last modified.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_bounces": {"name": "total_bounces", "description": "The total number of bounce email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_clicks": {"name": "total_clicks", "description": "The total number of click email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deferrals": {"name": "total_deferrals", "description": "The total number of deferral email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deliveries": {"name": "total_deliveries", "description": "The total number of delivery email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_drops": {"name": "total_drops", "description": "The total number of drop email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_forwards": {"name": "total_forwards", "description": "The total number of forward email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_opens": {"name": "total_opens", "description": "The total number of open email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_prints": {"name": "total_prints", "description": "The total number of print email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_spam_reports": {"name": "total_spam_reports", "description": "The total number of spam report email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unsubscribes": {"name": "total_unsubscribes", "description": "The total number of unsubscribe email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_bounces": {"name": "total_unique_bounces", "description": "The total number of unique email sends with a bounce email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_clicks": {"name": "total_unique_clicks", "description": "The total number of unique email sends with a click email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deferrals": {"name": "total_unique_deferrals", "description": "The total number of unique email sends with a deferral email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deliveries": {"name": "total_unique_deliveries", "description": "The total number of unique email sends with a delivery email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_drops": {"name": "total_unique_drops", "description": "The total number of unique email sends with a drop email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_forwards": {"name": "total_unique_forwards", "description": "The total number of unique email sends with a forward email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_opens": {"name": "total_unique_opens", "description": "The total number of unique email sends with a opens email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_prints": {"name": "total_unique_prints", "description": "The total number of unique email sends with a print email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_spam_reports": {"name": "total_unique_spam_reports", "description": "The total number of unique email sends with a spam report email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_unsubscribes": {"name": "total_unique_unsubscribes", "description": "The total number of unique email sends with a unsubscribe email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/marketing.yml", "compiled_path": "target/compiled/hubspot/models/marketing/hubspot__contact_lists.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.1336262, "compiled_sql": "\n\nwith contact_lists as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list`\n\n\n\n), email_metrics as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`int_hubspot__email_metrics__by_contact_list`\n\n), joined as (\n\n    select \n        contact_lists.*,\n        \n        coalesce(email_metrics.total_bounces, 0) as total_bounces,\n        coalesce(email_metrics.total_unique_bounces, 0) as total_unique_bounces\n        ,\n        \n        coalesce(email_metrics.total_clicks, 0) as total_clicks,\n        coalesce(email_metrics.total_unique_clicks, 0) as total_unique_clicks\n        ,\n        \n        coalesce(email_metrics.total_deferrals, 0) as total_deferrals,\n        coalesce(email_metrics.total_unique_deferrals, 0) as total_unique_deferrals\n        ,\n        \n        coalesce(email_metrics.total_deliveries, 0) as total_deliveries,\n        coalesce(email_metrics.total_unique_deliveries, 0) as total_unique_deliveries\n        ,\n        \n        coalesce(email_metrics.total_drops, 0) as total_drops,\n        coalesce(email_metrics.total_unique_drops, 0) as total_unique_drops\n        ,\n        \n        coalesce(email_metrics.total_forwards, 0) as total_forwards,\n        coalesce(email_metrics.total_unique_forwards, 0) as total_unique_forwards\n        ,\n        \n        coalesce(email_metrics.total_opens, 0) as total_opens,\n        coalesce(email_metrics.total_unique_opens, 0) as total_unique_opens\n        ,\n        \n        coalesce(email_metrics.total_prints, 0) as total_prints,\n        coalesce(email_metrics.total_unique_prints, 0) as total_unique_prints\n        ,\n        \n        coalesce(email_metrics.total_spam_reports, 0) as total_spam_reports,\n        coalesce(email_metrics.total_unique_spam_reports, 0) as total_unique_spam_reports\n        ,\n        \n        coalesce(email_metrics.total_unsubscribes, 0) as total_unsubscribes,\n        coalesce(email_metrics.total_unique_unsubscribes, 0) as total_unique_unsubscribes\n        \n        \n    from contact_lists\n    left join email_metrics\n        using (contact_list_id)\n\n)\n\nselect *\nfrom joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_lists`"}, "model.hubspot.hubspot__contacts": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_enabled'])) }}\n{% set emails_enabled = fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_email_event_enabled']) %}\n{% set engagements_enabled = fivetran_utils.enabled_vars(['hubspot_sales_enabled', 'hubspot_engagement_enabled']) %}\n\nwith contacts as (\n\n    select *\n    from {% if var('hubspot_contact_merge_audit_enabled', false) %} \n            {{ ref('int_hubspot__contact_merge_adjust') }} \n        {% else %} \n            {{ var('contact') }} \n        {% endif %}\n\n{% if emails_enabled %}\n\n), email_sends as (\n\n    select *\n    from {{ ref('hubspot__email_sends') }}\n\n), email_metrics as (\n\n    select \n        recipient_email_address,\n        {% for metric in var('email_metrics') %}\n        sum({{ metric }}) as total_{{ metric }},\n        count(distinct case when {{ metric }} > 0 then email_send_id end) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from email_sends\n    group by 1\n\n), email_joined as (\n\n    select \n        contacts.*,\n        {% for metric in var('email_metrics') %}\n        coalesce(email_metrics.total_{{ metric }}, 0) as total_{{ metric }},\n        coalesce(email_metrics.total_unique_{{ metric }}, 0) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from contacts\n    left join email_metrics\n        on contacts.email = email_metrics.recipient_email_address\n\n{% endif %}\n\n{% if engagements_enabled %}\n\n{% set cte_ref = 'email_joined' if emails_enabled else 'contacts' %}\n\n), engagements as (\n\n    select *\n    from {{ ref('int_hubspot__engagement_metrics__by_contact') }}\n\n), engagements_joined as (\n\n    select \n        {{ cte_ref }}.*,\n        {% for metric in engagement_metrics() %}\n        coalesce(engagements.{{ metric }},0) as {{ metric }} {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from {{ cte_ref }}\n    left join engagements\n        using (contact_id)\n\n)\n\nselect *\nfrom engagements_joined\n\n{% elif emails_enabled %}\n\n)\n\nselect *\nfrom email_joined\n\n{% else %}\n\n)\n\nselect *\nfrom contacts\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagement_metrics"], "nodes": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot.hubspot__email_sends", "model.hubspot.int_hubspot__engagement_metrics__by_contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "hubspot__contacts"], "unique_id": "model.hubspot.hubspot__contacts", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/hubspot__contacts.sql", "original_file_path": "models/marketing/hubspot__contacts.sql", "name": "hubspot__contacts", "alias": "hubspot__contacts", "checksum": {"name": "sha256", "checksum": "9b1ddd2424c5d3cbbb9944645aa73f1732f85611e178931081c20296e3b560bc"}, "tags": [], "refs": [["stg_hubspot__contact"], ["hubspot__email_sends"], ["int_hubspot__engagement_metrics__by_contact"]], "sources": [], "description": "Each record represents a contact in Hubspot.", "columns": {"contact_id": {"name": "contact_id", "description": "The ID of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "The email address of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_bounces": {"name": "total_bounces", "description": "The total number of bounce email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_clicks": {"name": "total_clicks", "description": "The total number of click email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deferrals": {"name": "total_deferrals", "description": "The total number of deferral email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deliveries": {"name": "total_deliveries", "description": "The total number of delivery email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_drops": {"name": "total_drops", "description": "The total number of drop email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_forwards": {"name": "total_forwards", "description": "The total number of forward email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_opens": {"name": "total_opens", "description": "The total number of open email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_prints": {"name": "total_prints", "description": "The total number of print email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_spam_reports": {"name": "total_spam_reports", "description": "The total number of spam report email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unsubscribes": {"name": "total_unsubscribes", "description": "The total number of unsubscribe email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_bounces": {"name": "total_unique_bounces", "description": "The total number of unique email sends with a bounce email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_clicks": {"name": "total_unique_clicks", "description": "The total number of unique email sends with a click email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deferrals": {"name": "total_unique_deferrals", "description": "The total number of unique email sends with a deferral email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deliveries": {"name": "total_unique_deliveries", "description": "The total number of unique email sends with a delivery email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_drops": {"name": "total_unique_drops", "description": "The total number of unique email sends with a drop email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_forwards": {"name": "total_unique_forwards", "description": "The total number of unique email sends with a forward email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_opens": {"name": "total_unique_opens", "description": "The total number of unique email sends with a opens email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_prints": {"name": "total_unique_prints", "description": "The total number of unique email sends with a print email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_spam_reports": {"name": "total_unique_spam_reports", "description": "The total number of unique email sends with a spam report email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_unsubscribes": {"name": "total_unique_unsubscribes", "description": "The total number of unique email sends with a unsubscribe email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_notes": {"name": "count_engagement_notes", "description": "The total number of related note engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_tasks": {"name": "count_engagement_tasks", "description": "The total number of related task engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_calls": {"name": "count_engagement_calls", "description": "The total number of related call engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_meetings": {"name": "count_engagement_meetings", "description": "The total number of related meeting engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_emails": {"name": "count_engagement_emails", "description": "The total number of related email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_incoming_emails": {"name": "count_engagement_incoming_emails", "description": "The total number of related incoming email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "count_engagement_forwarded_emails": {"name": "count_engagement_forwarded_emails", "description": "The total number of related forwarded email engagements.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/marketing.yml", "compiled_path": "target/compiled/hubspot/models/marketing/hubspot__contacts.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.122045, "compiled_sql": "\n\n\n\nwith  __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n),contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n\n\n), email_sends as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`\n\n), email_metrics as (\n\n    select \n        recipient_email_address,\n        \n        sum(bounces) as total_bounces,\n        count(distinct case when bounces > 0 then email_send_id end) as total_unique_bounces\n        ,\n        \n        sum(clicks) as total_clicks,\n        count(distinct case when clicks > 0 then email_send_id end) as total_unique_clicks\n        ,\n        \n        sum(deferrals) as total_deferrals,\n        count(distinct case when deferrals > 0 then email_send_id end) as total_unique_deferrals\n        ,\n        \n        sum(deliveries) as total_deliveries,\n        count(distinct case when deliveries > 0 then email_send_id end) as total_unique_deliveries\n        ,\n        \n        sum(drops) as total_drops,\n        count(distinct case when drops > 0 then email_send_id end) as total_unique_drops\n        ,\n        \n        sum(forwards) as total_forwards,\n        count(distinct case when forwards > 0 then email_send_id end) as total_unique_forwards\n        ,\n        \n        sum(opens) as total_opens,\n        count(distinct case when opens > 0 then email_send_id end) as total_unique_opens\n        ,\n        \n        sum(prints) as total_prints,\n        count(distinct case when prints > 0 then email_send_id end) as total_unique_prints\n        ,\n        \n        sum(spam_reports) as total_spam_reports,\n        count(distinct case when spam_reports > 0 then email_send_id end) as total_unique_spam_reports\n        ,\n        \n        sum(unsubscribes) as total_unsubscribes,\n        count(distinct case when unsubscribes > 0 then email_send_id end) as total_unique_unsubscribes\n        \n        \n    from email_sends\n    group by 1\n\n), email_joined as (\n\n    select \n        contacts.*,\n        \n        coalesce(email_metrics.total_bounces, 0) as total_bounces,\n        coalesce(email_metrics.total_unique_bounces, 0) as total_unique_bounces\n        ,\n        \n        coalesce(email_metrics.total_clicks, 0) as total_clicks,\n        coalesce(email_metrics.total_unique_clicks, 0) as total_unique_clicks\n        ,\n        \n        coalesce(email_metrics.total_deferrals, 0) as total_deferrals,\n        coalesce(email_metrics.total_unique_deferrals, 0) as total_unique_deferrals\n        ,\n        \n        coalesce(email_metrics.total_deliveries, 0) as total_deliveries,\n        coalesce(email_metrics.total_unique_deliveries, 0) as total_unique_deliveries\n        ,\n        \n        coalesce(email_metrics.total_drops, 0) as total_drops,\n        coalesce(email_metrics.total_unique_drops, 0) as total_unique_drops\n        ,\n        \n        coalesce(email_metrics.total_forwards, 0) as total_forwards,\n        coalesce(email_metrics.total_unique_forwards, 0) as total_unique_forwards\n        ,\n        \n        coalesce(email_metrics.total_opens, 0) as total_opens,\n        coalesce(email_metrics.total_unique_opens, 0) as total_unique_opens\n        ,\n        \n        coalesce(email_metrics.total_prints, 0) as total_prints,\n        coalesce(email_metrics.total_unique_prints, 0) as total_unique_prints\n        ,\n        \n        coalesce(email_metrics.total_spam_reports, 0) as total_spam_reports,\n        coalesce(email_metrics.total_unique_spam_reports, 0) as total_unique_spam_reports\n        ,\n        \n        coalesce(email_metrics.total_unsubscribes, 0) as total_unsubscribes,\n        coalesce(email_metrics.total_unique_unsubscribes, 0) as total_unique_unsubscribes\n        \n        \n    from contacts\n    left join email_metrics\n        on contacts.email = email_metrics.recipient_email_address\n\n\n\n\n\n\n\n), engagements as (\n\n    select *\n    from __dbt__cte__int_hubspot__engagement_metrics__by_contact\n\n), engagements_joined as (\n\n    select \n        email_joined.*,\n        \n        coalesce(engagements.count_engagement_notes,0) as count_engagement_notes ,\n        \n        coalesce(engagements.count_engagement_tasks,0) as count_engagement_tasks ,\n        \n        coalesce(engagements.count_engagement_calls,0) as count_engagement_calls ,\n        \n        coalesce(engagements.count_engagement_meetings,0) as count_engagement_meetings ,\n        \n        coalesce(engagements.count_engagement_emails,0) as count_engagement_emails ,\n        \n        coalesce(engagements.count_engagement_incoming_emails,0) as count_engagement_incoming_emails ,\n        \n        coalesce(engagements.count_engagement_forwarded_emails,0) as count_engagement_forwarded_emails \n        \n    from email_joined\n    left join engagements\n        using (contact_id)\n\n)\n\nselect *\nfrom engagements_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__engagement_metrics__by_contact", "sql": " __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n)"}], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contacts`"}, "model.hubspot.hubspot__email_campaigns": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\n\nwith campaigns as (\n\n    select *\n    from {{ ref('stg_hubspot__email_campaign') }}\n\n), email_sends as (\n\n    select *\n    from {{ ref('hubspot__email_sends') }}\n\n), email_metrics as (\n\n    select \n        email_campaign_id,\n        {% for metric in var('email_metrics') %}\n        sum(email_sends.{{ metric }}) as total_{{ metric }},\n        count(distinct case when email_sends.{{ metric }} > 0 then email_send_id end) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from email_sends\n    group by 1\n\n), joined as (\n\n    select \n        campaigns.*,\n        {% for metric in var('email_metrics') %}\n        coalesce(email_metrics.total_{{ metric }}, 0) as total_{{ metric }},\n        coalesce(email_metrics.total_unique_{{ metric }}, 0) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from campaigns\n    left join email_metrics\n        on campaigns.email_campaign_id = email_metrics.email_campaign_id\n\n)\n\nselect *\nfrom joined", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot_source.stg_hubspot__email_campaign", "model.hubspot.hubspot__email_sends"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "hubspot__email_campaigns"], "unique_id": "model.hubspot.hubspot__email_campaigns", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/hubspot__email_campaigns.sql", "original_file_path": "models/marketing/hubspot__email_campaigns.sql", "name": "hubspot__email_campaigns", "alias": "hubspot__email_campaigns", "checksum": {"name": "sha256", "checksum": "985050fe992f3a76c4fb5066042e8fe32fb1dfbc129e2ad37935ca26318b5b00"}, "tags": [], "refs": [["stg_hubspot__email_campaign"], ["hubspot__email_sends"]], "sources": [], "description": "Each record represents an email campaign in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The app ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_name": {"name": "app_name", "description": "The app name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "The ID of the content.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_name": {"name": "email_campaign_name", "description": "The name of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_sub_type": {"name": "email_campaign_sub_type", "description": "The email campaign sub-type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_subject": {"name": "email_campaign_subject", "description": "The subject of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_type": {"name": "email_campaign_type", "description": "The email campaign type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_included": {"name": "num_included", "description": "The number of messages included as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_queued": {"name": "num_queued", "description": "The number of messages queued as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_bounces": {"name": "total_bounces", "description": "The total number of bounce email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_clicks": {"name": "total_clicks", "description": "The total number of click email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deferrals": {"name": "total_deferrals", "description": "The total number of deferral email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_deliveries": {"name": "total_deliveries", "description": "The total number of delivery email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_drops": {"name": "total_drops", "description": "The total number of drop email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_forwards": {"name": "total_forwards", "description": "The total number of forward email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_opens": {"name": "total_opens", "description": "The total number of open email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_prints": {"name": "total_prints", "description": "The total number of print email events.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_spam_reports": {"name": "total_spam_reports", "description": "The total number of unique email sends with a spam report email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unsubscribes": {"name": "total_unsubscribes", "description": "The total number of unique email sends with a unsubscribe email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_bounces": {"name": "total_unique_bounces", "description": "The total number of unique email sends with a bounce email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_clicks": {"name": "total_unique_clicks", "description": "The total number of unique email sends with a click email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deferrals": {"name": "total_unique_deferrals", "description": "The total number of unique email sends with a deferral email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_deliveries": {"name": "total_unique_deliveries", "description": "The total number of unique email sends with a delivery email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_drops": {"name": "total_unique_drops", "description": "The total number of unique email sends with a drop email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_forwards": {"name": "total_unique_forwards", "description": "The total number of unique email sends with a forward email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_opens": {"name": "total_unique_opens", "description": "The total number of unique email sends with a opens email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_unique_prints": {"name": "total_unique_prints", "description": "The total number of unique email sends with a print email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/marketing.yml", "compiled_path": "target/compiled/hubspot/models/marketing/hubspot__email_campaigns.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.1122391, "compiled_sql": "\n\n\nwith campaigns as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign`\n\n), email_sends as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`\n\n), email_metrics as (\n\n    select \n        email_campaign_id,\n        \n        sum(email_sends.bounces) as total_bounces,\n        count(distinct case when email_sends.bounces > 0 then email_send_id end) as total_unique_bounces\n        ,\n        \n        sum(email_sends.clicks) as total_clicks,\n        count(distinct case when email_sends.clicks > 0 then email_send_id end) as total_unique_clicks\n        ,\n        \n        sum(email_sends.deferrals) as total_deferrals,\n        count(distinct case when email_sends.deferrals > 0 then email_send_id end) as total_unique_deferrals\n        ,\n        \n        sum(email_sends.deliveries) as total_deliveries,\n        count(distinct case when email_sends.deliveries > 0 then email_send_id end) as total_unique_deliveries\n        ,\n        \n        sum(email_sends.drops) as total_drops,\n        count(distinct case when email_sends.drops > 0 then email_send_id end) as total_unique_drops\n        ,\n        \n        sum(email_sends.forwards) as total_forwards,\n        count(distinct case when email_sends.forwards > 0 then email_send_id end) as total_unique_forwards\n        ,\n        \n        sum(email_sends.opens) as total_opens,\n        count(distinct case when email_sends.opens > 0 then email_send_id end) as total_unique_opens\n        ,\n        \n        sum(email_sends.prints) as total_prints,\n        count(distinct case when email_sends.prints > 0 then email_send_id end) as total_unique_prints\n        ,\n        \n        sum(email_sends.spam_reports) as total_spam_reports,\n        count(distinct case when email_sends.spam_reports > 0 then email_send_id end) as total_unique_spam_reports\n        ,\n        \n        sum(email_sends.unsubscribes) as total_unsubscribes,\n        count(distinct case when email_sends.unsubscribes > 0 then email_send_id end) as total_unique_unsubscribes\n        \n        \n    from email_sends\n    group by 1\n\n), joined as (\n\n    select \n        campaigns.*,\n        \n        coalesce(email_metrics.total_bounces, 0) as total_bounces,\n        coalesce(email_metrics.total_unique_bounces, 0) as total_unique_bounces\n        ,\n        \n        coalesce(email_metrics.total_clicks, 0) as total_clicks,\n        coalesce(email_metrics.total_unique_clicks, 0) as total_unique_clicks\n        ,\n        \n        coalesce(email_metrics.total_deferrals, 0) as total_deferrals,\n        coalesce(email_metrics.total_unique_deferrals, 0) as total_unique_deferrals\n        ,\n        \n        coalesce(email_metrics.total_deliveries, 0) as total_deliveries,\n        coalesce(email_metrics.total_unique_deliveries, 0) as total_unique_deliveries\n        ,\n        \n        coalesce(email_metrics.total_drops, 0) as total_drops,\n        coalesce(email_metrics.total_unique_drops, 0) as total_unique_drops\n        ,\n        \n        coalesce(email_metrics.total_forwards, 0) as total_forwards,\n        coalesce(email_metrics.total_unique_forwards, 0) as total_unique_forwards\n        ,\n        \n        coalesce(email_metrics.total_opens, 0) as total_opens,\n        coalesce(email_metrics.total_unique_opens, 0) as total_unique_opens\n        ,\n        \n        coalesce(email_metrics.total_prints, 0) as total_prints,\n        coalesce(email_metrics.total_unique_prints, 0) as total_unique_prints\n        ,\n        \n        coalesce(email_metrics.total_spam_reports, 0) as total_spam_reports,\n        coalesce(email_metrics.total_unique_spam_reports, 0) as total_unique_spam_reports\n        ,\n        \n        coalesce(email_metrics.total_unsubscribes, 0) as total_unsubscribes,\n        coalesce(email_metrics.total_unique_unsubscribes, 0) as total_unique_unsubscribes\n        \n        \n    from campaigns\n    left join email_metrics\n        on campaigns.email_campaign_id = email_metrics.email_campaign_id\n\n)\n\nselect *\nfrom joined", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_campaigns`"}, "model.hubspot.hubspot__email_event_dropped": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_dropped_enabled'])) }}\n\n{{ email_events_joined(var('email_event_dropped')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_dropped", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_dropped"], "unique_id": "model.hubspot.hubspot__email_event_dropped", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_dropped.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_dropped.sql", "name": "hubspot__email_event_dropped", "alias": "hubspot__email_event_dropped", "checksum": {"name": "sha256", "checksum": "9db280fae885521922e3335072d40d3652dbce7de52ac8d53bb8849255b1a7bf"}, "tags": [], "refs": [["stg_hubspot__email_event_dropped"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a DROPPED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc_emails": {"name": "bcc_emails", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc_emails": {"name": "cc_emails", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_message": {"name": "drop_message", "description": "The raw message describing why the email message was dropped. This will usually provide additional details beyond 'dropReason'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_reason": {"name": "drop_reason", "description": "The reason why the email message was dropped. See below for the possible values.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to_email": {"name": "reply_to_email", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_dropped.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.168399, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_dropped`"}, "model.hubspot.hubspot__email_event_deferred": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_deferred_enabled'])) }}\n\n{{ email_events_joined(var('email_event_deferred')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_deferred", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_deferred"], "unique_id": "model.hubspot.hubspot__email_event_deferred", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_deferred.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_deferred.sql", "name": "hubspot__email_event_deferred", "alias": "hubspot__email_event_deferred", "checksum": {"name": "sha256", "checksum": "21fed29e600a6ab8cf2ed92245ae1890edffd68c2609673addbfd37880f4f02b"}, "tags": [], "refs": [["stg_hubspot__email_event_deferred"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a DEFERRED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attempt_number": {"name": "attempt_number", "description": "The delivery attempt number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_deferred.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.160125, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_deferred`"}, "model.hubspot.hubspot__email_event_spam_report": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_spam_report_enabled'])) }}\n\n{{ email_events_joined(var('email_event_spam_report')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_spam_report", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_spam_report"], "unique_id": "model.hubspot.hubspot__email_event_spam_report", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_spam_report.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_spam_report.sql", "name": "hubspot__email_event_spam_report", "alias": "hubspot__email_event_spam_report", "checksum": {"name": "sha256", "checksum": "ff144be07b2e2a466f3dbf5ed2d3b97f4cbb9080d369fbc04d5bde57b65964df"}, "tags": [], "refs": [["stg_hubspot__email_event_spam_report"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a SPAM_REPORT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_spam_report.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.189863, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_spam_report`"}, "model.hubspot.hubspot__email_event_opens": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_open_enabled'])) }}\n\n{{ email_events_joined(var('email_event_open')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_open", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_opens"], "unique_id": "model.hubspot.hubspot__email_event_opens", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_opens.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_opens.sql", "name": "hubspot__email_event_opens", "alias": "hubspot__email_event_opens", "checksum": {"name": "sha256", "checksum": "aba80489d4916d6105413d9974c562b0289f0788b45806048634728a518f5063"}, "tags": [], "refs": [["stg_hubspot__email_event_open"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a OPEN email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "duration_open": {"name": "duration_open", "description": "If provided and nonzero, the approximate number of milliseconds the user had opened the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_opens.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.176964, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_opens`"}, "model.hubspot.hubspot__email_event_delivered": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_delivered_enabled'])) }}\n\n{{ email_events_joined(var('email_event_delivered')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_delivered", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_delivered"], "unique_id": "model.hubspot.hubspot__email_event_delivered", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_delivered.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_delivered.sql", "name": "hubspot__email_event_delivered", "alias": "hubspot__email_event_delivered", "checksum": {"name": "sha256", "checksum": "a0bf3a4ea55c05767c8e023e60bc7d5ada0bb60bf1425376a74c6af9d5610f80"}, "tags": [], "refs": [["stg_hubspot__email_event_delivered"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a DELIVERED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "smtp_id": {"name": "smtp_id", "description": "An ID attached to the message by HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_delivered.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.163479, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_delivered`"}, "model.hubspot.hubspot__email_event_status_change": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_status_change_enabled'])) }}\n\n{{ email_events_joined(var('email_event_status_change')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_status_change", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_status_change"], "unique_id": "model.hubspot.hubspot__email_event_status_change", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_status_change.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_status_change.sql", "name": "hubspot__email_event_status_change", "alias": "hubspot__email_event_status_change", "checksum": {"name": "sha256", "checksum": "877fbfc520033497432cddf34df419233cce3b916eb27a3384837fb2b6077ad3"}, "tags": [], "refs": [["stg_hubspot__email_event_status_change"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a STATUS_CHANGE email event in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source of the subscription change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_bounced": {"name": "is_bounced", "description": "A HubSpot employee explicitly initiated the status change to block messages to the recipient. \n(Note this usage has been deprecated in favor of dropping messages with a 'dropReason' of BLOCKED_ADDRESS.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requested_by_email": {"name": "requested_by_email", "description": "The email address of the person requesting the change on behalf of the recipient. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subscription_status": {"name": "subscription_status", "description": "The recipient's portal subscription status. \nNote that if this is 'UNSUBSCRIBED', the property 'subscriptions' is not necessarily an empty array, nor are all \nsubscriptions contained in it necessarily going to have their statuses set to 'UNSUBSCRIBED'.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subscriptions": {"name": "subscriptions", "description": "An array of JSON objects representing the status of subscriptions for the recipient. \nEach JSON subscription object is comprised of the properties: 'id', 'status'.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_status_change.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.1949298, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`"}, "model.hubspot.hubspot__email_event_sent": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_sent_enabled'])) }}\n\n{{ email_events_joined(var('email_event_sent')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_sent", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_sent"], "unique_id": "model.hubspot.hubspot__email_event_sent", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_sent.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_sent.sql", "name": "hubspot__email_event_sent", "alias": "hubspot__email_event_sent", "checksum": {"name": "sha256", "checksum": "d1178a91839f9f32bd6d11ae880ffa99dd2ebbc3680ad949d028aea275f070e4"}, "tags": [], "refs": [["stg_hubspot__email_event_sent"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a SENT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc_emails": {"name": "bcc_emails", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc_emails": {"name": "cc_emails", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subject": {"name": "email_subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to_email": {"name": "reply_to_email", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_sent.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.185987, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_sent`"}, "model.hubspot.hubspot__email_event_print": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_print_enabled'])) }}\n\n{{ email_events_joined(var('email_event_print')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_print", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_print"], "unique_id": "model.hubspot.hubspot__email_event_print", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_print.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_print.sql", "name": "hubspot__email_event_print", "alias": "hubspot__email_event_print", "checksum": {"name": "sha256", "checksum": "f704a54b54554e3c6de87df4d1d2162c3b870f2693f9f422325fdbb3d9f009d7"}, "tags": [], "refs": [["stg_hubspot__email_event_print"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a PRINT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_print.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.181018, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_print`"}, "model.hubspot.hubspot__email_event_clicks": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_click_enabled'])) }}\n\n{{ email_events_joined(var('email_event_click')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_click", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_clicks"], "unique_id": "model.hubspot.hubspot__email_event_clicks", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_clicks.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_clicks.sql", "name": "hubspot__email_event_clicks", "alias": "hubspot__email_event_clicks", "checksum": {"name": "sha256", "checksum": "4bf574d2286d34210c35025fa04875d1d4f1e0ab43cfaea0387675cfbc1b39d6"}, "tags": [], "refs": [["stg_hubspot__email_event_click"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a CLICK email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "click_url": {"name": "click_url", "description": "The URL within the message that the recipient clicked.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer_url": {"name": "referer_url", "description": "The URL of the webpage that linked to the URL clicked. Whether this is provided, and what its value is, is determined by the recipient's email client.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_clicks.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.156629, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_clicks`"}, "model.hubspot.hubspot__email_event_forward": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_forward_enabled'])) }}\n\n{{ email_events_joined(var('email_event_forward')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_forward", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_forward"], "unique_id": "model.hubspot.hubspot__email_event_forward", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_forward.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_forward.sql", "name": "hubspot__email_event_forward", "alias": "hubspot__email_event_forward", "checksum": {"name": "sha256", "checksum": "5a2e3978e5b098a1e2a5a469c47d0eb79c5af03225ea9076ef5d0048b6b9c775"}, "tags": [], "refs": [["stg_hubspot__email_event_forward"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a FORWARD email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo_location": {"name": "geo_location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_forward.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.17248, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_forward`"}, "model.hubspot.hubspot__email_event_bounce": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_bounce_enabled'])) }}\n\n{{ email_events_joined(var('email_event_bounce')) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.email_events_joined"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_bounce", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "email_events", "hubspot__email_event_bounce"], "unique_id": "model.hubspot.hubspot__email_event_bounce", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/email_events/hubspot__email_event_bounce.sql", "original_file_path": "models/marketing/email_events/hubspot__email_event_bounce.sql", "name": "hubspot__email_event_bounce", "alias": "hubspot__email_event_bounce", "checksum": {"name": "sha256", "checksum": "994e1d2ef6b46304a20dfc45fd515fc0ee546b02502626d794aa525d1e51d709"}, "tags": [], "refs": [["stg_hubspot__email_event_bounce"], ["stg_hubspot__email_event"], ["stg_hubspot__contact"]], "sources": [], "description": "Each record represents a BOUNCE email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bounce_category": {"name": "bounce_category", "description": "The best-guess of the type of bounce encountered. \nIf an appropriate category couldn't be determined, this property is omitted. See below for the possible values. \nNote that this is a derived value, and may be modified at any time to improve the accuracy of classification.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_response": {"name": "returned_response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "returned_status": {"name": "returned_status", "description": "The status code returned from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient_email_address": {"name": "recipient_email_address", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_timestamp": {"name": "email_send_timestamp", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_id": {"name": "email_send_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/email_events/email_events.yml", "compiled_path": "target/compiled/hubspot/models/marketing/email_events/hubspot__email_event_bounce.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.1519418, "compiled_sql": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce`\n\n), events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), contacts as (\n\n    select *\n    from  \n            `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact` \n        \n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_bounce`"}, "model.hubspot.hubspot__contact_history": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_property_enabled'])) }}\n\nwith history as (\n\n    select *\n    from {{ var('contact_property_history') }}\n\n), windows as (\n\n    select\n        contact_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by contact_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        {{ dbt_utils.surrogate_key(['field_name','contact_id','valid_from']) }} as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.dbt_utils.surrogate_key"], "nodes": ["model.hubspot_source.stg_hubspot__contact_property_history"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "history", "hubspot__contact_history"], "unique_id": "model.hubspot.hubspot__contact_history", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/history/hubspot__contact_history.sql", "original_file_path": "models/marketing/history/hubspot__contact_history.sql", "name": "hubspot__contact_history", "alias": "hubspot__contact_history", "checksum": {"name": "sha256", "checksum": "89c6d7ddfd1e53d8f77f3acd3cce63bad477dbd075b2ffd14b0f3a5dc5b53b76"}, "tags": [], "refs": [["stg_hubspot__contact_property_history"]], "sources": [], "description": "Each record represents a change to contact record in Hubspot; the grain of this model is contact_id -> field_name -> valid_to.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source": {"name": "change_source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_source_id": {"name": "change_source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_from": {"name": "valid_from", "description": "The timestamp the change was valid from.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valid_to": {"name": "valid_to", "description": "The timestamp the change was valid to. Null if still valid.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "field_name": {"name": "field_name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "new_value": {"name": "new_value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/history/history.yml", "compiled_path": "target/compiled/hubspot/models/marketing/history/hubspot__contact_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.23567, "compiled_sql": "\n\nwith history as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_property_history`\n\n), windows as (\n\n    select\n        contact_id,\n        field_name,\n        change_source,\n        change_source_id,\n        change_timestamp as valid_from,\n        new_value,\n        lead(change_timestamp) over (partition by contact_id, field_name order by change_timestamp) as valid_to\n    from history\n\n), surrogate as (\n\n    select \n        windows.*,\n        to_hex(md5(cast(coalesce(cast(field_name as \n    string\n), '') || '-' || coalesce(cast(contact_id as \n    string\n), '') || '-' || coalesce(cast(valid_from as \n    string\n), '') as \n    string\n))) as id\n    from windows\n\n)\n\nselect *\nfrom surrogate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_history`"}, "model.hubspot.int_hubspot__engagement_metrics__by_contact": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_sales_enabled','hubspot_engagement_enabled','hubspot_engagement_contact_enabled'])) }}\n\nwith engagements as (\n\n    select *\n    from {{ ref('hubspot__engagements') }}\n\n), engagement_contacts as (\n\n    select *\n    from {{ var('engagement_contact') }}\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    {{ engagements_aggregated('engagement_contacts_joined', 'contact_id') }}\n\n)\n\nselect *\nfrom engagement_contacts_agg", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot.engagements_aggregated"], "nodes": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_contact"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "intermediate", "int_hubspot__engagement_metrics__by_contact"], "unique_id": "model.hubspot.int_hubspot__engagement_metrics__by_contact", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/intermediate/int_hubspot__engagement_metrics__by_contact.sql", "original_file_path": "models/marketing/intermediate/int_hubspot__engagement_metrics__by_contact.sql", "name": "int_hubspot__engagement_metrics__by_contact", "alias": "int_hubspot__engagement_metrics__by_contact", "checksum": {"name": "sha256", "checksum": "83eba876405c4e286e4ac25814521432fed4bedb2cd0c2a3ece56692fbc5cb76"}, "tags": [], "refs": [["hubspot__engagements"], ["stg_hubspot__engagement_contact"]], "sources": [], "description": "", "columns": {"contact_id": {"name": "contact_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/intermediate/intermediate.yml", "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/int_hubspot__engagement_metrics__by_contact.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.2476811, "compiled_sql": "\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.hubspot.int_hubspot__email_event_aggregates": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled'])) }}\n\nwith events as (\n\n    select *\n    from {{ var('email_event') }}\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot_source.stg_hubspot__email_event"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "intermediate", "int_hubspot__email_event_aggregates"], "unique_id": "model.hubspot.int_hubspot__email_event_aggregates", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/intermediate/int_hubspot__email_event_aggregates.sql", "original_file_path": "models/marketing/intermediate/int_hubspot__email_event_aggregates.sql", "name": "int_hubspot__email_event_aggregates", "alias": "int_hubspot__email_event_aggregates", "checksum": {"name": "sha256", "checksum": "c0a91a82af153e1cef4c6056ef7dc9386dc907a3806fc053a47db4c600d7d5ef"}, "tags": [], "refs": [["stg_hubspot__email_event"]], "sources": [], "description": "", "columns": {"email_send_id": {"name": "email_send_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/intermediate/intermediate.yml", "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/int_hubspot__email_event_aggregates.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.246911, "compiled_sql": "\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.hubspot.int_hubspot__email_aggregate_status_change": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_email_event_status_change_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('hubspot__email_event_status_change') }}\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot.hubspot__email_event_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "intermediate", "int_hubspot__email_aggregate_status_change"], "unique_id": "model.hubspot.int_hubspot__email_aggregate_status_change", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/intermediate/int_hubspot__email_aggregate_status_change.sql", "original_file_path": "models/marketing/intermediate/int_hubspot__email_aggregate_status_change.sql", "name": "int_hubspot__email_aggregate_status_change", "alias": "int_hubspot__email_aggregate_status_change", "checksum": {"name": "sha256", "checksum": "038d0982148b2999860d6d971cceca3a820a052270d4ac0d52d7884220dbd4dd"}, "tags": [], "refs": [["hubspot__email_event_status_change"]], "sources": [], "description": "", "columns": {"email_send_id": {"name": "email_send_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/intermediate/intermediate.yml", "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/int_hubspot__email_aggregate_status_change.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.245368, "compiled_sql": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.hubspot.int_hubspot__email_metrics__by_contact_list": {"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled','hubspot_email_event_enabled','hubspot_contact_list_member_enabled']), materialized='table') }}\n\nwith email_sends as (\n\n    select *\n    from {{ ref('hubspot__email_sends') }}\n\n), contact_list_member as (\n\n    select *\n    from {{ var('contact_list_member') }}\n\n), joined as (\n\n    select\n        email_sends.*,\n        contact_list_member.contact_list_id\n    from email_sends\n    left join contact_list_member\n        using (contact_id)\n    where contact_list_member.contact_list_id is not null\n\n), email_metrics as (\n\n    select \n        contact_list_id,\n        {% for metric in var('email_metrics') %}\n        sum({{ metric }}) as total_{{ metric }},\n        count(distinct case when {{ metric }} > 0 then email_send_id end) as total_unique_{{ metric }}\n        {% if not loop.last %},{% endif %}\n        {% endfor %}\n    from joined\n    group by 1\n\n)\n\nselect *\nfrom email_metrics", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": ["model.hubspot.hubspot__email_sends", "model.hubspot_source.stg_hubspot__contact_list_member"]}, "config": {"enabled": true, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "intermediate", "int_hubspot__email_metrics__by_contact_list"], "unique_id": "model.hubspot.int_hubspot__email_metrics__by_contact_list", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/intermediate/int_hubspot__email_metrics__by_contact_list.sql", "original_file_path": "models/marketing/intermediate/int_hubspot__email_metrics__by_contact_list.sql", "name": "int_hubspot__email_metrics__by_contact_list", "alias": "int_hubspot__email_metrics__by_contact_list", "checksum": {"name": "sha256", "checksum": "e6cb79f4682e88074fc16e4cd576a1b505ccf8b65fdc8c0a5e9f678d43534c05"}, "tags": [], "refs": [["hubspot__email_sends"], ["stg_hubspot__contact_list_member"]], "sources": [], "description": "", "columns": {"contact_list_id": {"name": "contact_list_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot://models/marketing/intermediate/intermediate.yml", "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/int_hubspot__email_metrics__by_contact_list.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "hubspot", "enabled": true}, "created_at": 1655143063.246134, "compiled_sql": "\n\nwith email_sends as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`\n\n), contact_list_member as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list_member`\n\n), joined as (\n\n    select\n        email_sends.*,\n        contact_list_member.contact_list_id\n    from email_sends\n    left join contact_list_member\n        using (contact_id)\n    where contact_list_member.contact_list_id is not null\n\n), email_metrics as (\n\n    select \n        contact_list_id,\n        \n        sum(bounces) as total_bounces,\n        count(distinct case when bounces > 0 then email_send_id end) as total_unique_bounces\n        ,\n        \n        sum(clicks) as total_clicks,\n        count(distinct case when clicks > 0 then email_send_id end) as total_unique_clicks\n        ,\n        \n        sum(deferrals) as total_deferrals,\n        count(distinct case when deferrals > 0 then email_send_id end) as total_unique_deferrals\n        ,\n        \n        sum(deliveries) as total_deliveries,\n        count(distinct case when deliveries > 0 then email_send_id end) as total_unique_deliveries\n        ,\n        \n        sum(drops) as total_drops,\n        count(distinct case when drops > 0 then email_send_id end) as total_unique_drops\n        ,\n        \n        sum(forwards) as total_forwards,\n        count(distinct case when forwards > 0 then email_send_id end) as total_unique_forwards\n        ,\n        \n        sum(opens) as total_opens,\n        count(distinct case when opens > 0 then email_send_id end) as total_unique_opens\n        ,\n        \n        sum(prints) as total_prints,\n        count(distinct case when prints > 0 then email_send_id end) as total_unique_prints\n        ,\n        \n        sum(spam_reports) as total_spam_reports,\n        count(distinct case when spam_reports > 0 then email_send_id end) as total_unique_spam_reports\n        ,\n        \n        sum(unsubscribes) as total_unsubscribes,\n        count(distinct case when unsubscribes > 0 then email_send_id end) as total_unique_unsubscribes\n        \n        \n    from joined\n    group by 1\n\n)\n\nselect *\nfrom email_metrics", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`dbt-package-testing`.`hubspot_integration_test_hubspot`.`int_hubspot__email_metrics__by_contact_list`"}, "test.hubspot_source.unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.ba90fa6113": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "deal_pipeline_stage_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal_pipeline_stage')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.ba90fa6113", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id", "alias": "unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal_pipeline_stage"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.519312, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select deal_pipeline_stage_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\n  where deal_pipeline_stage_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_pipeline_stage_id", "file_key_name": "models.stg_hubspot__deal_pipeline_stage"}, "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.d53656553e": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b\") }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "deal_pipeline_stage_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal_pipeline_stage')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage"]}, "config": {"enabled": true, "alias": "not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.d53656553e", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id", "alias": "not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal_pipeline_stage"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_stg_hubspot__deal_pip_5a707b4fbec8bec07f54d0383d90ea2b"}, "created_at": 1655143062.520858, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline_stage`\nwhere deal_pipeline_stage_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_pipeline_stage_id", "file_key_name": "models.stg_hubspot__deal_pipeline_stage"}, "test.hubspot_source.unique_stg_hubspot__deal_pipeline_deal_pipeline_id.dff6c45403": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "deal_pipeline_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal_pipeline')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__deal_pipeline_deal_pipeline_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__deal_pipeline_deal_pipeline_id.dff6c45403", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__deal_pipeline_deal_pipeline_id.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "unique_stg_hubspot__deal_pipeline_deal_pipeline_id", "alias": "unique_stg_hubspot__deal_pipeline_deal_pipeline_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal_pipeline"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/unique_stg_hubspot__deal_pipeline_deal_pipeline_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.522709, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select deal_pipeline_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\n  where deal_pipeline_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_pipeline_id", "file_key_name": "models.stg_hubspot__deal_pipeline"}, "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.8a0e3cd7a3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "deal_pipeline_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal_pipeline')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal_pipeline"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__deal_pipeline_deal_pipeline_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.8a0e3cd7a3", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "not_null_stg_hubspot__deal_pipeline_deal_pipeline_id", "alias": "not_null_stg_hubspot__deal_pipeline_deal_pipeline_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal_pipeline"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.527369, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal_pipeline`\nwhere deal_pipeline_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_pipeline_id", "file_key_name": "models.stg_hubspot__deal_pipeline"}, "test.hubspot_source.not_null_stg_hubspot__deal_deal_id.ff48693e20": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "deal_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__deal_deal_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__deal_deal_id.ff48693e20", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__deal_deal_id.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "not_null_stg_hubspot__deal_deal_id", "alias": "not_null_stg_hubspot__deal_deal_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/not_null_stg_hubspot__deal_deal_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.5304918, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\nwhere deal_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_id", "file_key_name": "models.stg_hubspot__deal"}, "test.hubspot_source.unique_stg_hubspot__deal_deal_id.ac1628ac69": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "deal_id", "model": "{{ get_where_subquery(ref('stg_hubspot__deal')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__deal"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__deal_deal_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__deal_deal_id.ac1628ac69", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__deal_deal_id.sql", "original_file_path": "models/stg_hubspot__deal.yml", "name": "unique_stg_hubspot__deal_deal_id", "alias": "unique_stg_hubspot__deal_deal_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__deal"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__deal.yml/unique_stg_hubspot__deal_deal_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.534113, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select deal_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__deal`\n  where deal_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_id", "file_key_name": "models.stg_hubspot__deal"}, "test.hubspot_source.unique_stg_hubspot__contact_list_contact_list_id.036739c1b0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('stg_hubspot__contact_list')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__contact_list"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__contact_list_contact_list_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__contact_list_contact_list_id.036739c1b0", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__contact_list_contact_list_id.sql", "original_file_path": "models/stg_hubspot__contact.yml", "name": "unique_stg_hubspot__contact_list_contact_list_id", "alias": "unique_stg_hubspot__contact_list_contact_list_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__contact_list"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact.yml/unique_stg_hubspot__contact_list_contact_list_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.588625, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select contact_list_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list`\n  where contact_list_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.stg_hubspot__contact_list"}, "test.hubspot_source.not_null_stg_hubspot__contact_list_contact_list_id.ff8e4cc29a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('stg_hubspot__contact_list')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__contact_list"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__contact_list_contact_list_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__contact_list_contact_list_id.ff8e4cc29a", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__contact_list_contact_list_id.sql", "original_file_path": "models/stg_hubspot__contact.yml", "name": "not_null_stg_hubspot__contact_list_contact_list_id", "alias": "not_null_stg_hubspot__contact_list_contact_list_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__contact_list"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact.yml/not_null_stg_hubspot__contact_list_contact_list_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.5918689, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact_list`\nwhere contact_list_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.stg_hubspot__contact_list"}, "test.hubspot_source.unique_stg_hubspot__contact_contact_id.b9135eb03a": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_hubspot__contact')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__contact_contact_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__contact_contact_id.b9135eb03a", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__contact_contact_id.sql", "original_file_path": "models/stg_hubspot__contact.yml", "name": "unique_stg_hubspot__contact_contact_id", "alias": "unique_stg_hubspot__contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__contact"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact.yml/unique_stg_hubspot__contact_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.594178, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select contact_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact`\n  where contact_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.stg_hubspot__contact"}, "test.hubspot_source.not_null_stg_hubspot__contact_contact_id.9f112f8944": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_hubspot__contact')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__contact"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__contact_contact_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__contact_contact_id.9f112f8944", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__contact_contact_id.sql", "original_file_path": "models/stg_hubspot__contact.yml", "name": "not_null_stg_hubspot__contact_contact_id", "alias": "not_null_stg_hubspot__contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__contact"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__contact.yml/not_null_stg_hubspot__contact_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.596163, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__contact`\nwhere contact_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.stg_hubspot__contact"}, "test.hubspot_source.unique_stg_hubspot__email_event_bounce_event_id.0341ffa8e9": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_bounce')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_bounce"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_bounce_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_bounce_event_id.0341ffa8e9", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_bounce_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_bounce_event_id", "alias": "unique_stg_hubspot__email_event_bounce_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_bounce"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_bounce_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.639007, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_bounce"}, "test.hubspot_source.not_null_stg_hubspot__email_event_bounce_event_id.71b13d26d3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_bounce')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_bounce"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_bounce_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_bounce_event_id.71b13d26d3", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_bounce_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_bounce_event_id", "alias": "not_null_stg_hubspot__email_event_bounce_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_bounce"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_bounce_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.641651, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_bounce`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_bounce"}, "test.hubspot_source.unique_stg_hubspot__email_event_click_event_id.da8d8487a1": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_click')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_click"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_click_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_click_event_id.da8d8487a1", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_click_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_click_event_id", "alias": "unique_stg_hubspot__email_event_click_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_click"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_click_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.64373, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_click"}, "test.hubspot_source.not_null_stg_hubspot__email_event_click_event_id.8a1be931c5": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_click')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_click"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_click_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_click_event_id.8a1be931c5", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_click_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_click_event_id", "alias": "not_null_stg_hubspot__email_event_click_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_click"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_click_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.645534, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_click`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_click"}, "test.hubspot_source.unique_stg_hubspot__email_event_deferred_event_id.2f779e2912": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_deferred')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_deferred"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_deferred_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_deferred_event_id.2f779e2912", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_deferred_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_deferred_event_id", "alias": "unique_stg_hubspot__email_event_deferred_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_deferred"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_deferred_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.647224, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_deferred"}, "test.hubspot_source.not_null_stg_hubspot__email_event_deferred_event_id.80293078e0": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_deferred')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_deferred"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_deferred_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_deferred_event_id.80293078e0", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_deferred_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_deferred_event_id", "alias": "not_null_stg_hubspot__email_event_deferred_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_deferred"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_deferred_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6490839, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_deferred`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_deferred"}, "test.hubspot_source.unique_stg_hubspot__email_event_delivered_event_id.f818bf03fc": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_delivered')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_delivered"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_delivered_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_delivered_event_id.f818bf03fc", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_delivered_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_delivered_event_id", "alias": "unique_stg_hubspot__email_event_delivered_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_delivered"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_delivered_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.650738, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_delivered"}, "test.hubspot_source.not_null_stg_hubspot__email_event_delivered_event_id.87c8eb3f20": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_delivered')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_delivered"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_delivered_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_delivered_event_id.87c8eb3f20", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_delivered_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_delivered_event_id", "alias": "not_null_stg_hubspot__email_event_delivered_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_delivered"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_delivered_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6523972, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_delivered`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_delivered"}, "test.hubspot_source.unique_stg_hubspot__email_event_dropped_event_id.40706bbf71": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_dropped')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_dropped"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_dropped_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_dropped_event_id.40706bbf71", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_dropped_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_dropped_event_id", "alias": "unique_stg_hubspot__email_event_dropped_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_dropped"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_dropped_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.654072, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_dropped"}, "test.hubspot_source.not_null_stg_hubspot__email_event_dropped_event_id.c92d449f52": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_dropped')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_dropped"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_dropped_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_dropped_event_id.c92d449f52", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_dropped_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_dropped_event_id", "alias": "not_null_stg_hubspot__email_event_dropped_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_dropped"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_dropped_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.655905, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_dropped`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_dropped"}, "test.hubspot_source.unique_stg_hubspot__email_event_forward_event_id.7f133d2dd1": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_forward')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_forward"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_forward_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_forward_event_id.7f133d2dd1", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_forward_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_forward_event_id", "alias": "unique_stg_hubspot__email_event_forward_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_forward"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_forward_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.657567, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_forward"}, "test.hubspot_source.not_null_stg_hubspot__email_event_forward_event_id.b9a8bf63b3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_forward')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_forward"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_forward_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_forward_event_id.b9a8bf63b3", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_forward_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_forward_event_id", "alias": "not_null_stg_hubspot__email_event_forward_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_forward"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_forward_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6592221, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_forward`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_forward"}, "test.hubspot_source.unique_stg_hubspot__email_event_open_event_id.3a369549b1": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_open')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_open"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_open_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_open_event_id.3a369549b1", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_open_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_open_event_id", "alias": "unique_stg_hubspot__email_event_open_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_open"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_open_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.661084, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_open"}, "test.hubspot_source.not_null_stg_hubspot__email_event_open_event_id.a2e658fe16": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_open')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_open"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_open_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_open_event_id.a2e658fe16", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_open_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_open_event_id", "alias": "not_null_stg_hubspot__email_event_open_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_open"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_open_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6627321, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_open`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_open"}, "test.hubspot_source.unique_stg_hubspot__email_event_print_event_id.40a8ccd3f3": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_print')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_print"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_print_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_print_event_id.40a8ccd3f3", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_print_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_print_event_id", "alias": "unique_stg_hubspot__email_event_print_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_print"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_print_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.664402, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_print"}, "test.hubspot_source.not_null_stg_hubspot__email_event_print_event_id.94d4e09b3b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_print')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_print"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_print_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_print_event_id.94d4e09b3b", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_print_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_print_event_id", "alias": "not_null_stg_hubspot__email_event_print_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_print"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_print_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.666056, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_print`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_print"}, "test.hubspot_source.unique_stg_hubspot__email_event_sent_event_id.122cb22272": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_sent')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_sent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_sent_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_sent_event_id.122cb22272", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_sent_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_sent_event_id", "alias": "unique_stg_hubspot__email_event_sent_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_sent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_sent_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6680698, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_sent"}, "test.hubspot_source.not_null_stg_hubspot__email_event_sent_event_id.cf77d9f15d": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_sent')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_sent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_sent_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_sent_event_id.cf77d9f15d", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_sent_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_sent_event_id", "alias": "not_null_stg_hubspot__email_event_sent_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_sent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_sent_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6697202, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_sent`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_sent"}, "test.hubspot_source.unique_stg_hubspot__email_event_spam_report_event_id.448320447a": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_spam_report')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_spam_report"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_spam_report_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_spam_report_event_id.448320447a", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_spam_report_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_spam_report_event_id", "alias": "unique_stg_hubspot__email_event_spam_report_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_spam_report"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_spam_report_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.671365, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_spam_report"}, "test.hubspot_source.not_null_stg_hubspot__email_event_spam_report_event_id.2a56aced8f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_spam_report')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_spam_report"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_spam_report_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_spam_report_event_id.2a56aced8f", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_spam_report_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_spam_report_event_id", "alias": "not_null_stg_hubspot__email_event_spam_report_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_spam_report"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_spam_report_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.6732218, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_spam_report`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_spam_report"}, "test.hubspot_source.unique_stg_hubspot__email_event_status_change_event_id.13105203e0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_status_change_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_status_change_event_id.13105203e0", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_status_change_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_status_change_event_id", "alias": "unique_stg_hubspot__email_event_status_change_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_status_change_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.674878, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_status_change"}, "test.hubspot_source.not_null_stg_hubspot__email_event_status_change_event_id.c5e80297b1": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_status_change_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_status_change_event_id.c5e80297b1", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_status_change_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_status_change_event_id", "alias": "not_null_stg_hubspot__email_event_status_change_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_status_change_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.676534, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event_status_change`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event_status_change"}, "test.hubspot_source.unique_stg_hubspot__email_event_event_id.734683460d": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_event_event_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_event_event_id.734683460d", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_event_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_event_event_id", "alias": "unique_stg_hubspot__email_event_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_event_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.678186, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event"}, "test.hubspot_source.not_null_stg_hubspot__email_event_event_id.4f287f3531": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_event')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_event"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_event_event_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_event_event_id.4f287f3531", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_event_event_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_event_event_id", "alias": "not_null_stg_hubspot__email_event_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_event"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_event_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.680028, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.stg_hubspot__email_event"}, "test.hubspot_source.unique_stg_hubspot__email_campaign_email_campaign_id.9820d33f2e": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "email_campaign_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_campaign')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__email_campaign_email_campaign_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__email_campaign_email_campaign_id.9820d33f2e", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__email_campaign_email_campaign_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "unique_stg_hubspot__email_campaign_email_campaign_id", "alias": "unique_stg_hubspot__email_campaign_email_campaign_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_campaign"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/unique_stg_hubspot__email_campaign_email_campaign_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.681688, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select email_campaign_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign`\n  where email_campaign_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_campaign_id", "file_key_name": "models.stg_hubspot__email_campaign"}, "test.hubspot_source.not_null_stg_hubspot__email_campaign_email_campaign_id.79921899a6": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "email_campaign_id", "model": "{{ get_where_subquery(ref('stg_hubspot__email_campaign')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__email_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__email_campaign_email_campaign_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__email_campaign_email_campaign_id.79921899a6", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__email_campaign_email_campaign_id.sql", "original_file_path": "models/stg_hubspot__email.yml", "name": "not_null_stg_hubspot__email_campaign_email_campaign_id", "alias": "not_null_stg_hubspot__email_campaign_email_campaign_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__email_campaign"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__email.yml/not_null_stg_hubspot__email_campaign_email_campaign_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.683351, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_campaign`\nwhere email_campaign_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_campaign_id", "file_key_name": "models.stg_hubspot__email_campaign"}, "test.hubspot_source.not_null_stg_hubspot__engagement_call_engagement_id.5ceb3917bf": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_call')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_call"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_call_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_call_engagement_id.5ceb3917bf", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_call_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_call_engagement_id", "alias": "not_null_stg_hubspot__engagement_call_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_call"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_call_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7154229, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_call"}, "test.hubspot_source.unique_stg_hubspot__engagement_call_engagement_id.43b4413603": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_call')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_call"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_call_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_call_engagement_id.43b4413603", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_call_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_call_engagement_id", "alias": "unique_stg_hubspot__engagement_call_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_call"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_call_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7174249, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_call`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_call"}, "test.hubspot_source.not_null_stg_hubspot__engagement_email_engagement_id.175561ecca": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_email')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_email_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_email_engagement_id.175561ecca", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_email_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_email_engagement_id", "alias": "not_null_stg_hubspot__engagement_email_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_email"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_email_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.719409, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_email"}, "test.hubspot_source.unique_stg_hubspot__engagement_email_engagement_id.5eeb06dcfc": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_email')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_email_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_email_engagement_id.5eeb06dcfc", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_email_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_email_engagement_id", "alias": "unique_stg_hubspot__engagement_email_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_email"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_email_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.721133, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_email`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_email"}, "test.hubspot_source.not_null_stg_hubspot__engagement_meeting_engagement_id.18dd11dc28": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_meeting')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_meeting"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_meeting_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_meeting_engagement_id.18dd11dc28", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_meeting_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_meeting_engagement_id", "alias": "not_null_stg_hubspot__engagement_meeting_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_meeting"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_meeting_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7230332, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_meeting"}, "test.hubspot_source.unique_stg_hubspot__engagement_meeting_engagement_id.70721fb830": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_meeting')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_meeting"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_meeting_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_meeting_engagement_id.70721fb830", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_meeting_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_meeting_engagement_id", "alias": "unique_stg_hubspot__engagement_meeting_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_meeting"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_meeting_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.724729, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_meeting`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_meeting"}, "test.hubspot_source.not_null_stg_hubspot__engagement_note_engagement_id.244059891e": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_note')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_note"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_note_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_note_engagement_id.244059891e", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_note_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_note_engagement_id", "alias": "not_null_stg_hubspot__engagement_note_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_note"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_note_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7264252, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_note"}, "test.hubspot_source.unique_stg_hubspot__engagement_note_engagement_id.e2eaf5256e": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_note')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_note"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_note_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_note_engagement_id.e2eaf5256e", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_note_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_note_engagement_id", "alias": "unique_stg_hubspot__engagement_note_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_note"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_note_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.728328, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_note`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_note"}, "test.hubspot_source.not_null_stg_hubspot__engagement_task_engagement_id.0bbd752d82": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_task')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_task"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_task_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_task_engagement_id.0bbd752d82", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_task_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_task_engagement_id", "alias": "not_null_stg_hubspot__engagement_task_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_task"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_task_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7300181, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_task"}, "test.hubspot_source.unique_stg_hubspot__engagement_task_engagement_id.0f578bc80c": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement_task')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement_task"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_task_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_task_engagement_id.0f578bc80c", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_task_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_task_engagement_id", "alias": "unique_stg_hubspot__engagement_task_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement_task"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_task_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.73172, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_task`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement_task"}, "test.hubspot_source.not_null_stg_hubspot__engagement_engagement_id.b26f4d328f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__engagement_engagement_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__engagement_engagement_id.b26f4d328f", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__engagement_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "not_null_stg_hubspot__engagement_engagement_id", "alias": "not_null_stg_hubspot__engagement_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/not_null_stg_hubspot__engagement_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.7334201, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement"}, "test.hubspot_source.unique_stg_hubspot__engagement_engagement_id.4f054187b0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('stg_hubspot__engagement')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__engagement"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__engagement_engagement_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__engagement_engagement_id.4f054187b0", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__engagement_engagement_id.sql", "original_file_path": "models/stg_hubspot__engagement.yml", "name": "unique_stg_hubspot__engagement_engagement_id", "alias": "unique_stg_hubspot__engagement_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__engagement"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__engagement.yml/unique_stg_hubspot__engagement_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.735303, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.stg_hubspot__engagement"}, "test.hubspot_source.unique_stg_hubspot__ticket_ticket_id.78c6fbfcaf": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_hubspot__ticket')) }}"}, "namespace": null}, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__ticket_ticket_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__ticket_ticket_id.78c6fbfcaf", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__ticket_ticket_id.sql", "original_file_path": "models/stg_hubspot__ticket.yml", "name": "unique_stg_hubspot__ticket_ticket_id", "alias": "unique_stg_hubspot__ticket_ticket_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__ticket"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.794432, "column_name": "ticket_id", "file_key_name": "models.stg_hubspot__ticket"}, "test.hubspot_source.not_null_stg_hubspot__ticket_ticket_id.299e7c4c53": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_hubspot__ticket')) }}"}, "namespace": null}, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__ticket_ticket_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__ticket_ticket_id.299e7c4c53", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__ticket_ticket_id.sql", "original_file_path": "models/stg_hubspot__ticket.yml", "name": "not_null_stg_hubspot__ticket_ticket_id", "alias": "not_null_stg_hubspot__ticket_ticket_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__ticket"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.796931, "column_name": "ticket_id", "file_key_name": "models.stg_hubspot__ticket"}, "test.hubspot_source.unique_stg_hubspot__company_company_id.394a2a4ba0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "company_id", "model": "{{ get_where_subquery(ref('stg_hubspot__company')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__company"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "unique_stg_hubspot__company_company_id"], "unique_id": "test.hubspot_source.unique_stg_hubspot__company_company_id.394a2a4ba0", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "unique_stg_hubspot__company_company_id.sql", "original_file_path": "models/stg_hubspot__company.yml", "name": "unique_stg_hubspot__company_company_id", "alias": "unique_stg_hubspot__company_company_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__company"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__company.yml/unique_stg_hubspot__company_company_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.96684, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select company_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company`\n  where company_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "company_id", "file_key_name": "models.stg_hubspot__company"}, "test.hubspot_source.not_null_stg_hubspot__company_company_id.0d0a080d43": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "company_id", "model": "{{ get_where_subquery(ref('stg_hubspot__company')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot_source.stg_hubspot__company"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot_source", "not_null_stg_hubspot__company_company_id"], "unique_id": "test.hubspot_source.not_null_stg_hubspot__company_company_id.0d0a080d43", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "not_null_stg_hubspot__company_company_id.sql", "original_file_path": "models/stg_hubspot__company.yml", "name": "not_null_stg_hubspot__company_company_id", "alias": "not_null_stg_hubspot__company_company_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_hubspot__company"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot_source/models/stg_hubspot__company.yml/not_null_stg_hubspot__company_company_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.968551, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__company`\nwhere company_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "company_id", "file_key_name": "models.stg_hubspot__company"}, "test.hubspot.not_null_hubspot__deals_deal_id.bdbfe47fcd": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "deal_id", "model": "{{ get_where_subquery(ref('hubspot__deals')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "not_null_hubspot__deals_deal_id"], "unique_id": "test.hubspot.not_null_hubspot__deals_deal_id.bdbfe47fcd", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__deals_deal_id.sql", "original_file_path": "models/sales/sales.yml", "name": "not_null_hubspot__deals_deal_id", "alias": "not_null_hubspot__deals_deal_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/not_null_hubspot__deals_deal_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.9922051, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deals`\nwhere deal_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_id", "file_key_name": "models.hubspot__deals"}, "test.hubspot.unique_hubspot__deals_deal_id.d728fe5f71": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "deal_id", "model": "{{ get_where_subquery(ref('hubspot__deals')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "unique_hubspot__deals_deal_id"], "unique_id": "test.hubspot.unique_hubspot__deals_deal_id.d728fe5f71", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__deals_deal_id.sql", "original_file_path": "models/sales/sales.yml", "name": "unique_hubspot__deals_deal_id", "alias": "unique_hubspot__deals_deal_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/unique_hubspot__deals_deal_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.993751, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select deal_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deals`\n  where deal_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_id", "file_key_name": "models.hubspot__deals"}, "test.hubspot.not_null_hubspot__deal_stages_deal_stage_id.162d2d204b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "deal_stage_id", "model": "{{ get_where_subquery(ref('hubspot__deal_stages')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deal_stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "not_null_hubspot__deal_stages_deal_stage_id"], "unique_id": "test.hubspot.not_null_hubspot__deal_stages_deal_stage_id.162d2d204b", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__deal_stages_deal_stage_id.sql", "original_file_path": "models/sales/sales.yml", "name": "not_null_hubspot__deal_stages_deal_stage_id", "alias": "not_null_hubspot__deal_stages_deal_stage_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deal_stages"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/not_null_hubspot__deal_stages_deal_stage_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.995432, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_stages`\nwhere deal_stage_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_stage_id", "file_key_name": "models.hubspot__deal_stages"}, "test.hubspot.unique_hubspot__deal_stages_deal_stage_id.7fd3732373": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "deal_stage_id", "model": "{{ get_where_subquery(ref('hubspot__deal_stages')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deal_stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "unique_hubspot__deal_stages_deal_stage_id"], "unique_id": "test.hubspot.unique_hubspot__deal_stages_deal_stage_id.7fd3732373", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__deal_stages_deal_stage_id.sql", "original_file_path": "models/sales/sales.yml", "name": "unique_hubspot__deal_stages_deal_stage_id", "alias": "unique_hubspot__deal_stages_deal_stage_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deal_stages"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/unique_hubspot__deal_stages_deal_stage_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.99696, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select deal_stage_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_stages`\n  where deal_stage_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "deal_stage_id", "file_key_name": "models.hubspot__deal_stages"}, "test.hubspot.unique_hubspot__companies_company_id.a58ceac3f2": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "company_id", "model": "{{ get_where_subquery(ref('hubspot__companies')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__companies"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "unique_hubspot__companies_company_id"], "unique_id": "test.hubspot.unique_hubspot__companies_company_id.a58ceac3f2", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__companies_company_id.sql", "original_file_path": "models/sales/sales.yml", "name": "unique_hubspot__companies_company_id", "alias": "unique_hubspot__companies_company_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__companies"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/unique_hubspot__companies_company_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143062.998519, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select company_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__companies`\n  where company_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "company_id", "file_key_name": "models.hubspot__companies"}, "test.hubspot.not_null_hubspot__companies_company_id.687ec98e97": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "company_id", "model": "{{ get_where_subquery(ref('hubspot__companies')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__companies"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "not_null_hubspot__companies_company_id"], "unique_id": "test.hubspot.not_null_hubspot__companies_company_id.687ec98e97", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__companies_company_id.sql", "original_file_path": "models/sales/sales.yml", "name": "not_null_hubspot__companies_company_id", "alias": "not_null_hubspot__companies_company_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__companies"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/not_null_hubspot__companies_company_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.000278, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__companies`\nwhere company_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "company_id", "file_key_name": "models.hubspot__companies"}, "test.hubspot.not_null_hubspot__engagements_engagement_id.59b32bc0d7": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagements')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "not_null_hubspot__engagements_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagements_engagement_id.59b32bc0d7", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagements_engagement_id.sql", "original_file_path": "models/sales/sales.yml", "name": "not_null_hubspot__engagements_engagement_id", "alias": "not_null_hubspot__engagements_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagements"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/not_null_hubspot__engagements_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.001858, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagements"}, "test.hubspot.unique_hubspot__engagements_engagement_id.01d5c3ee5d": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagements')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "unique_hubspot__engagements_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagements_engagement_id.01d5c3ee5d", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagements_engagement_id.sql", "original_file_path": "models/sales/sales.yml", "name": "unique_hubspot__engagements_engagement_id", "alias": "unique_hubspot__engagements_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagements"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/sales.yml/unique_hubspot__engagements_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.003406, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagements"}, "test.hubspot.unique_hubspot__company_history_id.f1af964b1f": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__company_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__company_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "unique_hubspot__company_history_id"], "unique_id": "test.hubspot.unique_hubspot__company_history_id.f1af964b1f", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__company_history_id.sql", "original_file_path": "models/sales/history/history.yml", "name": "unique_hubspot__company_history_id", "alias": "unique_hubspot__company_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__company_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/unique_hubspot__company_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.011324, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__company_history`\n  where id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__company_history"}, "test.hubspot.not_null_hubspot__company_history_id.33035793ff": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__company_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__company_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "not_null_hubspot__company_history_id"], "unique_id": "test.hubspot.not_null_hubspot__company_history_id.33035793ff", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__company_history_id.sql", "original_file_path": "models/sales/history/history.yml", "name": "not_null_hubspot__company_history_id", "alias": "not_null_hubspot__company_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__company_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/not_null_hubspot__company_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.012995, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__company_history`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__company_history"}, "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to.654ef778b1": {"raw_sql": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["company_id", "field_name", "valid_to"], "model": "{{ get_where_subquery(ref('hubspot__company_history')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__company_history"]}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to"], "unique_id": "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to.654ef778b1", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3.sql", "original_file_path": "models/sales/history/history.yml", "name": "dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to", "alias": "dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__company_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_585970f793ee6c11d8a52b8643ed55e3"}, "created_at": 1655143063.014583, "compiled_sql": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        company_id, field_name, valid_to\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__company_history`\n    group by company_id, field_name, valid_to\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.hubspot__company_history"}, "test.hubspot.unique_hubspot__deal_history_id.1cb93fca79": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__deal_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deal_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "unique_hubspot__deal_history_id"], "unique_id": "test.hubspot.unique_hubspot__deal_history_id.1cb93fca79", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__deal_history_id.sql", "original_file_path": "models/sales/history/history.yml", "name": "unique_hubspot__deal_history_id", "alias": "unique_hubspot__deal_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deal_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/unique_hubspot__deal_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.030715, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_history`\n  where id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__deal_history"}, "test.hubspot.not_null_hubspot__deal_history_id.a1c6cd6a75": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__deal_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deal_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "not_null_hubspot__deal_history_id"], "unique_id": "test.hubspot.not_null_hubspot__deal_history_id.a1c6cd6a75", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__deal_history_id.sql", "original_file_path": "models/sales/history/history.yml", "name": "not_null_hubspot__deal_history_id", "alias": "not_null_hubspot__deal_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deal_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/not_null_hubspot__deal_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.0339231, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_history`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__deal_history"}, "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to.f55c724804": {"raw_sql": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["deal_id", "field_name", "valid_to"], "model": "{{ get_where_subquery(ref('hubspot__deal_history')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__deal_history"]}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "history", "dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to"], "unique_id": "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to.f55c724804", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec.sql", "original_file_path": "models/sales/history/history.yml", "name": "dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to", "alias": "dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__deal_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/history/history.yml/dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_7e0520757371651bf254cedb30cf9fec"}, "created_at": 1655143063.0359402, "compiled_sql": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        deal_id, field_name, valid_to\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__deal_history`\n    group by deal_id, field_name, valid_to\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.hubspot__deal_history"}, "test.hubspot.not_null_hubspot__engagement_calls_engagement_id.00f8d8357f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_calls')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_calls"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "not_null_hubspot__engagement_calls_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagement_calls_engagement_id.00f8d8357f", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagement_calls_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "not_null_hubspot__engagement_calls_engagement_id", "alias": "not_null_hubspot__engagement_calls_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_calls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/not_null_hubspot__engagement_calls_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.0712562, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_calls`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_calls"}, "test.hubspot.unique_hubspot__engagement_calls_engagement_id.972572ce6c": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_calls')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_calls"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "unique_hubspot__engagement_calls_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagement_calls_engagement_id.972572ce6c", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagement_calls_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "unique_hubspot__engagement_calls_engagement_id", "alias": "unique_hubspot__engagement_calls_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_calls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/unique_hubspot__engagement_calls_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.0731258, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_calls`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_calls"}, "test.hubspot.not_null_hubspot__engagement_emails_engagement_id.13a39d1e09": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_emails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_emails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "not_null_hubspot__engagement_emails_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagement_emails_engagement_id.13a39d1e09", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagement_emails_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "not_null_hubspot__engagement_emails_engagement_id", "alias": "not_null_hubspot__engagement_emails_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_emails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/not_null_hubspot__engagement_emails_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.074794, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_emails`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_emails"}, "test.hubspot.unique_hubspot__engagement_emails_engagement_id.b18e2acbde": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_emails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_emails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "unique_hubspot__engagement_emails_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagement_emails_engagement_id.b18e2acbde", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagement_emails_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "unique_hubspot__engagement_emails_engagement_id", "alias": "unique_hubspot__engagement_emails_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_emails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/unique_hubspot__engagement_emails_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.076921, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_emails`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_emails"}, "test.hubspot.not_null_hubspot__engagement_meetings_engagement_id.83a791c3df": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_meetings')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_meetings"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "not_null_hubspot__engagement_meetings_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagement_meetings_engagement_id.83a791c3df", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagement_meetings_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "not_null_hubspot__engagement_meetings_engagement_id", "alias": "not_null_hubspot__engagement_meetings_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_meetings"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/not_null_hubspot__engagement_meetings_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.0785458, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_meetings`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_meetings"}, "test.hubspot.unique_hubspot__engagement_meetings_engagement_id.3098aabcd1": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_meetings')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_meetings"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "unique_hubspot__engagement_meetings_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagement_meetings_engagement_id.3098aabcd1", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagement_meetings_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "unique_hubspot__engagement_meetings_engagement_id", "alias": "unique_hubspot__engagement_meetings_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_meetings"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/unique_hubspot__engagement_meetings_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.080348, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_meetings`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_meetings"}, "test.hubspot.not_null_hubspot__engagement_notes_engagement_id.76434ac965": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_notes')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_notes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "not_null_hubspot__engagement_notes_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagement_notes_engagement_id.76434ac965", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagement_notes_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "not_null_hubspot__engagement_notes_engagement_id", "alias": "not_null_hubspot__engagement_notes_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_notes"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/not_null_hubspot__engagement_notes_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.0825799, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_notes`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_notes"}, "test.hubspot.unique_hubspot__engagement_notes_engagement_id.c9864b5001": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_notes')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_notes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "unique_hubspot__engagement_notes_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagement_notes_engagement_id.c9864b5001", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagement_notes_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "unique_hubspot__engagement_notes_engagement_id", "alias": "unique_hubspot__engagement_notes_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_notes"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/unique_hubspot__engagement_notes_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.084197, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_notes`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_notes"}, "test.hubspot.not_null_hubspot__engagement_tasks_engagement_id.67738794ae": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_tasks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_tasks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "not_null_hubspot__engagement_tasks_engagement_id"], "unique_id": "test.hubspot.not_null_hubspot__engagement_tasks_engagement_id.67738794ae", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__engagement_tasks_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "not_null_hubspot__engagement_tasks_engagement_id", "alias": "not_null_hubspot__engagement_tasks_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_tasks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/not_null_hubspot__engagement_tasks_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.086668, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_tasks`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_tasks"}, "test.hubspot.unique_hubspot__engagement_tasks_engagement_id.754d36b939": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('hubspot__engagement_tasks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__engagement_tasks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "sales", "engagement_events", "unique_hubspot__engagement_tasks_engagement_id"], "unique_id": "test.hubspot.unique_hubspot__engagement_tasks_engagement_id.754d36b939", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__engagement_tasks_engagement_id.sql", "original_file_path": "models/sales/engagement_events/engagement_events.yml", "name": "unique_hubspot__engagement_tasks_engagement_id", "alias": "unique_hubspot__engagement_tasks_engagement_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__engagement_tasks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/sales/engagement_events/engagement_events.yml/unique_hubspot__engagement_tasks_engagement_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.088504, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select engagement_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagement_tasks`\n  where engagement_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "engagement_id", "file_key_name": "models.hubspot__engagement_tasks"}, "test.hubspot.unique_hubspot__email_sends_event_id.b01306228f": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_sends')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_sends"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "unique_hubspot__email_sends_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_sends_event_id.b01306228f", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_sends_event_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "unique_hubspot__email_sends_event_id", "alias": "unique_hubspot__email_sends_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_sends"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/unique_hubspot__email_sends_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.134599, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_sends"}, "test.hubspot.not_null_hubspot__email_sends_event_id.9fc8a8bef3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_sends')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_sends"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "not_null_hubspot__email_sends_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_sends_event_id.9fc8a8bef3", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_sends_event_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "not_null_hubspot__email_sends_event_id", "alias": "not_null_hubspot__email_sends_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_sends"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/not_null_hubspot__email_sends_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.136378, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_sends`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_sends"}, "test.hubspot.unique_hubspot__email_campaigns_email_campaign_id.2470fabe62": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "email_campaign_id", "model": "{{ get_where_subquery(ref('hubspot__email_campaigns')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_campaigns"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "unique_hubspot__email_campaigns_email_campaign_id"], "unique_id": "test.hubspot.unique_hubspot__email_campaigns_email_campaign_id.2470fabe62", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_campaigns_email_campaign_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "unique_hubspot__email_campaigns_email_campaign_id", "alias": "unique_hubspot__email_campaigns_email_campaign_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_campaigns"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/unique_hubspot__email_campaigns_email_campaign_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.1380339, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select email_campaign_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_campaigns`\n  where email_campaign_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_campaign_id", "file_key_name": "models.hubspot__email_campaigns"}, "test.hubspot.not_null_hubspot__email_campaigns_email_campaign_id.6b2d6f43c0": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "email_campaign_id", "model": "{{ get_where_subquery(ref('hubspot__email_campaigns')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_campaigns"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "not_null_hubspot__email_campaigns_email_campaign_id"], "unique_id": "test.hubspot.not_null_hubspot__email_campaigns_email_campaign_id.6b2d6f43c0", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_campaigns_email_campaign_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "not_null_hubspot__email_campaigns_email_campaign_id", "alias": "not_null_hubspot__email_campaigns_email_campaign_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_campaigns"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/not_null_hubspot__email_campaigns_email_campaign_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.139808, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_campaigns`\nwhere email_campaign_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_campaign_id", "file_key_name": "models.hubspot__email_campaigns"}, "test.hubspot.unique_hubspot__contacts_contact_id.8f627121df": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('hubspot__contacts')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contacts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "unique_hubspot__contacts_contact_id"], "unique_id": "test.hubspot.unique_hubspot__contacts_contact_id.8f627121df", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__contacts_contact_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "unique_hubspot__contacts_contact_id", "alias": "unique_hubspot__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/unique_hubspot__contacts_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.141738, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select contact_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contacts`\n  where contact_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.hubspot__contacts"}, "test.hubspot.not_null_hubspot__contacts_contact_id.e28e88dce3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('hubspot__contacts')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contacts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "not_null_hubspot__contacts_contact_id"], "unique_id": "test.hubspot.not_null_hubspot__contacts_contact_id.e28e88dce3", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__contacts_contact_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "not_null_hubspot__contacts_contact_id", "alias": "not_null_hubspot__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/not_null_hubspot__contacts_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.143339, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contacts`\nwhere contact_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.hubspot__contacts"}, "test.hubspot.unique_hubspot__contact_lists_contact_list_id.ea9ef03bac": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('hubspot__contact_lists')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contact_lists"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "unique_hubspot__contact_lists_contact_list_id"], "unique_id": "test.hubspot.unique_hubspot__contact_lists_contact_list_id.ea9ef03bac", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__contact_lists_contact_list_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "unique_hubspot__contact_lists_contact_list_id", "alias": "unique_hubspot__contact_lists_contact_list_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contact_lists"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/unique_hubspot__contact_lists_contact_list_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.144949, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select contact_list_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_lists`\n  where contact_list_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.hubspot__contact_lists"}, "test.hubspot.not_null_hubspot__contact_lists_contact_list_id.3bde1bb891": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('hubspot__contact_lists')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contact_lists"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "not_null_hubspot__contact_lists_contact_list_id"], "unique_id": "test.hubspot.not_null_hubspot__contact_lists_contact_list_id.3bde1bb891", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__contact_lists_contact_list_id.sql", "original_file_path": "models/marketing/marketing.yml", "name": "not_null_hubspot__contact_lists_contact_list_id", "alias": "not_null_hubspot__contact_lists_contact_list_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contact_lists"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/marketing.yml/not_null_hubspot__contact_lists_contact_list_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.1469922, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_lists`\nwhere contact_list_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.hubspot__contact_lists"}, "test.hubspot.unique_hubspot__email_event_bounce_event_id.7a1c6704e1": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_bounce')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_bounce"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_bounce_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_bounce_event_id.7a1c6704e1", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_bounce_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_bounce_event_id", "alias": "unique_hubspot__email_event_bounce_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_bounce"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_bounce_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.19577, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_bounce`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_bounce"}, "test.hubspot.not_null_hubspot__email_event_bounce_event_id.39d8daa6f5": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_bounce')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_bounce"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_bounce_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_bounce_event_id.39d8daa6f5", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_bounce_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_bounce_event_id", "alias": "not_null_hubspot__email_event_bounce_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_bounce"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_bounce_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.1976151, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_bounce`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_bounce"}, "test.hubspot.unique_hubspot__email_event_clicks_event_id.60d3912846": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_clicks_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_clicks_event_id.60d3912846", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_clicks_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_clicks_event_id", "alias": "unique_hubspot__email_event_clicks_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_clicks_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.1992571, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_clicks`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_clicks"}, "test.hubspot.not_null_hubspot__email_event_clicks_event_id.f603501ca0": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_clicks_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_clicks_event_id.f603501ca0", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_clicks_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_clicks_event_id", "alias": "not_null_hubspot__email_event_clicks_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_clicks_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.200845, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_clicks`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_clicks"}, "test.hubspot.unique_hubspot__email_event_deferred_event_id.bb75dcb83a": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_deferred')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_deferred"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_deferred_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_deferred_event_id.bb75dcb83a", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_deferred_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_deferred_event_id", "alias": "unique_hubspot__email_event_deferred_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_deferred"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_deferred_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.202446, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_deferred`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_deferred"}, "test.hubspot.not_null_hubspot__email_event_deferred_event_id.2c6decaa91": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_deferred')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_deferred"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_deferred_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_deferred_event_id.2c6decaa91", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_deferred_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_deferred_event_id", "alias": "not_null_hubspot__email_event_deferred_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_deferred"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_deferred_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.2042181, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_deferred`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_deferred"}, "test.hubspot.unique_hubspot__email_event_delivered_event_id.242e838cce": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_delivered')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_delivered"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_delivered_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_delivered_event_id.242e838cce", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_delivered_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_delivered_event_id", "alias": "unique_hubspot__email_event_delivered_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_delivered"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_delivered_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.2059011, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_delivered`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_delivered"}, "test.hubspot.not_null_hubspot__email_event_delivered_event_id.0609870be3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_delivered')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_delivered"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_delivered_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_delivered_event_id.0609870be3", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_delivered_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_delivered_event_id", "alias": "not_null_hubspot__email_event_delivered_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_delivered"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_delivered_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.207496, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_delivered`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_delivered"}, "test.hubspot.unique_hubspot__email_event_dropped_event_id.093040860b": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_dropped')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_dropped"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_dropped_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_dropped_event_id.093040860b", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_dropped_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_dropped_event_id", "alias": "unique_hubspot__email_event_dropped_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_dropped"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_dropped_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.209294, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_dropped`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_dropped"}, "test.hubspot.not_null_hubspot__email_event_dropped_event_id.5cfe4eeb95": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_dropped')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_dropped"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_dropped_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_dropped_event_id.5cfe4eeb95", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_dropped_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_dropped_event_id", "alias": "not_null_hubspot__email_event_dropped_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_dropped"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_dropped_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.210876, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_dropped`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_dropped"}, "test.hubspot.unique_hubspot__email_event_forward_event_id.064956aaa7": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_forward')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_forward"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_forward_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_forward_event_id.064956aaa7", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_forward_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_forward_event_id", "alias": "unique_hubspot__email_event_forward_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_forward"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_forward_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.21259, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_forward`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_forward"}, "test.hubspot.not_null_hubspot__email_event_forward_event_id.417a73da08": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_forward')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_forward"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_forward_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_forward_event_id.417a73da08", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_forward_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_forward_event_id", "alias": "not_null_hubspot__email_event_forward_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_forward"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_forward_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.214169, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_forward`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_forward"}, "test.hubspot.unique_hubspot__email_event_opens_event_id.d7963f4eb0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_opens')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_opens"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_opens_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_opens_event_id.d7963f4eb0", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_opens_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_opens_event_id", "alias": "unique_hubspot__email_event_opens_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_opens"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_opens_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.2159302, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_opens`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_opens"}, "test.hubspot.not_null_hubspot__email_event_opens_event_id.a9fe279ee1": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_opens')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_opens"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_opens_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_opens_event_id.a9fe279ee1", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_opens_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_opens_event_id", "alias": "not_null_hubspot__email_event_opens_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_opens"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_opens_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.21751, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_opens`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_opens"}, "test.hubspot.unique_hubspot__email_event_print_event_id.548f6cece7": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_print')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_print"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_print_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_print_event_id.548f6cece7", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_print_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_print_event_id", "alias": "unique_hubspot__email_event_print_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_print"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_print_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.219098, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_print`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_print"}, "test.hubspot.not_null_hubspot__email_event_print_event_id.9dac8a147e": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_print')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_print"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_print_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_print_event_id.9dac8a147e", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_print_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_print_event_id", "alias": "not_null_hubspot__email_event_print_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_print"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_print_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.2208698, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_print`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_print"}, "test.hubspot.unique_hubspot__email_event_sent_event_id.68076270f8": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_sent')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_sent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_sent_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_sent_event_id.68076270f8", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_sent_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_sent_event_id", "alias": "unique_hubspot__email_event_sent_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_sent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_sent_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.222452, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_sent`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_sent"}, "test.hubspot.not_null_hubspot__email_event_sent_event_id.5507dcc5b9": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_sent')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_sent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_sent_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_sent_event_id.5507dcc5b9", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_sent_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_sent_event_id", "alias": "not_null_hubspot__email_event_sent_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_sent"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_sent_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.224036, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_sent`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_sent"}, "test.hubspot.unique_hubspot__email_event_spam_report_event_id.20aab81ec6": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_spam_report')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_spam_report"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_spam_report_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_spam_report_event_id.20aab81ec6", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_spam_report_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_spam_report_event_id", "alias": "unique_hubspot__email_event_spam_report_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_spam_report"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_spam_report_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.225617, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_spam_report`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_spam_report"}, "test.hubspot.not_null_hubspot__email_event_spam_report_event_id.5ddca8771a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_spam_report')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_spam_report"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_spam_report_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_spam_report_event_id.5ddca8771a", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_spam_report_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_spam_report_event_id", "alias": "not_null_hubspot__email_event_spam_report_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_spam_report"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_spam_report_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.227377, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_spam_report`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_spam_report"}, "test.hubspot.unique_hubspot__email_event_status_change_event_id.2e5b2b72e2": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "unique_hubspot__email_event_status_change_event_id"], "unique_id": "test.hubspot.unique_hubspot__email_event_status_change_event_id.2e5b2b72e2", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__email_event_status_change_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "unique_hubspot__email_event_status_change_event_id", "alias": "unique_hubspot__email_event_status_change_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/unique_hubspot__email_event_status_change_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.228959, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select event_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n  where event_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_status_change"}, "test.hubspot.not_null_hubspot__email_event_status_change_event_id.a1737e44b3": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('hubspot__email_event_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__email_event_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "email_events", "not_null_hubspot__email_event_status_change_event_id"], "unique_id": "test.hubspot.not_null_hubspot__email_event_status_change_event_id.a1737e44b3", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__email_event_status_change_event_id.sql", "original_file_path": "models/marketing/email_events/email_events.yml", "name": "not_null_hubspot__email_event_status_change_event_id", "alias": "not_null_hubspot__email_event_status_change_event_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__email_event_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/email_events/email_events.yml/not_null_hubspot__email_event_status_change_event_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.23054, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "event_id", "file_key_name": "models.hubspot__email_event_status_change"}, "test.hubspot.unique_hubspot__contact_history_id.aef69ae1ec": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__contact_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contact_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "history", "unique_hubspot__contact_history_id"], "unique_id": "test.hubspot.unique_hubspot__contact_history_id.aef69ae1ec", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_hubspot__contact_history_id.sql", "original_file_path": "models/marketing/history/history.yml", "name": "unique_hubspot__contact_history_id", "alias": "unique_hubspot__contact_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contact_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/history/history.yml/unique_hubspot__contact_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.2364218, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_history`\n  where id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__contact_history"}, "test.hubspot.not_null_hubspot__contact_history_id.eaae22e088": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('hubspot__contact_history')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contact_history"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "history", "not_null_hubspot__contact_history_id"], "unique_id": "test.hubspot.not_null_hubspot__contact_history_id.eaae22e088", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_hubspot__contact_history_id.sql", "original_file_path": "models/marketing/history/history.yml", "name": "not_null_hubspot__contact_history_id", "alias": "not_null_hubspot__contact_history_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contact_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/history/history.yml/not_null_hubspot__contact_history_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.238226, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_history`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.hubspot__contact_history"}, "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to.42ccfb8329": {"raw_sql": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["contact_id", "field_name", "valid_to"], "model": "{{ get_where_subquery(ref('hubspot__contact_history')) }}"}, "namespace": "dbt_utils"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.hubspot__contact_history"]}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "history", "dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to"], "unique_id": "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to.42ccfb8329", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61.sql", "original_file_path": "models/marketing/history/history.yml", "name": "dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to", "alias": "dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["hubspot__contact_history"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/history/history.yml/dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_4bdcc02b7c0675314311d172bbf6ae61"}, "created_at": 1655143063.2398348, "compiled_sql": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        contact_id, field_name, valid_to\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__contact_history`\n    group by contact_id, field_name, valid_to\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.hubspot__contact_history"}, "test.hubspot.unique_int_hubspot__email_aggregate_status_change_email_send_id.7c03e87c05": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "email_send_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_aggregate_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_aggregate_status_change"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "unique_int_hubspot__email_aggregate_status_change_email_send_id"], "unique_id": "test.hubspot.unique_int_hubspot__email_aggregate_status_change_email_send_id.7c03e87c05", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_int_hubspot__email_aggregate_status_change_email_send_id.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "unique_int_hubspot__email_aggregate_status_change_email_send_id", "alias": "unique_int_hubspot__email_aggregate_status_change_email_send_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_aggregate_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/unique_int_hubspot__email_aggregate_status_change_email_send_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.248441, "compiled_sql": "\n    \n    \n\nwith  __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n),dbt_test__target as (\n  \n  select email_send_id as unique_field\n  from __dbt__cte__int_hubspot__email_aggregate_status_change\n  where email_send_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__email_aggregate_status_change", "sql": " __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n)"}], "relation_name": null, "column_name": "email_send_id", "file_key_name": "models.int_hubspot__email_aggregate_status_change"}, "test.hubspot.not_null_int_hubspot__email_aggregate_status_change_email_send_id.16bf74a3bc": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189\") }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "email_send_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_aggregate_status_change')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_aggregate_status_change"]}, "config": {"enabled": true, "alias": "not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "not_null_int_hubspot__email_aggregate_status_change_email_send_id"], "unique_id": "test.hubspot.not_null_int_hubspot__email_aggregate_status_change_email_send_id.16bf74a3bc", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "not_null_int_hubspot__email_aggregate_status_change_email_send_id", "alias": "not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_aggregate_status_change"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_hubspot__email_ag_072a8e51e30dd12183bb92703b55e189"}, "created_at": 1655143063.25025, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n)select *\nfrom __dbt__cte__int_hubspot__email_aggregate_status_change\nwhere email_send_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__email_aggregate_status_change", "sql": " __dbt__cte__int_hubspot__email_aggregate_status_change as (\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__email_event_status_change`\n\n), aggregates as (\n\n    select\n        email_campaign_id,\n        email_send_id,\n        count(case when subscription_status = 'UNSUBSCRIBED' then 1 end) as unsubscribes\n    from base\n    where email_send_id is not null\n    group by 1,2\n\n)\n\nselect *\nfrom aggregates\n)"}], "relation_name": null, "column_name": "email_send_id", "file_key_name": "models.int_hubspot__email_aggregate_status_change"}, "test.hubspot.unique_int_hubspot__email_metrics__by_contact_list_contact_list_id.095d72d5b8": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2\") }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_metrics__by_contact_list')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_metrics__by_contact_list"]}, "config": {"enabled": true, "alias": "unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "unique_int_hubspot__email_metrics__by_contact_list_contact_list_id"], "unique_id": "test.hubspot.unique_int_hubspot__email_metrics__by_contact_list_contact_list_id.095d72d5b8", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "unique_int_hubspot__email_metrics__by_contact_list_contact_list_id", "alias": "unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_metrics__by_contact_list"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_int_hubspot__email_metr_ee44515cad61aa59cf03c59614b376f2"}, "created_at": 1655143063.2519739, "compiled_sql": "\n    \n    \n\nwith dbt_test__target as (\n  \n  select contact_list_id as unique_field\n  from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`int_hubspot__email_metrics__by_contact_list`\n  where contact_list_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.int_hubspot__email_metrics__by_contact_list"}, "test.hubspot.not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id.1d3cf4caf2": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33\") }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_list_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_metrics__by_contact_list')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_metrics__by_contact_list"]}, "config": {"enabled": true, "alias": "not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id"], "unique_id": "test.hubspot.not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id.1d3cf4caf2", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id", "alias": "not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_metrics__by_contact_list"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_int_hubspot__email_me_a72a3c877d9529cf35305d2d29199a33"}, "created_at": 1655143063.253706, "compiled_sql": "\n    \n    \n\nselect *\nfrom `dbt-package-testing`.`hubspot_integration_test_hubspot`.`int_hubspot__email_metrics__by_contact_list`\nwhere contact_list_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "contact_list_id", "file_key_name": "models.int_hubspot__email_metrics__by_contact_list"}, "test.hubspot.unique_int_hubspot__email_event_aggregates_email_send_id.4deec238f9": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "email_send_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_event_aggregates')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_event_aggregates"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "unique_int_hubspot__email_event_aggregates_email_send_id"], "unique_id": "test.hubspot.unique_int_hubspot__email_event_aggregates_email_send_id.4deec238f9", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_int_hubspot__email_event_aggregates_email_send_id.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "unique_int_hubspot__email_event_aggregates_email_send_id", "alias": "unique_int_hubspot__email_event_aggregates_email_send_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_event_aggregates"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/unique_int_hubspot__email_event_aggregates_email_send_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.255628, "compiled_sql": "\n    \n    \n\nwith  __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n),dbt_test__target as (\n  \n  select email_send_id as unique_field\n  from __dbt__cte__int_hubspot__email_event_aggregates\n  where email_send_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__email_event_aggregates", "sql": " __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n)"}], "relation_name": null, "column_name": "email_send_id", "file_key_name": "models.int_hubspot__email_event_aggregates"}, "test.hubspot.not_null_int_hubspot__email_event_aggregates_email_send_id.ac29e6997a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "email_send_id", "model": "{{ get_where_subquery(ref('int_hubspot__email_event_aggregates')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__email_event_aggregates"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "not_null_int_hubspot__email_event_aggregates_email_send_id"], "unique_id": "test.hubspot.not_null_int_hubspot__email_event_aggregates_email_send_id.ac29e6997a", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_int_hubspot__email_event_aggregates_email_send_id.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "not_null_int_hubspot__email_event_aggregates_email_send_id", "alias": "not_null_int_hubspot__email_event_aggregates_email_send_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__email_event_aggregates"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/not_null_int_hubspot__email_event_aggregates_email_send_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.257222, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n)select *\nfrom __dbt__cte__int_hubspot__email_event_aggregates\nwhere email_send_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__email_event_aggregates", "sql": " __dbt__cte__int_hubspot__email_event_aggregates as (\n\n\nwith events as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__email_event`\n\n), aggregates as (\n\n    select\n        sent_by_event_id as email_send_id,\n        count(case when event_type = 'OPEN' then sent_by_event_id end) as opens,\n        count(case when event_type = 'SENT' then sent_by_event_id end) as sends,\n        count(case when event_type = 'DELIVERED' then sent_by_event_id end) as deliveries,\n        count(case when event_type = 'DROPPED' then sent_by_event_id end) as drops,\n        count(case when event_type = 'CLICK' then sent_by_event_id end) as clicks,\n        count(case when event_type = 'FORWARD' then sent_by_event_id end) as forwards,\n        count(case when event_type = 'DEFERRED' then sent_by_event_id end) as deferrals,\n        count(case when event_type = 'BOUNCE' then sent_by_event_id end) as bounces,\n        count(case when event_type = 'SPAMREPORT' then sent_by_event_id end) as spam_reports,\n        count(case when event_type = 'PRINT' then sent_by_event_id end) as prints\n    from events\n    where sent_by_event_id is not null\n    group by 1\n\n)\n\nselect *\nfrom aggregates\n)"}], "relation_name": null, "column_name": "email_send_id", "file_key_name": "models.int_hubspot__email_event_aggregates"}, "test.hubspot.unique_int_hubspot__engagement_metrics__by_contact_contact_id.1c156b64ed": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('int_hubspot__engagement_metrics__by_contact')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__engagement_metrics__by_contact"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "unique_int_hubspot__engagement_metrics__by_contact_contact_id"], "unique_id": "test.hubspot.unique_int_hubspot__engagement_metrics__by_contact_contact_id.1c156b64ed", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "unique_int_hubspot__engagement_metrics__by_contact_contact_id.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "unique_int_hubspot__engagement_metrics__by_contact_contact_id", "alias": "unique_int_hubspot__engagement_metrics__by_contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__engagement_metrics__by_contact"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/unique_int_hubspot__engagement_metrics__by_contact_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.258822, "compiled_sql": "\n    \n    \n\nwith  __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n),dbt_test__target as (\n  \n  select contact_id as unique_field\n  from __dbt__cte__int_hubspot__engagement_metrics__by_contact\n  where contact_id is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__engagement_metrics__by_contact", "sql": " __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n)"}], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.int_hubspot__engagement_metrics__by_contact"}, "test.hubspot.not_null_int_hubspot__engagement_metrics__by_contact_contact_id.4a800df06b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('int_hubspot__engagement_metrics__by_contact')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.hubspot.int_hubspot__engagement_metrics__by_contact"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_dbt_test__audit", "fqn": ["hubspot", "marketing", "intermediate", "not_null_int_hubspot__engagement_metrics__by_contact_contact_id"], "unique_id": "test.hubspot.not_null_int_hubspot__engagement_metrics__by_contact_contact_id.4a800df06b", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "not_null_int_hubspot__engagement_metrics__by_contact_contact_id.sql", "original_file_path": "models/marketing/intermediate/intermediate.yml", "name": "not_null_int_hubspot__engagement_metrics__by_contact_contact_id", "alias": "not_null_int_hubspot__engagement_metrics__by_contact_contact_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["int_hubspot__engagement_metrics__by_contact"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/hubspot/models/marketing/intermediate/intermediate.yml/not_null_int_hubspot__engagement_metrics__by_contact_contact_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1655143063.260629, "compiled_sql": "\n    \n    \n\nwith __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n)select *\nfrom __dbt__cte__int_hubspot__engagement_metrics__by_contact\nwhere contact_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.hubspot.int_hubspot__engagement_metrics__by_contact", "sql": " __dbt__cte__int_hubspot__engagement_metrics__by_contact as (\n\n\nwith engagements as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_hubspot`.`hubspot__engagements`\n\n), engagement_contacts as (\n\n    select *\n    from `dbt-package-testing`.`hubspot_integration_test_stg_hubspot`.`stg_hubspot__engagement_contact`\n\n), engagement_contacts_joined as (\n\n    select\n        engagements.engagement_type,\n        engagement_contacts.contact_id\n    from engagements\n    inner join engagement_contacts\n        using (engagement_id)\n\n), engagement_contacts_agg as (\n\n    \n\n    select\n        contact_id,\n        count(case when engagement_type = 'NOTE' then contact_id end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then contact_id end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then contact_id end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then contact_id end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then contact_id end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then contact_id end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then contact_id end) as count_engagement_forwarded_emails\n    from engagement_contacts_joined\n    group by 1\n\n\n\n)\n\nselect *\nfrom engagement_contacts_agg\n)"}], "relation_name": null, "column_name": "contact_id", "file_key_name": "models.int_hubspot__engagement_metrics__by_contact"}}, "sources": {"source.hubspot_source.hubspot.calendar_event": {"fqn": ["hubspot_source", "hubspot", "calendar_event"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.calendar_event", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "calendar_event", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "calendar_event", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a calendar event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "avatar_url": {"name": "avatar_url", "description": "URL of image associated with social media event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaign_guid": {"name": "campaign_guid", "description": "Value of campaign GUID associated with Task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "category": {"name": "category", "description": "Type of event. If the event type is PUBLISHING_TASK, it is one of BLOG_POST, EMAIL, LANDING_PAGE, CUSTOM.\nIf event type is SOCIAL, it is one of twitter, facebook, linkedin, googlepluspages.\nIf event type is CONTENT, it is one of email, recurring-email, blog-post, landing-page, legacy-page, site-page.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "For event type of PUBLISHING_TASK, a numeric value corresponding to the type of task; one of 3 (BLOG_POST), 2 (EMAIL), 1 (LANDING_PAGE), 0 (CUSTOM).\nFor event type of SOCIAL, this is 0.\nIf event type is CONTENT, it is one of 2 (email, recurring-email), 3 (blog-post), 1 (landing-page), 5 (legacy-page), 4 (site-page).\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "content_group_id": {"name": "content_group_id", "description": "The ID of the content group (aka blog) that the associated Blog Post belongs to, if any.\nOtherwise null. Only populated for single task GETs and for Blog Post Tasks.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "ID value of the COS content object associated with the event, null for social or if nothing associated.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_by": {"name": "created_by", "description": "HubSpot ID of the user that the event was created by.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "Description of Event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "If task, When the task is set to be due, otherwise when the event is/ was scheduled for; in milliseconds since the epoch.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "event_type": {"name": "event_type", "description": "Type of calendar event; for tasks this is PUBLISHING_TASK, for COS Items, this is CONTENT, for social media events, this is SOCIAL", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The unique ID of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_recurring": {"name": "is_recurring", "description": "Whether the event is recurring.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "Name of Event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "TASK - HubSpot ID of the user that the task is assigned to.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "preview_key": {"name": "preview_key", "description": "Preview key of content object; used for showing previews of unpublished items.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "social_display_name": {"name": "social_display_name", "description": "Social media full name associate with event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "social_username": {"name": "social_username", "description": "Social media user name associated with event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "state": {"name": "state", "description": "For type publishing task, value of TODO or DONE, for others, a value of SCHEDULED, PUBLISHED, PUBLISHED_OR_SCHEDULED.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "topic_ids": {"name": "topic_ids", "description": "The list of IDs of topics associated with the associated Blog Post, if any. Otherwise null. Only populated for single task GETs and for Blog Post Tasks.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "url": {"name": "url", "description": "Public URL of content item.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`calendar_event`", "created_at": 1655143063.261756}, "source.hubspot_source.hubspot.company": {"fqn": ["hubspot_source", "hubspot", "company"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "company", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "company", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a company in Hubspot.", "columns": {"id": {"name": "id", "description": "The ID of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "Whether the record has been deleted in Hubspot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_name": {"name": "property_name", "description": "The name of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_description": {"name": "property_description", "description": "A short statement about the company's mission and goals.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_createdate": {"name": "property_createdate", "description": "The date the company was added to your account.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_industry": {"name": "property_industry", "description": "The type of business the company performs.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_address": {"name": "property_address", "description": "The street address of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_address_2": {"name": "property_address_2", "description": "Additional address information for the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_city": {"name": "property_city", "description": "The city where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_state": {"name": "property_state", "description": "The state where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_country": {"name": "property_country", "description": "The country where the company is located.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_annualrevenue": {"name": "property_annualrevenue", "description": "The actual or estimated annual revenue of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`company`", "created_at": 1655143063.261929}, "source.hubspot_source.hubspot.company_property_history": {"fqn": ["hubspot_source", "hubspot", "company_property_history"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.company_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "company_property_history", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "company_property_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a change to company record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "value": {"name": "value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`company_property_history`", "created_at": 1655143063.2620668}, "source.hubspot_source.hubspot.contact_merge_audit": {"fqn": ["hubspot_source", "hubspot", "contact_merge_audit"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact_merge_audit", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact_merge_audit", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact_merge_audit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record contains a contact merge event and the contacts effected by the merge.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "canonical_vid": {"name": "canonical_vid", "description": "The contact ID of the contact which the vid_to_merge contact was merged into.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "entity_id": {"name": "entity_id", "description": "The ID of the related entity.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "The contact's first name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "The contact's last name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_properties_moved": {"name": "num_properties_moved", "description": "The number of properties which were removed from the merged contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Timestamp of when the contacts were merged.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "The ID of the user.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "vid_to_merge": {"name": "vid_to_merge", "description": "The ID of the contact which was merged.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact_merge_audit`", "created_at": 1655143063.262208}, "source.hubspot_source.hubspot.contact": {"fqn": ["hubspot_source", "hubspot", "contact"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": 84, "period": "hour"}, "error_after": {"count": 168, "period": "hour"}, "filter": null}, "external": null, "description": "Each record represents a contact in Hubspot.", "columns": {"id": {"name": "id", "description": "The ID of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_email": {"name": "property_email", "description": "The contact's email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_company": {"name": "property_company", "description": "The name of the contact's company", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_firstname": {"name": "property_firstname", "description": "The contact's first name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_lastname": {"name": "property_lastname", "description": "The contact's last name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_createdate": {"name": "property_createdate", "description": "The date that the contact was created in your HubSpot account.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_jobtitle": {"name": "property_jobtitle", "description": "The contact's job title.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_annualrevenue": {"name": "property_annualrevenue", "description": "The contact's annual company revenue.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {"is_enabled": "True and True"}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact`", "created_at": 1655143063.262345}, "source.hubspot_source.hubspot.contact_form_submission": {"fqn": ["hubspot_source", "hubspot", "contact_form_submission"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact_form_submission", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact_form_submission", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact_form_submission", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "TBD", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "conversion_id": {"name": "conversion_id", "description": "A Unique ID for the specific form conversion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "form_id": {"name": "form_id", "description": "The GUID of the form that the submission belongs to.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "page_url": {"name": "page_url", "description": "The URL that the form was submitted on, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "A Unix timestamp in milliseconds of the time the submission occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "title": {"name": "title", "description": "The title of the page that the form was submitted on. This will default to the name of the form if no title is provided.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact_form_submission`", "created_at": 1655143063.2624798}, "source.hubspot_source.hubspot.contact_list": {"fqn": ["hubspot_source", "hubspot", "contact_list"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact_list", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact_list", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact_list", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a contact list in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "A timestamp of the time the list was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deleteable": {"name": "deleteable", "description": "If this is false, this is a system list and cannot be deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "dynamic": {"name": "dynamic", "description": "Whether the contact list is dynamic.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_error": {"name": "metadata_error", "description": "Any errors that happened the last time the list was processed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_processing_state_change_at": {"name": "metadata_last_processing_state_change_at", "description": "A timestamp of the last time that the processing state changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_last_size_change_at": {"name": "metadata_last_size_change_at", "description": "A timestamp of the last time that the size of the list changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_processing": {"name": "metadata_processing", "description": "One of DONE, REFRESHING, INITIALIZING, or PROCESSING.\nDONE indicates the list has finished processing, any other value indicates that list membership is being evaluated.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metadata_size": {"name": "metadata_size", "description": "The approximate number of contacts in the list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "A timestamp of the time that the list was last modified.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact_list`", "created_at": 1655143063.262625}, "source.hubspot_source.hubspot.contact_list_member": {"fqn": ["hubspot_source", "hubspot", "contact_list_member"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact_list_member", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact_list_member", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact_list_member", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a contact and a contact list.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "added_at": {"name": "added_at", "description": "The timestamp a contact was added to a list.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_list_id": {"name": "contact_list_id", "description": "The ID of the related contact list.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact_list_member`", "created_at": 1655143063.262754}, "source.hubspot_source.hubspot.contact_property_history": {"fqn": ["hubspot_source", "hubspot", "contact_property_history"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.contact_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "contact_property_history", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "contact_property_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": 84, "period": "hour"}, "error_after": {"count": 168, "period": "hour"}, "filter": null}, "external": null, "description": "Each record represents a change to contact record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "value": {"name": "value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {"is_enabled": "True and True"}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`contact_property_history`", "created_at": 1655143063.2628858}, "source.hubspot_source.hubspot.deal": {"fqn": ["hubspot_source", "hubspot", "deal"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a deal in Hubspot.", "columns": {"id": {"name": "id", "description": "The ID of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "Whether the record was deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_id": {"name": "deal_pipeline_id", "description": "The ID of the deal's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_pipeline_stage_id": {"name": "deal_pipeline_stage_id", "description": "The ID of the deal's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_dealname": {"name": "property_dealname", "description": "The name you have given this deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_description": {"name": "property_description", "description": "A brief description of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_amount": {"name": "property_amount", "description": "The total value of the deal in the deal's currency.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_closedate": {"name": "property_closedate", "description": "The day the deal is expected to close, or was closed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_createdate": {"name": "property_createdate", "description": "The date the deal was created. This property is set automatically by HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal`", "created_at": 1655143063.2630231}, "source.hubspot_source.hubspot.deal_stage": {"fqn": ["hubspot_source", "hubspot", "deal_stage"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_stage", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_stage", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a deal stage.", "columns": {"_fivetran_active": {"name": "_fivetran_active", "description": "Boolean indicating whether the deal stage is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_end": {"name": "_fivetran_end", "description": "The Fivetran calculated exist time of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_start": {"name": "_fivetran_start", "description": "The date the deal stage was entered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_entered": {"name": "date_entered", "description": "The timestamp the deal stage was entered.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "Reference to the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The relevant source of the deal stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "Reference to the source.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "value": {"name": "value", "description": "The value of the deal stage. Typically the name of the stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_stage`", "created_at": 1655143063.263159}, "source.hubspot_source.hubspot.deal_company": {"fqn": ["hubspot_source", "hubspot", "deal_company"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_company", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_company", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a deal and company.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_company`", "created_at": 1655143063.263284}, "source.hubspot_source.hubspot.deal_contact": {"fqn": ["hubspot_source", "hubspot", "deal_contact"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_contact", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_contact", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a deal and a contact.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_contact`", "created_at": 1655143063.2634082}, "source.hubspot_source.hubspot.deal_pipeline": {"fqn": ["hubspot_source", "hubspot", "deal_pipeline"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_pipeline", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_pipeline", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_pipeline", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a pipeline in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Whether the stage is currently in use.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the pipelines appear when viewed in HubSpot", "meta": {}, "data_type": null, "quote": null, "tags": []}, "label": {"name": "label", "description": "The human-readable label for the pipeline. The label is used when showing the pipeline in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_id": {"name": "pipeline_id", "description": "The ID of the pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_pipeline`", "created_at": 1655143063.263534}, "source.hubspot_source.hubspot.deal_pipeline_stage": {"fqn": ["hubspot_source", "hubspot", "deal_pipeline_stage"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_pipeline_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_pipeline_stage", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_pipeline_stage", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a pipeline stage in Hubspot.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Whether the pipeline stage is currently in use.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "closed_won": {"name": "closed_won", "description": "Whether the stage represents a Closed Won deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the stages appear when viewed in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "label": {"name": "label", "description": "The human-readable label for the stage. The label is used when showing the stage in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_id": {"name": "pipeline_id", "description": "The ID of the related pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "probability": {"name": "probability", "description": "The probability that the deal will close. Used for the deal forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stage_id": {"name": "stage_id", "description": "The ID of the pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_pipeline_stage`", "created_at": 1655143063.263663}, "source.hubspot_source.hubspot.deal_property_history": {"fqn": ["hubspot_source", "hubspot", "deal_property_history"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.deal_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "deal_property_history", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "deal_property_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a change to deal record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related deal record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "value": {"name": "value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`deal_property_history`", "created_at": 1655143063.2638998}, "source.hubspot_source.hubspot.email_campaign": {"fqn": ["hubspot_source", "hubspot", "email_campaign"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_campaign", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_campaign", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents an email campaign in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The app ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_name": {"name": "app_name", "description": "The app name.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "The ID of the content.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_included": {"name": "num_included", "description": "The number of messages included as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "num_queued": {"name": "num_queued", "description": "The number of messages queued as part of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sub_type": {"name": "sub_type", "description": "The email campaign sub-type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "The subject of the email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "The email campaign type.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_campaign`", "created_at": 1655143063.264048}, "source.hubspot_source.hubspot.email_event": {"fqn": ["hubspot_source", "hubspot", "email_event"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": 84, "period": "hour"}, "error_after": {"count": 168, "period": "hour"}, "filter": null}, "external": null, "description": "Each record represents an email event in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The ID of the app that sent the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "caused_by_created": {"name": "caused_by_created", "description": "The timestamp of the event that caused this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "caused_by_id": {"name": "caused_by_id", "description": "The event ID which uniquely identifies the event which directly caused this event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created": {"name": "created", "description": "The created timestamp of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_campaign_id": {"name": "email_campaign_id", "description": "The ID of the related email campaign.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "filtered_event": {"name": "filtered_event", "description": "A boolean representing whether the event has been filtered out of reporting based on customer reports settings or not.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "obsoleted_by_created": {"name": "obsoleted_by_created", "description": "The timestamp of the event that made the current event obsolete.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "obsoleted_by_id": {"name": "obsoleted_by_id", "description": "The event ID which uniquely identifies the follow-on event which makes this current event obsolete. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient": {"name": "recipient", "description": "The email address of the contact related to the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_by_created": {"name": "sent_by_created", "description": "The timestamp of the SENT event related to this event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_by_id": {"name": "sent_by_id", "description": "The event ID which uniquely identifies the email message's SENT event. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "The type of event.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {"is_enabled": "True and True"}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event`", "created_at": 1655143063.264195}, "source.hubspot_source.hubspot.email_event_bounce": {"fqn": ["hubspot_source", "hubspot", "email_event_bounce"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_bounce", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_bounce", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_bounce", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a BOUNCE email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "category": {"name": "category", "description": "The best-guess of the type of bounce encountered.\nIf an appropriate category couldn't be determined, this property is omitted. See below for the possible values.\nNote that this is a derived value, and may be modified at any time to improve the accuracy of classification.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "response": {"name": "response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "The status code returned from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_bounce`", "created_at": 1655143063.264323}, "source.hubspot_source.hubspot.email_event_click": {"fqn": ["hubspot_source", "hubspot", "email_event_click"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_click", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_click", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_click", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a CLICK email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location": {"name": "location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer": {"name": "referer", "description": "The URL of the webpage that linked to the URL clicked. Whether this is provided, and what its value is, is determined by the recipient's email client.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "url": {"name": "url", "description": "The URL within the message that the recipient clicked.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_click`", "created_at": 1655143063.264454}, "source.hubspot_source.hubspot.email_event_deferred": {"fqn": ["hubspot_source", "hubspot", "email_event_deferred"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_deferred", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_deferred", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_deferred", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a DEFERRED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attempt": {"name": "attempt", "description": "The delivery attempt number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "response": {"name": "response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_deferred`", "created_at": 1655143063.264578}, "source.hubspot_source.hubspot.email_event_delivered": {"fqn": ["hubspot_source", "hubspot", "email_event_delivered"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_delivered", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_delivered", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_delivered", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a DELIVERED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "response": {"name": "response", "description": "The full response from the recipient's email server.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "smtp_id": {"name": "smtp_id", "description": "An ID attached to the message by HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_delivered`", "created_at": 1655143063.264703}, "source.hubspot_source.hubspot.email_event_dropped": {"fqn": ["hubspot_source", "hubspot", "email_event_dropped"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_dropped", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_dropped", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_dropped", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a DROPPED email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc": {"name": "bcc", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc": {"name": "cc", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_message": {"name": "drop_message", "description": "The raw message describing why the email message was dropped. This will usually provide additional details beyond 'dropReason'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "drop_reason": {"name": "drop_reason", "description": "The reason why the email message was dropped. See below for the possible values.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from": {"name": "from", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to": {"name": "reply_to", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_dropped`", "created_at": 1655143063.264836}, "source.hubspot_source.hubspot.email_event_forward": {"fqn": ["hubspot_source", "hubspot", "email_event_forward"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_forward", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_forward", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_forward", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a FORWARD email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location": {"name": "location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_forward`", "created_at": 1655143063.264964}, "source.hubspot_source.hubspot.email_event_open": {"fqn": ["hubspot_source", "hubspot", "email_event_open"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_open", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_open", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_open", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a OPEN email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "duration": {"name": "duration", "description": "If provided and nonzero, the approximate number of milliseconds the user had opened the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location": {"name": "location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_open`", "created_at": 1655143063.2650912}, "source.hubspot_source.hubspot.email_event_print": {"fqn": ["hubspot_source", "hubspot", "email_event_print"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_print", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_print", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_print", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a PRINT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location": {"name": "location", "description": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_print`", "created_at": 1655143063.265217}, "source.hubspot_source.hubspot.email_event_sent": {"fqn": ["hubspot_source", "hubspot", "email_event_sent"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_sent", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_sent", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_sent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a SENT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bcc": {"name": "bcc", "description": "The 'cc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cc": {"name": "cc", "description": "The 'bcc' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from": {"name": "from", "description": "The 'from' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "reply_to": {"name": "reply_to", "description": "The 'reply-to' field of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "The subject line of the email message.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_sent`", "created_at": 1655143063.265345}, "source.hubspot_source.hubspot.email_event_spam_report": {"fqn": ["hubspot_source", "hubspot", "email_event_spam_report"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_spam_report", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_spam_report", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_spam_report", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a SPAM_REPORT email event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip_address": {"name": "ip_address", "description": "The contact's IP address when the event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_agent": {"name": "user_agent", "description": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_spam_report`", "created_at": 1655143063.265468}, "source.hubspot_source.hubspot.email_event_status_change": {"fqn": ["hubspot_source", "hubspot", "email_event_status_change"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_event_status_change", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_event_status_change", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_event_status_change", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a STATUS_CHANGE email event in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bounced": {"name": "bounced", "description": "A HubSpot employee explicitly initiated the status change to block messages to the recipient.\n(Note this usage has been deprecated in favor of dropping messages with a 'dropReason' of BLOCKED_ADDRESS.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_subscription_status": {"name": "portal_subscription_status", "description": "The recipient's portal subscription status.\nNote that if this is 'UNSUBSCRIBED', the property 'subscriptions' is not necessarily an empty array, nor are all\nsubscriptions contained in it necessarily going to have their statuses set to 'UNSUBSCRIBED'.)\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requested_by": {"name": "requested_by", "description": "The email address of the person requesting the change on behalf of the recipient. If not applicable, this property is omitted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the subscription change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subscriptions": {"name": "subscriptions", "description": "An array of JSON objects representing the status of subscriptions for the recipient.\nEach JSON subscription object is comprised of the properties: 'id', 'status'.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_event_status_change`", "created_at": 1655143063.265595}, "source.hubspot_source.hubspot.email_subscription": {"fqn": ["hubspot_source", "hubspot", "email_subscription"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_subscription", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_subscription", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_subscription", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents an email subscription in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Whether the subscription is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "The description of the subscription.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the email subscription.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the email subscription.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_subscription`", "created_at": 1655143063.265718}, "source.hubspot_source.hubspot.email_subscription_change": {"fqn": ["hubspot_source", "hubspot", "email_subscription_change"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.email_subscription_change", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "email_subscription_change", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "email_subscription_change", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a change to an email subscription in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "caused_by_event_id": {"name": "caused_by_event_id", "description": "The ID of the event that caused the subscription change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change": {"name": "change", "description": "The change which occurred. This enumeration is specific to the 'changeType'; see below for the possible values.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "change_type": {"name": "change_type", "description": "The type of change which occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_subscription_id": {"name": "email_subscription_id", "description": "The ID of the related email subscription.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recipient": {"name": "recipient", "description": "The email address of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the subscription change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "The timestamp when this change occurred. If 'causedByEvent' is present, this will be absent.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`email_subscription_change`", "created_at": 1655143063.265845}, "source.hubspot_source.hubspot.engagement": {"fqn": ["hubspot_source", "hubspot", "engagement"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents an engagement", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Whether the engagement is currently being shown in the UI.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "activity_type": {"name": "activity_type", "description": "The engagement's activity type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "A timestamp representing when the engagement was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_updated": {"name": "last_updated", "description": "A timestamp in representing when the engagement was last updated.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the engagement's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "A timestamp in representing the time that the engagement should appear in the timeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "One of NOTE, EMAIL, TASK, MEETING, or CALL, the type of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement`", "created_at": 1655143063.265976}, "source.hubspot_source.hubspot.engagement_call": {"fqn": ["hubspot_source", "hubspot", "engagement_call"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_call", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_call", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_call", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a CALL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "body": {"name": "body", "description": "The details or notes of the call", "meta": {}, "data_type": null, "quote": null, "tags": []}, "disposition": {"name": "disposition", "description": "The internal ID for the call outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "duration_milliseconds": {"name": "duration_milliseconds", "description": "The length of the call in milliseconds", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_account_id": {"name": "external_account_id", "description": "For calls made in HubSpot, this will be the internal ID of the account used to make the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_id": {"name": "external_id", "description": "For calls made in HubSpot, this will be the internal ID of the call.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_number": {"name": "from_number", "description": "The phone number that was used as the from number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recording_url": {"name": "recording_url", "description": "The URL of the recording file .", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "Will be COMPLETED once the call is finished.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "to_number": {"name": "to_number", "description": "The phone number that was called.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_call`", "created_at": 1655143063.266112}, "source.hubspot_source.hubspot.engagement_company": {"fqn": ["hubspot_source", "hubspot", "engagement_company"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_company", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_company", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a company and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_company`", "created_at": 1655143063.266232}, "source.hubspot_source.hubspot.engagement_contact": {"fqn": ["hubspot_source", "hubspot", "engagement_contact"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_contact", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_contact", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a contact and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_contact`", "created_at": 1655143063.2663512}, "source.hubspot_source.hubspot.engagement_deal": {"fqn": ["hubspot_source", "hubspot", "engagement_deal"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_deal", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_deal", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a deal and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_deal`", "created_at": 1655143063.266512}, "source.hubspot_source.hubspot.engagement_email": {"fqn": ["hubspot_source", "hubspot", "engagement_email"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_email", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_email", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_email", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents an EMAIL engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attached_video_id": {"name": "attached_video_id", "description": "The ID of the video attached.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attached_video_opened": {"name": "attached_video_opened", "description": "Whether the the attached video was opened.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "attached_video_watched": {"name": "attached_video_watched", "description": "Whether the the attached video was watched.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_id_created": {"name": "email_send_event_id_created", "description": "When the SENT event occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email_send_event_id_id": {"name": "email_send_event_id_id", "description": "The ID of the related SENT email event.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "error_message": {"name": "error_message", "description": "The error message, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_email": {"name": "from_email", "description": "The email address of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_first_name": {"name": "from_first_name", "description": "The first name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "from_last_name": {"name": "from_last_name", "description": "The last name of the sender.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "html": {"name": "html", "description": "The body of the HTML email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "media_processing_status": {"name": "media_processing_status", "description": "The processing status of the media content in the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "message_id": {"name": "message_id", "description": "The ID of the message.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sent_via": {"name": "sent_via", "description": "How the email was sent.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "The status of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "The subject of the email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "text": {"name": "text", "description": "The body of the text-only email.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "thread_id": {"name": "thread_id", "description": "The ID of the email thread.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_email`", "created_at": 1655143063.266665}, "source.hubspot_source.hubspot.engagement_email_cc": {"fqn": ["hubspot_source", "hubspot", "engagement_email_cc"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_email_cc", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_email_cc", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_email_cc", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a CC'd email address as part of an EMAIL engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "The email address of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "The first name of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "The last name of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_email_cc`", "created_at": 1655143063.2667918}, "source.hubspot_source.hubspot.engagement_email_to": {"fqn": ["hubspot_source", "hubspot", "engagement_email_to"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_email_to", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_email_to", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_email_to", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a TO email address as part of an EMAIL engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "The email address of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "The first name of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "The last name of the recipient.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_email_to`", "created_at": 1655143063.266916}, "source.hubspot_source.hubspot.engagement_meeting": {"fqn": ["hubspot_source", "hubspot", "engagement_meeting"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_meeting", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_meeting", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_meeting", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a MEETING engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "body": {"name": "body", "description": "The details or body of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "A timestamp representing the end time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "external_url": {"name": "external_url", "description": "The external URL of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "meeting_outcome": {"name": "meeting_outcome", "description": "The meeting outcome.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pre_meeting_prospect_reminders": {"name": "pre_meeting_prospect_reminders", "description": "TBD", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source of the meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The internal ID of the meeting source.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "A timestamp representing the start time of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "title": {"name": "title", "description": "The title or subject of the meeting", "meta": {}, "data_type": null, "quote": null, "tags": []}, "web_conference_meeting_id": {"name": "web_conference_meeting_id", "description": "The ID of the web conference meeting.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_meeting`", "created_at": 1655143063.267051}, "source.hubspot_source.hubspot.engagement_note": {"fqn": ["hubspot_source", "hubspot", "engagement_note"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_note", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_note", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_note", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a NOTE engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "body": {"name": "body", "description": "The body of the note. The body has a limit of 65536 characters.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_note`", "created_at": 1655143063.2671711}, "source.hubspot_source.hubspot.engagement_task": {"fqn": ["hubspot_source", "hubspot", "engagement_task"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.engagement_task", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "engagement_task", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "engagement_task", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a TASK engagement event.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "body": {"name": "body", "description": "The body or details of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "completion_date": {"name": "completion_date", "description": "The timestamp the task was completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the engagement.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "for_object_type": {"name": "for_object_type", "description": "One of CONTACT or COMPANY, what object type the task is for.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_all_day": {"name": "is_all_day", "description": "Whether it is an all day task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "priority": {"name": "priority", "description": "The priority of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "probability_to_complete": {"name": "probability_to_complete", "description": "The probability that the task will be completed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "The status of the task.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "The subject or title of the task", "meta": {}, "data_type": null, "quote": null, "tags": []}, "task_type": {"name": "task_type", "description": "The type of task", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`engagement_task`", "created_at": 1655143063.267303}, "source.hubspot_source.hubspot.form": {"fqn": ["hubspot_source", "hubspot", "form"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.form", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "form", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "form", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a Hubspot form.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "A timestamp for when the form was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "css_class": {"name": "css_class", "description": "The CSS classes assigned to the form.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "follow_up_id": {"name": "follow_up_id", "description": "This field is no longer used.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "guid": {"name": "guid", "description": "The internal ID of the form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "lead_nurturing_campaign_id": {"name": "lead_nurturing_campaign_id", "description": "TBD", "meta": {}, "data_type": null, "quote": null, "tags": []}, "method": {"name": "method", "description": "This field is no longer used.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "notify_recipients": {"name": "notify_recipients", "description": "A comma-separated list of user IDs that should receive submission notifications.\nEmail addresses will be returned for individuals who aren't users.\n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "redirect": {"name": "redirect", "description": "The URL that the visitor will be redirected to after filling out the form.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "submit_text": {"name": "submit_text", "description": "The text used for the submit button.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "A timestamp for when the form was last updated.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`form`", "created_at": 1655143063.2674408}, "source.hubspot_source.hubspot.owner": {"fqn": ["hubspot_source", "hubspot", "owner"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.owner", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "owner", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "owner", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents an owner/user in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "A timestamp for when the owner was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "The email address of the owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "The first name of the owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "The last name of the owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "owner_id": {"name": "owner_id", "description": "The ID of the owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "The type of owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "A timestamp for when the owner was last updated.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`owner`", "created_at": 1655143063.26757}, "source.hubspot_source.hubspot.ticket_company": {"fqn": ["hubspot_source", "hubspot", "ticket_company"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_company", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_company", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a ticket and company.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "The ID of the related ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "company_id": {"name": "company_id", "description": "The ID of the related company.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_company`", "created_at": 1655143063.267688}, "source.hubspot_source.hubspot.ticket_contact": {"fqn": ["hubspot_source", "hubspot", "ticket_contact"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_contact", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_contact", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a ticket and a contact.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "The ID of the related ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "The ID of the related contact.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_contact`", "created_at": 1655143063.267807}, "source.hubspot_source.hubspot.ticket_deal": {"fqn": ["hubspot_source", "hubspot", "ticket_deal"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_deal", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_deal", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a ticket and a deal.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "The ID of the related ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deal_id": {"name": "deal_id", "description": "The ID of the related deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_deal`", "created_at": 1655143063.267926}, "source.hubspot_source.hubspot.ticket_engagement": {"fqn": ["hubspot_source", "hubspot", "ticket_engagement"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_engagement", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_engagement", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_engagement", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a 'link' between a ticket and an engagement.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "The ID of the related ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "The ID of the related deal.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_engagement`", "created_at": 1655143063.2680461}, "source.hubspot_source.hubspot.ticket_pipeline_stage": {"fqn": ["hubspot_source", "hubspot", "ticket_pipeline_stage"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_pipeline_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_pipeline_stage", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_pipeline_stage", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a ticket pipeline stage.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Boolean indicating whether the pipeline stage is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the stages appear when viewed in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_closed": {"name": "is_closed", "description": "Boolean indicating if the pipeline stage is closed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "label": {"name": "label", "description": "The human-readable label for the stage. The label is used when showing the stage in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_id": {"name": "pipeline_id", "description": "The ID of the pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stage_id": {"name": "stage_id", "description": "The ID of the pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_state": {"name": "ticket_state", "description": "State of the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_pipeline_stage`", "created_at": 1655143063.2681758}, "source.hubspot_source.hubspot.ticket_pipeline": {"fqn": ["hubspot_source", "hubspot", "ticket_pipeline"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_pipeline", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_pipeline", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_pipeline", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a ticket pipeline.", "columns": {"_fivetran_deleted": {"name": "_fivetran_deleted", "description": "Timestamp of when Fivetran marked a record as deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Boolean indicating whether the pipeline is active.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_order": {"name": "display_order", "description": "Used to determine the order in which the stages appear when viewed in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "label": {"name": "label", "description": "The human-readable label for the stage. The label is used when showing the stage in HubSpot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "object_type_id": {"name": "object_type_id", "description": "Reference to the object type.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pipeline_id": {"name": "pipeline_id", "description": "Reference to the pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_pipeline`", "created_at": 1655143063.268301}, "source.hubspot_source.hubspot.ticket_property_history": {"fqn": ["hubspot_source", "hubspot", "ticket_property_history"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket_property_history", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket_property_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a change to ticket record in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "The source (reason) of the change.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_id": {"name": "source_id", "description": "The ID of the object that caused the change, if applicable.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timestamp_instant": {"name": "timestamp_instant", "description": "The timestamp the changed occurred.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "The ID of the related ticket record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "The name of the field being changed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "value": {"name": "value", "description": "The new value of the field.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket_property_history`", "created_at": 1655143063.268425}, "source.hubspot_source.hubspot.ticket": {"fqn": ["hubspot_source", "hubspot", "ticket"], "database": "dbt-package-testing", "schema": "hubspot", "unique_id": "source.hubspot_source.hubspot.ticket", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "models/src_hubspot.yml", "original_file_path": "models/src_hubspot.yml", "name": "ticket", "source_name": "hubspot", "source_description": "", "loader": "Fivetran", "identifier": "ticket", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_fivetran_synced", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Each record represents a ticket in Hubspot.", "columns": {"_fivetran_synced": {"name": "_fivetran_synced", "description": "Timestamp of when Fivetran synced a record.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "ID of the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_deleted": {"name": "is_deleted", "description": "Whether the record was deleted.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "portal_id": {"name": "portal_id", "description": "The hub ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_closed_date": {"name": "property_closed_date", "description": "The date the ticket was closed.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_createdate": {"name": "property_createdate", "description": "The date the ticket was created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_first_agent_reply_date": {"name": "property_first_agent_reply_date", "description": "the date for the first agent reply on the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_hs_pipeline": {"name": "property_hs_pipeline", "description": "The ID of the ticket's pipeline.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_hs_pipeline_stage": {"name": "property_hs_pipeline_stage", "description": "The ID of the ticket's pipeline stage.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_hs_ticket_priority": {"name": "property_hs_ticket_priority", "description": "The priority of the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_hs_ticket_category": {"name": "property_hs_ticket_category", "description": "The category of the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_hubspot_owner_id": {"name": "property_hubspot_owner_id", "description": "The ID of the deal's owner.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_subject": {"name": "property_subject", "description": "Short summary of ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "property_content": {"name": "property_content", "description": "Text in body of the ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`dbt-package-testing`.`hubspot`.`ticket`", "created_at": 1655143063.268563}}, "macros": {"macro.dbt_bigquery.date_sharded_table": {"unique_id": "macro.dbt_bigquery.date_sharded_table", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2395809}, "macro.dbt_bigquery.grant_access_to": {"unique_id": "macro.dbt_bigquery.grant_access_to", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.240051}, "macro.dbt_bigquery.get_partitions_metadata": {"unique_id": "macro.dbt_bigquery.get_partitions_metadata", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.240688}, "macro.dbt_bigquery.bigquery__get_catalog": {"unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2462358}, "macro.dbt_bigquery.partition_by": {"unique_id": "macro.dbt_bigquery.partition_by", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.255043}, "macro.dbt_bigquery.cluster_by": {"unique_id": "macro.dbt_bigquery.cluster_by", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.255955}, "macro.dbt_bigquery.bigquery_options": {"unique_id": "macro.dbt_bigquery.bigquery_options", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.256712}, "macro.dbt_bigquery.bigquery_table_options": {"unique_id": "macro.dbt_bigquery.bigquery_table_options", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.257261}, "macro.dbt_bigquery.bigquery__create_table_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, sql) -%}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace table {{ relation }}\n  {{ partition_by(partition_config) }}\n  {{ cluster_by(raw_cluster_by) }}\n  {{ bigquery_table_options(config, model, temporary) }}\n  as (\n    {{ sql }}\n  );\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.258589}, "macro.dbt_bigquery.bigquery_view_options": {"unique_id": "macro.dbt_bigquery.bigquery_view_options", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2590878}, "macro.dbt_bigquery.bigquery__create_view_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  as {{ sql }};\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.25975}, "macro.dbt_bigquery.bigquery__create_schema": {"unique_id": "macro.dbt_bigquery.bigquery__create_schema", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_schema", "macro_sql": "{% macro bigquery__create_schema(relation) -%}\n  {{ adapter.create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.260027}, "macro.dbt_bigquery.bigquery__drop_schema": {"unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.26034}, "macro.dbt_bigquery.bigquery__drop_relation": {"unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.260812}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.261129}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2614322}, "macro.dbt_bigquery.bigquery__current_timestamp": {"unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  CURRENT_TIMESTAMP()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.261594}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.26196}, "macro.dbt_bigquery.bigquery__list_schemas": {"unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2622678}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.262642}, "macro.dbt_bigquery.bigquery__persist_docs": {"unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2632189}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.263552}, "macro.dbt_bigquery.bigquery__rename_relation": {"unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2638772}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.264728}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n  \n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.265635}, "macro.dbt_bigquery.bigquery__alter_column_type": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.267009}, "macro.dbt_bigquery.bigquery__test_unique": {"unique_id": "macro.dbt_bigquery.bigquery__test_unique", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n  \n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n  \n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.267404}, "macro.dbt_bigquery.bigquery__create_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.26812}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.268458}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.269702}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.270818}, "macro.dbt_bigquery.materialization_view_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.271976}, "macro.dbt_bigquery.materialization_table_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "name": "materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery' -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n  {% call statement('main') -%}\n    {{ create_table_as(False, target_relation, sql) }}\n  {% endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.27542}, "macro.dbt_bigquery.materialization_copy_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "name": "materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter's copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.277695}, "macro.dbt_bigquery.declare_dbt_max_partition": {"unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, sql) %}\n\n  {% if '_dbt_max_partition' in sql %}\n\n    declare _dbt_max_partition {{ partition_by.data_type }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n  \n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.280751}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.281635}, "macro.dbt_bigquery.bq_insert_overwrite": {"unique_id": "macro.dbt_bigquery.bq_insert_overwrite", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "bq_insert_overwrite", "macro_sql": "{% macro bq_insert_overwrite(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n\n  {% if partitions is not none and partitions != [] %} {# static #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {{sql}}\n        )\n      {%- endset -%}\n\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=true) }}\n\n  {% else %} {# dynamic #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n        {{ declare_dbt_max_partition(this, partition_by, sql) }}\n        \n        -- 1. create a temp table\n        {{ create_table_as(True, tmp_relation, sql) }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              array_agg(distinct {{ partition_by.render() }})\n          from {{ tmp_relation }}\n      );\n\n      {#\n        TODO: include_sql_header is a hack; consider a better approach that includes\n              the sql_header at the materialization-level instead\n      #}\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=false) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql", "macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2841558}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n    {%- endset %}\n    {% if partition_by is none %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, on_schema_change\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n    {%- set source_sql -%}\n      {%- if tmp_relation_exists -%}\n        (\n          select * from {{ tmp_relation }}\n        )\n      {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n          {{sql}}\n        )\n      {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.286001}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery' -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% else %}\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' %} {# Check first, since otherwise we may not build a temp table #}\n      {% do run_query(\n        declare_dbt_max_partition(this, partition_by, sql) + create_table_as(True, tmp_relation, sql)\n      ) %}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n    ) %}\n\n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {% endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.statement", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2911181}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.292427}, "macro.dbt_bigquery.bigquery__create_columns": {"unique_id": "macro.dbt_bigquery.bigquery__create_columns", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.292743}, "macro.dbt_bigquery.bigquery__post_snapshot": {"unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "package_name": "dbt_bigquery", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.293014}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.295089}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.295486}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.295784}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.296075}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.296366}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.297162}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.297764}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2983649}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.299264}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.2998028}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.30559}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.305932}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.306378}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.306669}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.306869}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.308265}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.308599}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.308943}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.310868}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.314637}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.319507}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.320071}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3204129}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.320596}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.321005}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.322706}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.323091}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3237739}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.324672}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.335316}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3394198}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.34035}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.340956}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3417542}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3425071}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    \n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.344053}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.345133}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.346324}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.350736}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3529868}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.353446}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.354296}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.354817}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3560472}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3573601}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3662}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.373576}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.375797}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.377991}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.37935}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.385439}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3862798}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.386622}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.3869991}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  \n  {{ sql_header if sql_header is not none }}\n  \n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.387755}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.394023}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.394717}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.395205}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.397653}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.398586}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.39889}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.399225}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.399711}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.404556}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.410293}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4120388}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4124658}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4133482}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.41379}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.414017}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.414316}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.414536}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.415448}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4158819}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4181209}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4189079}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.419337}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.420296}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.420785}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.421311}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.422108}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.422579}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.423296}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.423757}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.424335}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.425457}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4274602}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4287622}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.429306}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.432045}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.434326}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4356952}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4361222}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.436877}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4372249}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.437529}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.437873}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.43921}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4395468}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.439845}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.440581}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4443011}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.44534}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.445759}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.446626}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4472861}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.447608}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4479868}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.448522}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.448986}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.450104}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.450523}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4508889}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.451884}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.452197}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.453134}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4543219}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4555578}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.456089}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4565618}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4568892}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.457547}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4586618}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4609852}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4614751}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4619038}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4622028}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.462541}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.463047}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4634418}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.464111}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.464459}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.464761}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.467382}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.467681}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.468259}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.468606}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4692411}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.469669}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.470811}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.471292}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.472956}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4741602}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.474599}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.475141}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.475704}, "macro.hubspot_source.get_contact_columns": {"unique_id": "macro.hubspot_source.get_contact_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_contact_columns.sql", "original_file_path": "macros/get_contact_columns.sql", "name": "get_contact_columns", "macro_sql": "{% macro get_contact_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"property_email\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_company\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_firstname\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_lastname\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_createdate\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_jobtitle\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_annualrevenue\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ fivetran_utils.add_pass_through_columns(columns, var('hubspot__contact_pass_through_columns')) }}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string", "macro.fivetran_utils.add_pass_through_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.478098}, "macro.hubspot_source.get_email_event_open_columns": {"unique_id": "macro.hubspot_source.get_email_event_open_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_open_columns.sql", "original_file_path": "macros/get_email_event_open_columns.sql", "name": "get_email_event_open_columns", "macro_sql": "{% macro get_email_event_open_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"browser\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"duration\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ip_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"location\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"user_agent\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.479807}, "macro.hubspot_source.get_email_event_spam_report_columns": {"unique_id": "macro.hubspot_source.get_email_event_spam_report_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_spam_report_columns.sql", "original_file_path": "macros/get_email_event_spam_report_columns.sql", "name": "get_email_event_spam_report_columns", "macro_sql": "{% macro get_email_event_spam_report_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ip_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"user_agent\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.481015}, "macro.hubspot_source.get_email_event_bounce_columns": {"unique_id": "macro.hubspot_source.get_email_event_bounce_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_bounce_columns.sql", "original_file_path": "macros/get_email_event_bounce_columns.sql", "name": "get_email_event_bounce_columns", "macro_sql": "{% macro get_email_event_bounce_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"category\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"response\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"status\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.482388}, "macro.hubspot_source.get_ticket_pipeline_stage_columns": {"unique_id": "macro.hubspot_source.get_ticket_pipeline_stage_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_pipeline_stage_columns.sql", "original_file_path": "macros/get_ticket_pipeline_stage_columns.sql", "name": "get_ticket_pipeline_stage_columns", "macro_sql": "{% macro get_ticket_pipeline_stage_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"active\", \"datatype\": \"boolean\"},\n    {\"name\": \"display_order\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"is_closed\", \"datatype\": \"boolean\"},\n    {\"name\": \"label\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"pipeline_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"stage_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ticket_state\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.4844759}, "macro.hubspot_source.get_company_columns": {"unique_id": "macro.hubspot_source.get_company_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_company_columns.sql", "original_file_path": "macros/get_company_columns.sql", "name": "get_company_columns", "macro_sql": "{% macro get_company_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"is_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"property_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_description\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_createdate\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_industry\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_address_2\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_city\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_state\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_country\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_annualrevenue\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ fivetran_utils.add_pass_through_columns(columns, var('hubspot__company_pass_through_columns')) }}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string", "macro.fivetran_utils.add_pass_through_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.488224}, "macro.hubspot_source.get_ticket_deal_columns": {"unique_id": "macro.hubspot_source.get_ticket_deal_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_deal_columns.sql", "original_file_path": "macros/get_ticket_deal_columns.sql", "name": "get_ticket_deal_columns", "macro_sql": "{% macro get_ticket_deal_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"ticket_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.489971}, "macro.hubspot_source.get_ticket_pipeline_columns": {"unique_id": "macro.hubspot_source.get_ticket_pipeline_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_pipeline_columns.sql", "original_file_path": "macros/get_ticket_pipeline_columns.sql", "name": "get_ticket_pipeline_columns", "macro_sql": "{% macro get_ticket_pipeline_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"active\", \"datatype\": \"boolean\"},\n    {\"name\": \"display_order\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"label\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"object_type_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"pipeline_id\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.491888}, "macro.hubspot_source.get_email_event_dropped_columns": {"unique_id": "macro.hubspot_source.get_email_event_dropped_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_dropped_columns.sql", "original_file_path": "macros/get_email_event_dropped_columns.sql", "name": "get_email_event_dropped_columns", "macro_sql": "{% macro get_email_event_dropped_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"bcc\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"cc\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"drop_message\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"drop_reason\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"reply_to\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subject\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{% if target.type == 'snowflake' %}\n {{ columns.append({\"name\": \"FROM\", \"datatype\": dbt_utils.type_string(), \"quote\": True, \"alias\": \"from_email\"}) }}\n{% else %}\n {{ columns.append({\"name\": \"from\", \"datatype\": dbt_utils.type_string(), \"quote\": True, \"alias\": \"from_email\"}) }}\n{% endif %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.494775}, "macro.hubspot_source.get_engagement_email_columns": {"unique_id": "macro.hubspot_source.get_engagement_email_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_email_columns.sql", "original_file_path": "macros/get_engagement_email_columns.sql", "name": "get_engagement_email_columns", "macro_sql": "{% macro get_engagement_email_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"attached_video_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"attached_video_opened\", \"datatype\": \"boolean\"},\n    {\"name\": \"attached_video_watched\", \"datatype\": \"boolean\"},\n    {\"name\": \"email_send_event_id_created\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"email_send_event_id_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"error_message\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"facsimile_send_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"from_email\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"from_first_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"from_last_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"html\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"logged_from\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"media_processing_status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"member_of_forwarded_subthread\", \"datatype\": \"boolean\"},\n    {\"name\": \"message_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"post_send_status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"recipient_drop_reasons\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"sent_via\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subject\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"text\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"thread_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"tracker_key\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"validation_skipped\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.499857}, "macro.hubspot_source.get_email_event_forward_columns": {"unique_id": "macro.hubspot_source.get_email_event_forward_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_forward_columns.sql", "original_file_path": "macros/get_email_event_forward_columns.sql", "name": "get_email_event_forward_columns", "macro_sql": "{% macro get_email_event_forward_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"browser\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ip_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"location\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"user_agent\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.501421}, "macro.hubspot_source.get_deal_pipeline_columns": {"unique_id": "macro.hubspot_source.get_deal_pipeline_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_pipeline_columns.sql", "original_file_path": "macros/get_deal_pipeline_columns.sql", "name": "get_deal_pipeline_columns", "macro_sql": "{% macro get_deal_pipeline_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"active\", \"datatype\": \"boolean\"},\n    {\"name\": \"display_order\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"label\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"pipeline_id\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5029252}, "macro.hubspot_source.get_email_event_click_columns": {"unique_id": "macro.hubspot_source.get_email_event_click_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_click_columns.sql", "original_file_path": "macros/get_email_event_click_columns.sql", "name": "get_email_event_click_columns", "macro_sql": "{% macro get_email_event_click_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"browser\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ip_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"location\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"referer\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"url\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"user_agent\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.504801}, "macro.hubspot_source.get_email_event_deferred_columns": {"unique_id": "macro.hubspot_source.get_email_event_deferred_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_deferred_columns.sql", "original_file_path": "macros/get_email_event_deferred_columns.sql", "name": "get_email_event_deferred_columns", "macro_sql": "{% macro get_email_event_deferred_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"attempt\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"response\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.506012}, "macro.hubspot_source.get_deal_columns": {"unique_id": "macro.hubspot_source.get_deal_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_columns.sql", "original_file_path": "macros/get_deal_columns.sql", "name": "get_deal_columns", "macro_sql": "{% macro get_deal_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"deal_pipeline_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"deal_pipeline_stage_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"is_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"owner_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"portal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"property_dealname\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_description\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_amount\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"property_closedate\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_createdate\", \"datatype\": dbt_utils.type_timestamp()}\n] %}\n\n{{ fivetran_utils.add_pass_through_columns(columns, var('hubspot__deal_pass_through_columns')) }}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string", "macro.fivetran_utils.add_pass_through_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5087721}, "macro.hubspot_source.get_engagement_columns": {"unique_id": "macro.hubspot_source.get_engagement_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_columns.sql", "original_file_path": "macros/get_engagement_columns.sql", "name": "get_engagement_columns", "macro_sql": "{% macro get_engagement_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"active\", \"datatype\": \"boolean\"},\n    {\"name\": \"activity_type\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"created_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"last_updated\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"owner_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"portal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"timestamp\", \"datatype\": dbt_utils.type_timestamp(), \"alias\": \"occurred_timestamp\"},\n    {\"name\": \"type\", \"datatype\": dbt_utils.type_string(), \"alias\": \"engagement_type\"}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.511113}, "macro.hubspot_source.get_engagement_contact_columns": {"unique_id": "macro.hubspot_source.get_engagement_contact_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_contact_columns.sql", "original_file_path": "macros/get_engagement_contact_columns.sql", "name": "get_engagement_contact_columns", "macro_sql": "{% macro get_engagement_contact_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.512154}, "macro.hubspot_source.get_email_event_columns": {"unique_id": "macro.hubspot_source.get_email_event_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_columns.sql", "original_file_path": "macros/get_email_event_columns.sql", "name": "get_email_event_columns", "macro_sql": "{% macro get_email_event_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"app_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"caused_by_created\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"caused_by_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"created\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"email_campaign_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"filtered_event\", \"datatype\": \"boolean\"},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"obsoleted_by_created\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"obsoleted_by_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"portal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"recipient\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"sent_by_created\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"sent_by_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"type\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5153909}, "macro.hubspot_source.get_contact_merge_audit_columns": {"unique_id": "macro.hubspot_source.get_contact_merge_audit_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_contact_merge_audit_columns.sql", "original_file_path": "macros/get_contact_merge_audit_columns.sql", "name": "get_contact_merge_audit_columns", "macro_sql": "{% macro get_contact_merge_audit_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"canonical_vid\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"entity_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"first_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"last_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"num_properties_moved\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"timestamp\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"user_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"vid_to_merge\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.517615}, "macro.hubspot_source.get_engagement_company_columns": {"unique_id": "macro.hubspot_source.get_engagement_company_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_company_columns.sql", "original_file_path": "macros/get_engagement_company_columns.sql", "name": "get_engagement_company_columns", "macro_sql": "{% macro get_engagement_company_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"company_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.518663}, "macro.hubspot_source.get_deal_pipeline_stage_columns": {"unique_id": "macro.hubspot_source.get_deal_pipeline_stage_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_pipeline_stage_columns.sql", "original_file_path": "macros/get_deal_pipeline_stage_columns.sql", "name": "get_deal_pipeline_stage_columns", "macro_sql": "{% macro get_deal_pipeline_stage_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"active\", \"datatype\": \"boolean\"},\n    {\"name\": \"closed_won\", \"datatype\": \"boolean\"},\n    {\"name\": \"display_order\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"label\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"pipeline_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"probability\", \"datatype\": dbt_utils.type_float()},\n    {\"name\": \"stage_id\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string", "macro.dbt_utils.type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.520659}, "macro.hubspot_source.get_email_campaign_columns": {"unique_id": "macro.hubspot_source.get_email_campaign_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_campaign_columns.sql", "original_file_path": "macros/get_email_campaign_columns.sql", "name": "get_email_campaign_columns", "macro_sql": "{% macro get_email_campaign_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"app_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"app_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"content_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"num_included\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"num_queued\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"sub_type\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subject\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"type\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.523047}, "macro.hubspot_source.get_email_event_sent_columns": {"unique_id": "macro.hubspot_source.get_email_event_sent_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_sent_columns.sql", "original_file_path": "macros/get_email_event_sent_columns.sql", "name": "get_email_event_sent_columns", "macro_sql": "{% macro get_email_event_sent_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"bcc\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"cc\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"reply_to\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subject\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{% if target.type == 'snowflake' %}\n {{ columns.append({\"name\": \"FROM\", \"datatype\": dbt_utils.type_string(), \"quote\": True, \"alias\": \"from_email\"}) }}\n{% else %}\n {{ columns.append({\"name\": \"from\", \"datatype\": dbt_utils.type_string(), \"quote\": True, \"alias\": \"from_email\"}) }}\n{% endif %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.525671}, "macro.hubspot_source.get_deal_stage_columns": {"unique_id": "macro.hubspot_source.get_deal_stage_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_stage_columns.sql", "original_file_path": "macros/get_deal_stage_columns.sql", "name": "get_deal_stage_columns", "macro_sql": "{% macro get_deal_stage_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_active\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_end\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"_fivetran_start\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"date_entered\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"value\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.52771}, "macro.hubspot_source.get_contact_list_columns": {"unique_id": "macro.hubspot_source.get_contact_list_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_contact_list_columns.sql", "original_file_path": "macros/get_contact_list_columns.sql", "name": "get_contact_list_columns", "macro_sql": "{% macro get_contact_list_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"created_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deleteable\", \"datatype\": \"boolean\"},\n    {\"name\": \"dynamic\", \"datatype\": \"boolean\"},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"metadata_error\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"metadata_last_processing_state_change_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"metadata_last_size_change_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"metadata_processing\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"metadata_size\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"portal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"updated_at\", \"datatype\": dbt_utils.type_timestamp()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.530581}, "macro.hubspot_source.get_ticket_property_history_columns": {"unique_id": "macro.hubspot_source.get_ticket_property_history_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_property_history_columns.sql", "original_file_path": "macros/get_ticket_property_history_columns.sql", "name": "get_ticket_property_history_columns", "macro_sql": "{% macro get_ticket_property_history_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"ticket_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"timestamp_instant\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"value\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.53229}, "macro.hubspot_source.get_owner_columns": {"unique_id": "macro.hubspot_source.get_owner_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_owner_columns.sql", "original_file_path": "macros/get_owner_columns.sql", "name": "get_owner_columns", "macro_sql": "{% macro get_owner_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"created_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"email\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"first_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"last_name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"owner_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"portal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"type\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"updated_at\", \"datatype\": dbt_utils.type_timestamp()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.534376}, "macro.hubspot_source.get_engagement_deal_columns": {"unique_id": "macro.hubspot_source.get_engagement_deal_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_deal_columns.sql", "original_file_path": "macros/get_engagement_deal_columns.sql", "name": "get_engagement_deal_columns", "macro_sql": "{% macro get_engagement_deal_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.535413}, "macro.hubspot_source.get_email_event_status_change_columns": {"unique_id": "macro.hubspot_source.get_email_event_status_change_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_status_change_columns.sql", "original_file_path": "macros/get_email_event_status_change_columns.sql", "name": "get_email_event_status_change_columns", "macro_sql": "{% macro get_email_event_status_change_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"bounced\", \"datatype\": \"boolean\"},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"portal_subscription_status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"requested_by\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subscriptions\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.537111}, "macro.hubspot_source.get_deal_contact_columns": {"unique_id": "macro.hubspot_source.get_deal_contact_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_contact_columns.sql", "original_file_path": "macros/get_deal_contact_columns.sql", "name": "get_deal_contact_columns", "macro_sql": "{% macro get_deal_contact_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.53816}, "macro.hubspot_source.get_engagement_task_columns": {"unique_id": "macro.hubspot_source.get_engagement_task_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_task_columns.sql", "original_file_path": "macros/get_engagement_task_columns.sql", "name": "get_engagement_task_columns", "macro_sql": "{% macro get_engagement_task_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"body\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"completion_date\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"for_object_type\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"is_all_day\", \"datatype\": \"boolean\"},\n    {\"name\": \"priority\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"probability_to_complete\", \"datatype\": dbt_utils.type_float()},\n    {\"name\": \"status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"subject\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"task_type\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int", "macro.dbt_utils.type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5406919}, "macro.hubspot_source.get_ticket_contact_columns": {"unique_id": "macro.hubspot_source.get_ticket_contact_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_contact_columns.sql", "original_file_path": "macros/get_ticket_contact_columns.sql", "name": "get_ticket_contact_columns", "macro_sql": "{% macro get_ticket_contact_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"ticket_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.541739}, "macro.hubspot_source.get_ticket_company_columns": {"unique_id": "macro.hubspot_source.get_ticket_company_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_company_columns.sql", "original_file_path": "macros/get_ticket_company_columns.sql", "name": "get_ticket_company_columns", "macro_sql": "{% macro get_ticket_company_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"ticket_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"company_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.542779}, "macro.hubspot_source.get_ticket_columns": {"unique_id": "macro.hubspot_source.get_ticket_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_columns.sql", "original_file_path": "macros/get_ticket_columns.sql", "name": "get_ticket_columns", "macro_sql": "{% macro get_ticket_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"is_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"property_closed_date\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_createdate\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_first_agent_reply_date\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"property_hs_pipeline\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_hs_pipeline_stage\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_hs_ticket_category\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_hs_ticket_priority\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_hubspot_owner_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"property_subject\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"property_content\", \"datatype\": dbt_utils.type_string()}  \n] %}\n\n{{ fivetran_utils.add_pass_through_columns(columns, var('hubspot__ticket_pass_through_columns')) }}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string", "macro.fivetran_utils.add_pass_through_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.545951}, "macro.hubspot_source.get_deal_company_columns": {"unique_id": "macro.hubspot_source.get_deal_company_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_company_columns.sql", "original_file_path": "macros/get_deal_company_columns.sql", "name": "get_deal_company_columns", "macro_sql": "{% macro get_deal_company_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"company_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.546991}, "macro.hubspot_source.get_deal_property_history_columns": {"unique_id": "macro.hubspot_source.get_deal_property_history_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_deal_property_history_columns.sql", "original_file_path": "macros/get_deal_property_history_columns.sql", "name": "get_deal_property_history_columns", "macro_sql": "{% macro get_deal_property_history_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"deal_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"timestamp\", \"datatype\": dbt_utils.type_timestamp(), \"alias\": \"change_timestamp\"},\n    {\"name\": \"value\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.548755}, "macro.hubspot_source.get_ticket_engagement_columns": {"unique_id": "macro.hubspot_source.get_ticket_engagement_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_ticket_engagement_columns.sql", "original_file_path": "macros/get_ticket_engagement_columns.sql", "name": "get_ticket_engagement_columns", "macro_sql": "{% macro get_ticket_engagement_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"ticket_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5497909}, "macro.hubspot_source.get_company_property_history_columns": {"unique_id": "macro.hubspot_source.get_company_property_history_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_company_property_history_columns.sql", "original_file_path": "macros/get_company_property_history_columns.sql", "name": "get_company_property_history_columns", "macro_sql": "{% macro get_company_property_history_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"company_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"timestamp\", \"datatype\": dbt_utils.type_timestamp(), \"alias\": \"change_timestamp\"},\n    {\"name\": \"value\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.551556}, "macro.hubspot_source.get_engagement_note_columns": {"unique_id": "macro.hubspot_source.get_engagement_note_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_note_columns.sql", "original_file_path": "macros/get_engagement_note_columns.sql", "name": "get_engagement_note_columns", "macro_sql": "{% macro get_engagement_note_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"body\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5528839}, "macro.hubspot_source.get_engagement_meeting_columns": {"unique_id": "macro.hubspot_source.get_engagement_meeting_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_meeting_columns.sql", "original_file_path": "macros/get_engagement_meeting_columns.sql", "name": "get_engagement_meeting_columns", "macro_sql": "{% macro get_engagement_meeting_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"body\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"created_from_link_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"end_time\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"external_url\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"location\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"meeting_outcome\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"pre_meeting_prospect_reminders\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"start_time\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"title\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"web_conference_meeting_id\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5560021}, "macro.hubspot_source.get_contact_list_member_columns": {"unique_id": "macro.hubspot_source.get_contact_list_member_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_contact_list_member_columns.sql", "original_file_path": "macros/get_contact_list_member_columns.sql", "name": "get_contact_list_member_columns", "macro_sql": "{% macro get_contact_list_member_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_deleted\", \"datatype\": \"boolean\"},\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"added_at\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"contact_list_id\", \"datatype\": dbt_utils.type_int()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.557358}, "macro.hubspot_source.get_email_event_delivered_columns": {"unique_id": "macro.hubspot_source.get_email_event_delivered_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_delivered_columns.sql", "original_file_path": "macros/get_email_event_delivered_columns.sql", "name": "get_email_event_delivered_columns", "macro_sql": "{% macro get_email_event_delivered_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"response\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"smtp_id\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5585659}, "macro.hubspot_source.get_contact_property_history_columns": {"unique_id": "macro.hubspot_source.get_contact_property_history_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_contact_property_history_columns.sql", "original_file_path": "macros/get_contact_property_history_columns.sql", "name": "get_contact_property_history_columns", "macro_sql": "{% macro get_contact_property_history_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"contact_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"name\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"source_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"timestamp\", \"datatype\": dbt_utils.type_timestamp(), \"alias\": \"change_timestamp\"},\n    {\"name\": \"value\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_int", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.560339}, "macro.hubspot_source.get_email_event_print_columns": {"unique_id": "macro.hubspot_source.get_email_event_print_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_email_event_print_columns.sql", "original_file_path": "macros/get_email_event_print_columns.sql", "name": "get_email_event_print_columns", "macro_sql": "{% macro get_email_event_print_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"browser\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"ip_address\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"location\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"user_agent\", \"datatype\": dbt_utils.type_string()}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.561888}, "macro.hubspot_source.get_engagement_call_columns": {"unique_id": "macro.hubspot_source.get_engagement_call_columns", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "macros/get_engagement_call_columns.sql", "original_file_path": "macros/get_engagement_call_columns.sql", "name": "get_engagement_call_columns", "macro_sql": "{% macro get_engagement_call_columns() %}\n\n{% set columns = [\n    {\"name\": \"_fivetran_synced\", \"datatype\": dbt_utils.type_timestamp()},\n    {\"name\": \"body\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"callee_object_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"callee_object_type\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"disposition\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"duration_milliseconds\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"engagement_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"external_account_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"external_id\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"from_number\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"recording_url\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"status\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"to_number\", \"datatype\": dbt_utils.type_string()},\n    {\"name\": \"transcription_id\", \"datatype\": dbt_utils.type_int()},\n    {\"name\": \"unknown_visitor_conversation\", \"datatype\": \"boolean\"}\n] %}\n\n{{ return(columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.type_string", "macro.dbt_utils.type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.564972}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.565581}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.565734}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5658822}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.566619}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.566945}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.567543}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.56779}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.569151}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.569304}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.569452}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5695958}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.569739}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.570045}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.570195}, "macro.dbt_utils.postgres__type_timestamp": {"unique_id": "macro.dbt_utils.postgres__type_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() %}\n    timestamp without time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5703402}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.570484}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.570792}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5709388}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5710819}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.571386}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5715358}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.57168}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.571983}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.572139}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5722811}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.57259}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.572753}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.572899}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_relation.sql", "original_file_path": "macros/cross_db_utils/_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5739589}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5746298}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.57484}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5750442}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.576108}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5764349}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.576753}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5770712}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.577445}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.578049}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.578204}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5783522}, "macro.dbt_utils.escape_single_quotes": {"unique_id": "macro.dbt_utils.escape_single_quotes", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.579086}, "macro.dbt_utils.default__escape_single_quotes": {"unique_id": "macro.dbt_utils.default__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5793622}, "macro.dbt_utils.snowflake__escape_single_quotes": {"unique_id": "macro.dbt_utils.snowflake__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.579634}, "macro.dbt_utils.bigquery__escape_single_quotes": {"unique_id": "macro.dbt_utils.bigquery__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5799072}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5809238}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.581193}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5814998}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5818062}, "macro.dbt_utils.listagg": {"unique_id": "macro.dbt_utils.listagg", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt_utils') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__listagg"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.585311}, "macro.dbt_utils.default__listagg": {"unique_id": "macro.dbt_utils.default__listagg", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.586091}, "macro.dbt_utils.bigquery__listagg": {"unique_id": "macro.dbt_utils.bigquery__listagg", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.586642}, "macro.dbt_utils.postgres__listagg": {"unique_id": "macro.dbt_utils.postgres__listagg", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n    \n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.587399}, "macro.dbt_utils.redshift__listagg": {"unique_id": "macro.dbt_utils.redshift__listagg", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "redshift__listagg", "macro_sql": "{% macro redshift__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    {% set ns = namespace() %}\n    {% set ns.delimiter_text_regex = delimiter_text|trim(\"'\") %}\n    {% set special_chars %}\\,^,$,.,|,?,*,+,(,),[,],{,}{% endset %}  \n    {%- for char in special_chars.split(',') -%}\n        {% set escape_char %}\\\\{{ char }}{% endset %}\n        {% set ns.delimiter_text_regex = ns.delimiter_text_regex|replace(char,escape_char) %}\n    {%- endfor -%}\n\n    {% set regex %}'([^{{ ns.delimiter_text_regex }}]+{{ ns.delimiter_text_regex }}){1,{{ limit_num - 1}}}[^{{ ns.delimiter_text_regex }}]+'{% endset %}\n    regexp_substr(\n        listagg(\n            {{ measure }},\n            {{ delimiter_text }}\n            )\n            {% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n        ,{{ regex }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.589201}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5930822}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.59343}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.5937438}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.596997}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) -%}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.597373}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.598149}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.598424}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.598675}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.598924}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.599586}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.59986}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.600107}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6009212}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6012979}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.601585}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__identifier"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.602591}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.602968}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.603204}, "macro.dbt_utils.any_value": {"unique_id": "macro.dbt_utils.any_value", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.603862}, "macro.dbt_utils.default__any_value": {"unique_id": "macro.dbt_utils.default__any_value", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n    \n    any_value({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.604141}, "macro.dbt_utils.postgres__any_value": {"unique_id": "macro.dbt_utils.postgres__any_value", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n    {#- /*Postgres doesn't support any_value, so we're using min() to get the same result*/ -#}\n    min({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6043541}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.605149}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.605418}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.605681}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.606317}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6065228}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.607661}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.607887}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.608035}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6081789}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6084821}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6086998}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6090271}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.609246}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.609501}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.611813}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.612826}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.613736}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.614175}, "macro.dbt_utils.bool_or": {"unique_id": "macro.dbt_utils.bool_or", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.61489}, "macro.dbt_utils.default__bool_or": {"unique_id": "macro.dbt_utils.default__bool_or", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n    \n    bool_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.615166}, "macro.dbt_utils.snowflake__bool_or": {"unique_id": "macro.dbt_utils.snowflake__bool_or", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n    \n    boolor_agg({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.615367}, "macro.dbt_utils.bigquery__bool_or": {"unique_id": "macro.dbt_utils.bigquery__bool_or", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n    \n    logical_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.615565}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.616641}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.617179}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.617465}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.618277}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.618616}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6223161}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.622643}, "macro.dbt_utils._split_part_negative": {"unique_id": "macro.dbt_utils._split_part_negative", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }}) \n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6232378}, "macro.dbt_utils.postgres__split_part": {"unique_id": "macro.dbt_utils.postgres__split_part", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt_utils.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt_utils._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part", "macro.dbt_utils._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.623936}, "macro.dbt_utils.redshift__split_part": {"unique_id": "macro.dbt_utils.redshift__split_part", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "redshift__split_part", "macro_sql": "{% macro redshift__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt_utils.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt_utils._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part", "macro.dbt_utils._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.62464}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }}) \n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1\n        )]\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.625372}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.626132}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6263921}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.626664}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_ephemeral.sql", "original_file_path": "macros/cross_db_utils/_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6284}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.637398}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.638668}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.639446}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.640486}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}}\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.650254}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.651042}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(\n                    dbt_utils.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.651922}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.652849}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6540642}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6547709}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.655371}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.656357}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.656776}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.657575}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.658141}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.659318}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.65996}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.660794}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.661417}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.662187}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.662518}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6636522}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6646369}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.665664}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.666385}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_unique_where.sql", "original_file_path": "macros/generic_tests/test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.667256}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_unique_where.sql", "original_file_path": "macros/generic_tests/test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.667572}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.668281}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.668619}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6697469}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.670964}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.671956}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.672624}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.673583}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.674131}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.674964}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.675909}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.677106}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, previous_column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.678318}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_not_null_where.sql", "original_file_path": "macros/generic_tests/test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6793559}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_not_null_where.sql", "original_file_path": "macros/generic_tests/test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6796649}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.682122}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.683954}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.689037}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.691927}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.692555}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.692863}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6934998}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.693867}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.694474}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.694804}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.695787}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.697031}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.698128}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6985621}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.6992278}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.699917}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7006662}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.701886}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.703558}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.704931}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7057102}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.70607}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.70704}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.70825}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.709823}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.710758}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.711282}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.712873}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('*') }}\n    {% endif %}\n\n    {%- for col in dbt_utils.get_filtered_columns_in_relation(from, except) %}\n\n        {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\n        {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.714428}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.717123}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7209191}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.724555}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7300942}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7308109}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7312808}, "macro.dbt_utils.deduplicate": {"unique_id": "macro.dbt_utils.deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by=none, relation_alias=none) -%}\n\n    {%- set error_message_group_by -%}\nWarning: the `group_by` parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nUse `partition_by` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if kwargs.get('group_by') %}\n    {%- do exceptions.warn(error_message_group_by) -%}\n    {%- endif -%}\n\n    {%- set error_message_order_by -%}\nWarning: `order_by` as an optional parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nSupply a non-null value for `order_by` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if not order_by %}\n    {%- do exceptions.warn(error_message_order_by) -%}\n    {%- endif -%}\n\n    {%- set error_message_alias -%}\nWarning: the `relation_alias` parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nIf you were using `relation_alias` to point to a CTE previously then you can now pass the alias directly to `relation` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if relation_alias %}\n    {%- do exceptions.warn(error_message_alias) -%}\n    {%- endif -%}\n\n    {% set partition_by = partition_by or kwargs.get('group_by') %}\n    {% set relation = relation_alias or relation %}\n    {% set order_by = order_by or \"'1'\" %}\n\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.735368}, "macro.dbt_utils.default__deduplicate": {"unique_id": "macro.dbt_utils.default__deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.735772}, "macro.dbt_utils.redshift__deduplicate": {"unique_id": "macro.dbt_utils.redshift__deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7361438}, "macro.dbt_utils.postgres__deduplicate": {"unique_id": "macro.dbt_utils.postgres__deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.736511}, "macro.dbt_utils.snowflake__deduplicate": {"unique_id": "macro.dbt_utils.snowflake__deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7368262}, "macro.dbt_utils.bigquery__deduplicate": {"unique_id": "macro.dbt_utils.bigquery__deduplicate", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.737149}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.738224}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.740633}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7418659}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7425861}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.743566}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7446342}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7474382}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.748032}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7498171}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.750987}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.752976}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.756181}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7584882}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt_utils.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.760106}, "macro.dbt_utils.get_filtered_columns_in_relation": {"unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "name": "get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7613928}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "name": "default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.762739}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.763538}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.764661}, "macro.dbt_utils.get_table_types_sql": {"unique_id": "macro.dbt_utils.get_table_types_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7655191}, "macro.dbt_utils.default__get_table_types_sql": {"unique_id": "macro.dbt_utils.default__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.765684}, "macro.dbt_utils.postgres__get_table_types_sql": {"unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.765843}, "macro.dbt_utils.bigquery__get_table_types_sql": {"unique_id": "macro.dbt_utils.bigquery__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "bigquery__get_table_types_sql", "macro_sql": "{% macro bigquery__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as `table_type`\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7659981}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.767638}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.bigquery__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7681532}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.771513}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7748978}, "macro.hubspot.engagements_joined": {"unique_id": "macro.hubspot.engagements_joined", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "macros/engagements_joined.sql", "original_file_path": "macros/engagements_joined.sql", "name": "engagements_joined", "macro_sql": "{% macro engagements_joined(base_model) %}\n\nwith base as (\n\n    select *\n    from {{ base_model }}\n\n), engagements as (\n\n    select *\n    from {{ ref('hubspot__engagements') }}\n\n), joined as (\n\n    select \n        base.*,\n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_contact_enabled']) %} engagements.contact_ids, {% endif %}\n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_deal_enabled']) %} engagements.deal_ids, {% endif %}\n        {% if fivetran_utils.enabled_vars(['hubspot_engagement_company_enabled']) %} engagements.company_ids, {% endif %}\n        engagements.is_active,\n        engagements.created_timestamp,\n        engagements.occurred_timestamp,\n        engagements.owner_id\n    from base\n    left join engagements\n        using (engagement_id)\n\n)\n\nselect *\nfrom joined\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.777241}, "macro.hubspot.email_events_joined": {"unique_id": "macro.hubspot.email_events_joined", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "macros/email_events_joined.sql", "original_file_path": "macros/email_events_joined.sql", "name": "email_events_joined", "macro_sql": "{% macro email_events_joined(base_model) %}\n\nwith base as (\n\n    select *\n    from {{ base_model }}\n\n), events as (\n\n    select *\n    from {{ var('email_event') }}\n\n), contacts as (\n\n    select *\n    from {% if var('hubspot_contact_merge_audit_enabled', false) %} \n            {{ ref('int_hubspot__contact_merge_adjust') }} \n        {% else %} \n            {{ var('contact') }} \n        {% endif %}\n\n), events_joined as (\n\n    select \n        base.*,\n        events.created_timestamp,\n        events.email_campaign_id,\n        events.recipient_email_address,\n        events.sent_timestamp as email_send_timestamp,\n        events.sent_by_event_id as email_send_id\n    from base\n    left join events\n        using (event_id)\n\n), contacts_joined as (\n\n    select \n        events_joined.*,\n        contacts.contact_id\n    from events_joined\n    left join contacts\n        on events_joined.recipient_email_address = contacts.email\n\n)\n\nselect *\nfrom contacts_joined\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7789912}, "macro.hubspot.engagements_aggregated": {"unique_id": "macro.hubspot.engagements_aggregated", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "macros/engagements_aggregated.sql", "original_file_path": "macros/engagements_aggregated.sql", "name": "engagements_aggregated", "macro_sql": "{% macro engagements_aggregated(from_ref, primary_key) %}\n\n    select\n        {{ primary_key }},\n        count(case when engagement_type = 'NOTE' then {{ primary_key }} end) as count_engagement_notes,\n        count(case when engagement_type = 'TASK' then {{ primary_key }} end) as count_engagement_tasks,\n        count(case when engagement_type = 'CALL' then {{ primary_key }} end) as count_engagement_calls,\n        count(case when engagement_type = 'MEETING' then {{ primary_key }} end) as count_engagement_meetings,\n        count(case when engagement_type = 'EMAIL' then {{ primary_key }} end) as count_engagement_emails,\n        count(case when engagement_type = 'INCOMING_EMAIL' then {{ primary_key }} end) as count_engagement_incoming_emails,\n        count(case when engagement_type = 'FORWARDED_EMAIL' then {{ primary_key }} end) as count_engagement_forwarded_emails\n    from {{ from_ref }}\n    group by 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.780847}, "macro.hubspot.engagement_metrics": {"unique_id": "macro.hubspot.engagement_metrics", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "macros/engagements_aggregated.sql", "original_file_path": "macros/engagements_aggregated.sql", "name": "engagement_metrics", "macro_sql": "{% macro engagement_metrics() %}\n\n{% set metrics = [\n    'count_engagement_notes',\n    'count_engagement_tasks',\n    'count_engagement_calls',\n    'count_engagement_meetings',\n    'count_engagement_emails',\n    'count_engagement_incoming_emails',\n    'count_engagement_forwarded_emails'\n] %}\n\n{{ return(metrics) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.781505}, "macro.fivetran_utils.enabled_vars": {"unique_id": "macro.fivetran_utils.enabled_vars", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/enabled_vars.sql", "original_file_path": "macros/enabled_vars.sql", "name": "enabled_vars", "macro_sql": "{% macro enabled_vars(vars) %}\n\n{% for v in vars %}\n    \n    {% if var(v, True) == False %}\n    {{ return(False) }}\n    {% endif %}\n\n{% endfor %}\n\n{{ return(True) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7826009}, "macro.fivetran_utils.percentile": {"unique_id": "macro.fivetran_utils.percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "percentile", "macro_sql": "{% macro percentile(percentile_field, partition_field, percent) -%}\n\n{{ adapter.dispatch('percentile', 'fivetran_utils') (percentile_field, partition_field, percent) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__percentile"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7844841}, "macro.fivetran_utils.default__percentile": {"unique_id": "macro.fivetran_utils.default__percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "default__percentile", "macro_sql": "{% macro default__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.784887}, "macro.fivetran_utils.redshift__percentile": {"unique_id": "macro.fivetran_utils.redshift__percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "redshift__percentile", "macro_sql": "{% macro redshift__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.785289}, "macro.fivetran_utils.bigquery__percentile": {"unique_id": "macro.fivetran_utils.bigquery__percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "bigquery__percentile", "macro_sql": "{% macro bigquery__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.785683}, "macro.fivetran_utils.postgres__percentile": {"unique_id": "macro.fivetran_utils.postgres__percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "postgres__percentile", "macro_sql": "{% macro postgres__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n    /* have to group by partition field */\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7860281}, "macro.fivetran_utils.spark__percentile": {"unique_id": "macro.fivetran_utils.spark__percentile", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/percentile.sql", "original_file_path": "macros/percentile.sql", "name": "spark__percentile", "macro_sql": "{% macro spark__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.786415}, "macro.fivetran_utils.pivot_json_extract": {"unique_id": "macro.fivetran_utils.pivot_json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/pivot_json_extract.sql", "original_file_path": "macros/pivot_json_extract.sql", "name": "pivot_json_extract", "macro_sql": "{% macro pivot_json_extract(string, list_of_properties) %}\n\n{%- for property in list_of_properties -%}\n\nreplace( {{ fivetran_utils.json_extract(string, property) }}, '\"', '') as {{ property | replace(' ', '_') | lower }}\n\n{%- if not loop.last -%},{%- endif %}\n{% endfor -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.json_extract"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.787562}, "macro.fivetran_utils.persist_pass_through_columns": {"unique_id": "macro.fivetran_utils.persist_pass_through_columns", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/persist_pass_through_columns.sql", "original_file_path": "macros/persist_pass_through_columns.sql", "name": "persist_pass_through_columns", "macro_sql": "{% macro persist_pass_through_columns(pass_through_variable) %}\n\n{% if var(pass_through_variable, none) %}\n    {% for field in var(pass_through_variable) %}\n        , {{ field.alias if field.alias else field.name }}\n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.788634}, "macro.fivetran_utils.json_parse": {"unique_id": "macro.fivetran_utils.json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "json_parse", "macro_sql": "{% macro json_parse(string, string_path) -%}\n\n{{ adapter.dispatch('json_parse', 'fivetran_utils') (string, string_path) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__json_parse"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.790841}, "macro.fivetran_utils.default__json_parse": {"unique_id": "macro.fivetran_utils.default__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "default__json_parse", "macro_sql": "{% macro default__json_parse(string, string_path) %}\n\n  json_extract_path_text({{string}}, {%- for s in string_path -%}'{{ s }}'{%- if not loop.last -%},{%- endif -%}{%- endfor -%} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.791448}, "macro.fivetran_utils.redshift__json_parse": {"unique_id": "macro.fivetran_utils.redshift__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "redshift__json_parse", "macro_sql": "{% macro redshift__json_parse(string, string_path) %}\n\n  json_extract_path_text({{string}}, {%- for s in string_path -%}'{{ s }}'{%- if not loop.last -%},{%- endif -%}{%- endfor -%} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7920609}, "macro.fivetran_utils.bigquery__json_parse": {"unique_id": "macro.fivetran_utils.bigquery__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "bigquery__json_parse", "macro_sql": "{% macro bigquery__json_parse(string, string_path) %}\n\n \n  json_extract_scalar({{string}}, '$.{%- for s in string_path -%}{{ s }}{%- if not loop.last -%}.{%- endif -%}{%- endfor -%} ')\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.792654}, "macro.fivetran_utils.postgres__json_parse": {"unique_id": "macro.fivetran_utils.postgres__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "postgres__json_parse", "macro_sql": "{% macro postgres__json_parse(string, string_path) %}\n\n  {{string}}::json #>> '{ {%- for s in string_path -%}{{ s }}{%- if not loop.last -%},{%- endif -%}{%- endfor -%} }'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.793374}, "macro.fivetran_utils.snowflake__json_parse": {"unique_id": "macro.fivetran_utils.snowflake__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "snowflake__json_parse", "macro_sql": "{% macro snowflake__json_parse(string, string_path) %}\n\n  parse_json( {{string}} ) {%- for s in string_path -%}{% if s is number %}[{{ s }}]{% else %}['{{ s }}']{% endif %}{%- endfor -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7940018}, "macro.fivetran_utils.spark__json_parse": {"unique_id": "macro.fivetran_utils.spark__json_parse", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_parse.sql", "original_file_path": "macros/json_parse.sql", "name": "spark__json_parse", "macro_sql": "{% macro spark__json_parse(string, string_path) %}\n\n  {{string}} : {%- for s in string_path -%}{% if s is number %}[{{ s }}]{% else %}['{{ s }}']{% endif %}{%- endfor -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7946298}, "macro.fivetran_utils.max_bool": {"unique_id": "macro.fivetran_utils.max_bool", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "name": "max_bool", "macro_sql": "{% macro max_bool(boolean_field) -%}\n\n{{ adapter.dispatch('max_bool', 'fivetran_utils') (boolean_field) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__max_bool"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.795458}, "macro.fivetran_utils.default__max_bool": {"unique_id": "macro.fivetran_utils.default__max_bool", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "name": "default__max_bool", "macro_sql": "{% macro default__max_bool(boolean_field)  %}\n\n    bool_or( {{ boolean_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.795692}, "macro.fivetran_utils.snowflake__max_bool": {"unique_id": "macro.fivetran_utils.snowflake__max_bool", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "name": "snowflake__max_bool", "macro_sql": "{% macro snowflake__max_bool(boolean_field)  %}\n\n    max( {{ boolean_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7959192}, "macro.fivetran_utils.bigquery__max_bool": {"unique_id": "macro.fivetran_utils.bigquery__max_bool", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/max_bool.sql", "original_file_path": "macros/max_bool.sql", "name": "bigquery__max_bool", "macro_sql": "{% macro bigquery__max_bool(boolean_field)  %}\n\n    max( {{ boolean_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7961469}, "macro.fivetran_utils.calculated_fields": {"unique_id": "macro.fivetran_utils.calculated_fields", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/calculated_fields.sql", "original_file_path": "macros/calculated_fields.sql", "name": "calculated_fields", "macro_sql": "{% macro calculated_fields(variable) -%}\n\n{% if var(variable, none) %}\n    {% for field in var(variable) %}\n        , {{ field.transform_sql }} as {{ field.name }} \n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.79709}, "macro.fivetran_utils.seed_data_helper": {"unique_id": "macro.fivetran_utils.seed_data_helper", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/seed_data_helper.sql", "original_file_path": "macros/seed_data_helper.sql", "name": "seed_data_helper", "macro_sql": "{% macro seed_data_helper(seed_name, warehouses) %}\n\n{% if target.type in warehouses %}\n    {% for w in warehouses %}\n        {% if target.type == w %}\n            {{ return(ref(seed_name ~ \"_\" ~ w ~ \"\")) }}\n        {% endif %}\n    {% endfor %}\n{% else %}\n{{ return(ref(seed_name)) }}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.7984262}, "macro.fivetran_utils.fill_pass_through_columns": {"unique_id": "macro.fivetran_utils.fill_pass_through_columns", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/fill_pass_through_columns.sql", "original_file_path": "macros/fill_pass_through_columns.sql", "name": "fill_pass_through_columns", "macro_sql": "{% macro fill_pass_through_columns(pass_through_variable) %}\n\n{% if var(pass_through_variable) %}\n    {% for field in var(pass_through_variable) %}\n        {% if field.transform_sql %}\n            , {{ field.transform_sql }} as {{ field.alias if field.alias else field.name }}\n        {% else %}\n            , {{ field.alias if field.alias else field.name }}\n        {% endif %}\n    {% endfor %}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.799762}, "macro.fivetran_utils.string_agg": {"unique_id": "macro.fivetran_utils.string_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "name": "string_agg", "macro_sql": "{% macro string_agg(field_to_agg, delimiter) -%}\n\n{{ adapter.dispatch('string_agg', 'fivetran_utils') (field_to_agg, delimiter) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__string_agg"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.800714}, "macro.fivetran_utils.default__string_agg": {"unique_id": "macro.fivetran_utils.default__string_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "name": "default__string_agg", "macro_sql": "{% macro default__string_agg(field_to_agg, delimiter) %}\n    string_agg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8009799}, "macro.fivetran_utils.snowflake__string_agg": {"unique_id": "macro.fivetran_utils.snowflake__string_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "name": "snowflake__string_agg", "macro_sql": "{% macro snowflake__string_agg(field_to_agg, delimiter) %}\n    listagg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.801253}, "macro.fivetran_utils.redshift__string_agg": {"unique_id": "macro.fivetran_utils.redshift__string_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "name": "redshift__string_agg", "macro_sql": "{% macro redshift__string_agg(field_to_agg, delimiter) %}\n    listagg({{ field_to_agg }}, {{ delimiter }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.801504}, "macro.fivetran_utils.spark__string_agg": {"unique_id": "macro.fivetran_utils.spark__string_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/string_agg.sql", "original_file_path": "macros/string_agg.sql", "name": "spark__string_agg", "macro_sql": "{% macro spark__string_agg(field_to_agg, delimiter) %}\n    -- collect set will remove duplicates\n    replace(replace(replace(cast( collect_set({{ field_to_agg }}) as string), '[', ''), ']', ''), ', ', {{ delimiter }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.801985}, "macro.fivetran_utils.timestamp_diff": {"unique_id": "macro.fivetran_utils.timestamp_diff", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "name": "timestamp_diff", "macro_sql": "{% macro timestamp_diff(first_date, second_date, datepart) %}\n  {{ adapter.dispatch('timestamp_diff', 'fivetran_utils')(first_date, second_date, datepart) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__timestamp_diff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.806635}, "macro.fivetran_utils.default__timestamp_diff": {"unique_id": "macro.fivetran_utils.default__timestamp_diff", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "name": "default__timestamp_diff", "macro_sql": "{% macro default__timestamp_diff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.806952}, "macro.fivetran_utils.redshift__timestamp_diff": {"unique_id": "macro.fivetran_utils.redshift__timestamp_diff", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "name": "redshift__timestamp_diff", "macro_sql": "{% macro redshift__timestamp_diff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.807261}, "macro.fivetran_utils.bigquery__timestamp_diff": {"unique_id": "macro.fivetran_utils.bigquery__timestamp_diff", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "name": "bigquery__timestamp_diff", "macro_sql": "{% macro bigquery__timestamp_diff(first_date, second_date, datepart) %}\n\n    timestamp_diff(\n        {{second_date}},\n        {{first_date}},\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.807563}, "macro.fivetran_utils.postgres__timestamp_diff": {"unique_id": "macro.fivetran_utils.postgres__timestamp_diff", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_diff.sql", "original_file_path": "macros/timestamp_diff.sql", "name": "postgres__timestamp_diff", "macro_sql": "{% macro postgres__timestamp_diff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.810946}, "macro.fivetran_utils.try_cast": {"unique_id": "macro.fivetran_utils.try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "try_cast", "macro_sql": "{% macro try_cast(field, type) %}\n    {{ adapter.dispatch('try_cast', 'fivetran_utils') (field, type) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__try_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8123689}, "macro.fivetran_utils.default__safe_cast": {"unique_id": "macro.fivetran_utils.default__safe_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.812635}, "macro.fivetran_utils.redshift__try_cast": {"unique_id": "macro.fivetran_utils.redshift__try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "redshift__try_cast", "macro_sql": "{% macro redshift__try_cast(field, type) %}\n{%- if type == 'numeric' -%}\n\n    case\n        when trim({{field}}) ~ '^(0|[1-9][0-9]*)$' then trim({{field}})\n        else null\n    end::{{type}}\n\n{% else %}\n    {{ exceptions.raise_compiler_error(\n            \"non-numeric datatypes are not currently supported\") }}\n\n{% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.813157}, "macro.fivetran_utils.postgres__try_cast": {"unique_id": "macro.fivetran_utils.postgres__try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "postgres__try_cast", "macro_sql": "{% macro postgres__try_cast(field, type) %}\n{%- if type == 'numeric' -%}\n\n    case\n        when replace(cast({{field}} as varchar),cast(' ' as varchar),cast('' as varchar)) ~ '^(0|[1-9][0-9]*)$' \n        then replace(cast({{field}} as varchar),cast(' ' as varchar),cast('' as varchar))\n        else null\n    end::{{type}}\n\n{% else %}\n    {{ exceptions.raise_compiler_error(\n            \"non-numeric datatypes are not currently supported\") }}\n\n{% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.813688}, "macro.fivetran_utils.snowflake__try_cast": {"unique_id": "macro.fivetran_utils.snowflake__try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "snowflake__try_cast", "macro_sql": "{% macro snowflake__try_cast(field, type) %}\n    try_cast(cast({{field}} as varchar) as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8139362}, "macro.fivetran_utils.bigquery__try_cast": {"unique_id": "macro.fivetran_utils.bigquery__try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "bigquery__try_cast", "macro_sql": "{% macro bigquery__try_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.814177}, "macro.fivetran_utils.spark__try_cast": {"unique_id": "macro.fivetran_utils.spark__try_cast", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/try_cast.sql", "original_file_path": "macros/try_cast.sql", "name": "spark__try_cast", "macro_sql": "{% macro spark__try_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.814416}, "macro.fivetran_utils.source_relation": {"unique_id": "macro.fivetran_utils.source_relation", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/source_relation.sql", "original_file_path": "macros/source_relation.sql", "name": "source_relation", "macro_sql": "{% macro source_relation(union_schema_variable='union_schemas', union_database_variable='union_databases') -%}\n\n{{ adapter.dispatch('source_relation', 'fivetran_utils') (union_schema_variable, union_database_variable) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__source_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.815372}, "macro.fivetran_utils.default__source_relation": {"unique_id": "macro.fivetran_utils.default__source_relation", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/source_relation.sql", "original_file_path": "macros/source_relation.sql", "name": "default__source_relation", "macro_sql": "{% macro default__source_relation(union_schema_variable, union_database_variable) %}\n\n{% if var(union_schema_variable, none)  %}\n, case\n    {% for schema in var(union_schema_variable) %}\n    when lower(replace(replace(_dbt_source_relation,'\"',''),'`','')) like '%.{{ schema|lower }}.%' then '{{ schema|lower }}'\n    {% endfor %}\n  end as source_relation\n{% elif var(union_database_variable, none) %}\n, case\n    {% for database in var(union_database_variable) %}\n    when lower(replace(replace(_dbt_source_relation,'\"',''),'`','')) like '%{{ database|lower }}.%' then '{{ database|lower }}'\n    {% endfor %}\n  end as source_relation\n{% else %}\n, cast('' as {{ dbt_utils.type_string() }}) as source_relation\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.816433}, "macro.fivetran_utils.first_value": {"unique_id": "macro.fivetran_utils.first_value", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "name": "first_value", "macro_sql": "{% macro first_value(first_value_field, partition_field, order_by_field, order=\"asc\") -%}\n\n{{ adapter.dispatch('first_value', 'fivetran_utils') (first_value_field, partition_field, order_by_field, order) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__first_value"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.817371}, "macro.fivetran_utils.default__first_value": {"unique_id": "macro.fivetran_utils.default__first_value", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "name": "default__first_value", "macro_sql": "{% macro default__first_value(first_value_field, partition_field, order_by_field, order=\"asc\")  %}\n\n    first_value( {{ first_value_field }} ignore nulls ) over (partition by {{ partition_field }} order by {{ order_by_field }} {{ order }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.817756}, "macro.fivetran_utils.redshift__first_value": {"unique_id": "macro.fivetran_utils.redshift__first_value", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/first_value.sql", "original_file_path": "macros/first_value.sql", "name": "redshift__first_value", "macro_sql": "{% macro redshift__first_value(first_value_field, partition_field, order_by_field, order=\"asc\") %}\n\n    first_value( {{ first_value_field }} ignore nulls ) over (partition by {{ partition_field }} order by {{ order_by_field }} {{ order }} , {{ partition_field }} rows unbounded preceding )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.818174}, "macro.fivetran_utils.add_dbt_source_relation": {"unique_id": "macro.fivetran_utils.add_dbt_source_relation", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/add_dbt_source_relation.sql", "original_file_path": "macros/add_dbt_source_relation.sql", "name": "add_dbt_source_relation", "macro_sql": "{% macro add_dbt_source_relation() %}\n\n{% if var('union_schemas', none) or var('union_databases', none) %}\n, _dbt_source_relation\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8187761}, "macro.fivetran_utils.add_pass_through_columns": {"unique_id": "macro.fivetran_utils.add_pass_through_columns", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/add_pass_through_columns.sql", "original_file_path": "macros/add_pass_through_columns.sql", "name": "add_pass_through_columns", "macro_sql": "{% macro add_pass_through_columns(base_columns, pass_through_var) %}\n\n  {% if pass_through_var %}\n\n    {% for column in pass_through_var %}\n\n      {% if column.alias %}\n\n      {% do base_columns.append({ \"name\": column.name, \"alias\": column.alias, \"datatype\": column.datatype if column.datatype else dbt_utils.type_string()}) %}\n\n      {% else %}\n\n      {% do base_columns.append({ \"name\": column.name, \"datatype\": column.datatype if column.datatype else dbt_utils.type_string()}) %}\n        \n      {% endif %}\n\n    {% endfor %}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8203468}, "macro.fivetran_utils.union_relations": {"unique_id": "macro.fivetran_utils.union_relations", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/union_relations.sql", "original_file_path": "macros/union_relations.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, aliases=none, column_override=none, include=[], exclude=[], source_column_name=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n    {%- set source_column_name = source_column_name if source_column_name is not none else '_dbt_source_relation' -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ aliases[loop.index0] if aliases else relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.827134}, "macro.fivetran_utils.union_tables": {"unique_id": "macro.fivetran_utils.union_tables", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/union_relations.sql", "original_file_path": "macros/union_relations.sql", "name": "union_tables", "macro_sql": "{%- macro union_tables(tables, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_table') -%}\n\n    {%- do exceptions.warn(\"Warning: the `union_tables` macro is no longer supported and will be deprecated in a future release of dbt-utils. Use the `union_relations` macro instead\") -%}\n\n    {{ return(dbt_utils.union_relations(tables, column_override, include, exclude, source_column_name)) }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.827785}, "macro.fivetran_utils.snowflake_seed_data": {"unique_id": "macro.fivetran_utils.snowflake_seed_data", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/snowflake_seed_data.sql", "original_file_path": "macros/snowflake_seed_data.sql", "name": "snowflake_seed_data", "macro_sql": "{% macro snowflake_seed_data(seed_name) %}\n\n{% if target.type == 'snowflake' %}\n{{ return(ref(seed_name ~ '_snowflake')) }}\n{% else %}\n{{ return(ref(seed_name)) }}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.828604}, "macro.fivetran_utils.fill_staging_columns": {"unique_id": "macro.fivetran_utils.fill_staging_columns", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/fill_staging_columns.sql", "original_file_path": "macros/fill_staging_columns.sql", "name": "fill_staging_columns", "macro_sql": "{% macro fill_staging_columns(source_columns, staging_columns) -%}\n\n{%- set source_column_names = source_columns|map(attribute='name')|map('lower')|list -%}\n\n{%- for column in staging_columns %}\n    {% if column.name|lower in source_column_names -%}\n        {{ fivetran_utils.quote_column(column) }} as \n        {%- if 'alias' in column %} {{ column.alias }} {% else %} {{ fivetran_utils.quote_column(column) }} {%- endif -%}\n    {%- else -%}\n        cast(null as {{ column.datatype }})\n        {%- if 'alias' in column %} as {{ column.alias }} {% else %} as {{ fivetran_utils.quote_column(column) }} {% endif -%}\n    {%- endif -%}\n    {%- if not loop.last -%} , {% endif -%}\n{% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.quote_column"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8312142}, "macro.fivetran_utils.quote_column": {"unique_id": "macro.fivetran_utils.quote_column", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/fill_staging_columns.sql", "original_file_path": "macros/fill_staging_columns.sql", "name": "quote_column", "macro_sql": "{% macro quote_column(column) %}\n    {% if 'quote' in column %}\n        {% if column.quote %}\n            {% if target.type in ('bigquery', 'spark') %}\n            `{{ column.name }}`\n            {% elif target.type == 'snowflake' %}\n            \"{{ column.name | upper }}\"\n            {% else %}\n            \"{{ column.name }}\"\n            {% endif %}\n        {% else %}\n        {{ column.name }}\n        {% endif %}\n    {% else %}\n    {{ column.name }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.83224}, "macro.fivetran_utils.json_extract": {"unique_id": "macro.fivetran_utils.json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "json_extract", "macro_sql": "{% macro json_extract(string, string_path) -%}\n\n{{ adapter.dispatch('json_extract', 'fivetran_utils') (string, string_path) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__json_extract"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.83329}, "macro.fivetran_utils.default__json_extract": {"unique_id": "macro.fivetran_utils.default__json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "default__json_extract", "macro_sql": "{% macro default__json_extract(string, string_path) %}\n\n  json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} )\n \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.833584}, "macro.fivetran_utils.snowflake__json_extract": {"unique_id": "macro.fivetran_utils.snowflake__json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "snowflake__json_extract", "macro_sql": "{% macro snowflake__json_extract(string, string_path) %}\n\n  json_extract_path_text(try_parse_json( {{string}} ), {{ \"'\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.833874}, "macro.fivetran_utils.redshift__json_extract": {"unique_id": "macro.fivetran_utils.redshift__json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "redshift__json_extract", "macro_sql": "{% macro redshift__json_extract(string, string_path) %}\n\n  case when is_valid_json( {{string}} ) then json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} ) else null end\n \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.834199}, "macro.fivetran_utils.bigquery__json_extract": {"unique_id": "macro.fivetran_utils.bigquery__json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "bigquery__json_extract", "macro_sql": "{% macro bigquery__json_extract(string, string_path) %}\n\n  json_extract_scalar({{string}}, {{ \"'$.\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8344882}, "macro.fivetran_utils.postgres__json_extract": {"unique_id": "macro.fivetran_utils.postgres__json_extract", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "name": "postgres__json_extract", "macro_sql": "{% macro postgres__json_extract(string, string_path) %}\n\n  {{string}}::json->>{{\"'\" ~ string_path ~ \"'\" }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.83477}, "macro.fivetran_utils.collect_freshness": {"unique_id": "macro.fivetran_utils.collect_freshness", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/collect_freshness.sql", "original_file_path": "macros/collect_freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.836179}, "macro.fivetran_utils.default__collect_freshness": {"unique_id": "macro.fivetran_utils.default__collect_freshness", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/collect_freshness.sql", "original_file_path": "macros/collect_freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n\n  {%- set enabled_array = [] -%}\n  {% for node in graph.sources.values() %}\n    {% if node.identifier == source.identifier %}\n      {% if (node.meta['is_enabled'] | default(true)) %}\n        {%- do enabled_array.append(1) -%}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n  {% set is_enabled = (enabled_array != []) %}\n\n    select\n      {% if is_enabled %}\n      max({{ loaded_at_field }})\n      {% else %} \n      {{ current_timestamp() }} {% endif %} as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n\n    {% if is_enabled %}\n    from {{ source }}\n      {% if filter %}\n      where {{ filter }}\n      {% endif %}\n    {% endif %}\n\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.838038}, "macro.fivetran_utils.timestamp_add": {"unique_id": "macro.fivetran_utils.timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "timestamp_add", "macro_sql": "{% macro timestamp_add(datepart, interval, from_timestamp) -%}\n\n{{ adapter.dispatch('timestamp_add', 'fivetran_utils') (datepart, interval, from_timestamp) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.bigquery__timestamp_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.839221}, "macro.fivetran_utils.default__timestamp_add": {"unique_id": "macro.fivetran_utils.default__timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "default__timestamp_add", "macro_sql": "{% macro default__timestamp_add(datepart, interval, from_timestamp) %}\n\n    timestampadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8395278}, "macro.fivetran_utils.bigquery__timestamp_add": {"unique_id": "macro.fivetran_utils.bigquery__timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "bigquery__timestamp_add", "macro_sql": "{% macro bigquery__timestamp_add(datepart, interval, from_timestamp) %}\n\n        timestamp_add({{ from_timestamp }}, interval  {{ interval }} {{ datepart }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.84032}, "macro.fivetran_utils.redshift__timestamp_add": {"unique_id": "macro.fivetran_utils.redshift__timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "redshift__timestamp_add", "macro_sql": "{% macro redshift__timestamp_add(datepart, interval, from_timestamp) %}\n\n        dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8408802}, "macro.fivetran_utils.postgres__timestamp_add": {"unique_id": "macro.fivetran_utils.postgres__timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "postgres__timestamp_add", "macro_sql": "{% macro postgres__timestamp_add(datepart, interval, from_timestamp) %}\n\n    {{ from_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.841326}, "macro.fivetran_utils.spark__timestamp_add": {"unique_id": "macro.fivetran_utils.spark__timestamp_add", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/timestamp_add.sql", "original_file_path": "macros/timestamp_add.sql", "name": "spark__timestamp_add", "macro_sql": "{% macro spark__timestamp_add(datepart, interval, from_timestamp) %}\n\n    {{ dbt_utils.dateadd(datepart, interval, from_timestamp) }}\n        \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.841702}, "macro.fivetran_utils.ceiling": {"unique_id": "macro.fivetran_utils.ceiling", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "name": "ceiling", "macro_sql": "{% macro ceiling(num) -%}\n\n{{ adapter.dispatch('ceiling', 'fivetran_utils') (num) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__ceiling"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.842313}, "macro.fivetran_utils.default__ceiling": {"unique_id": "macro.fivetran_utils.default__ceiling", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "name": "default__ceiling", "macro_sql": "{% macro default__ceiling(num) %}\n    ceiling({{ num }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.842604}, "macro.fivetran_utils.snowflake__ceiling": {"unique_id": "macro.fivetran_utils.snowflake__ceiling", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/ceiling.sql", "original_file_path": "macros/ceiling.sql", "name": "snowflake__ceiling", "macro_sql": "{% macro snowflake__ceiling(num) %}\n    ceil({{ num }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8428009}, "macro.fivetran_utils.remove_prefix_from_columns": {"unique_id": "macro.fivetran_utils.remove_prefix_from_columns", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/remove_prefix_from_columns.sql", "original_file_path": "macros/remove_prefix_from_columns.sql", "name": "remove_prefix_from_columns", "macro_sql": "{% macro remove_prefix_from_columns(columns, prefix='', exclude=[]) %}\n\n        {%- for col in columns if col.name not in exclude -%}\n        {%- if col.name[:prefix|length]|lower == prefix -%}\n        {{ col.name }} as {{ col.name[prefix|length:] }}\n        {%- else -%}\n        {{ col.name }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n        {% endfor -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8442419}, "macro.fivetran_utils.union_data": {"unique_id": "macro.fivetran_utils.union_data", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/union_data.sql", "original_file_path": "macros/union_data.sql", "name": "union_data", "macro_sql": "{% macro union_data(table_identifier, database_variable, schema_variable, default_database, default_schema, default_variable, union_schema_variable='union_schemas', union_database_variable='union_databases') -%}\n\n{{ adapter.dispatch('union_data', 'fivetran_utils') (\n    table_identifier, \n    database_variable, \n    schema_variable, \n    default_database, \n    default_schema, \n    default_variable,\n    union_schema_variable,\n    union_database_variable\n    ) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__union_data"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.846207}, "macro.fivetran_utils.default__union_data": {"unique_id": "macro.fivetran_utils.default__union_data", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/union_data.sql", "original_file_path": "macros/union_data.sql", "name": "default__union_data", "macro_sql": "{% macro default__union_data(\n    table_identifier, \n    database_variable, \n    schema_variable, \n    default_database, \n    default_schema, \n    default_variable,\n    union_schema_variable,\n    union_database_variable\n    ) %}\n\n{% if var(union_schema_variable, none) %}\n\n    {% set relations = [] %}\n    \n    {% if var(union_schema_variable) is string %}\n    {% set trimmed = var(union_schema_variable)|trim('[')|trim(']') %}\n    {% set schemas = trimmed.split(',')|map('trim',\" \")|map('trim','\"')|map('trim',\"'\") %}\n    {% else %}\n    {% set schemas = var(union_schema_variable) %}\n    {% endif %}\n\n    {% for schema in var(union_schema_variable) %}\n\n    {% set relation=adapter.get_relation(\n        database=var(database_variable, default_database),\n        schema=schema,\n        identifier=table_identifier\n    ) -%}\n    \n    {% set relation_exists=relation is not none %}\n\n    {% if relation_exists %}\n\n    {% do relations.append(relation) %}\n    \n    {% endif %}\n\n    {% endfor %}\n\n    {{ dbt_utils.union_relations(relations) }}\n\n{% elif var(union_database_variable, none) %}\n\n    {% set relations = [] %}\n\n    {% for database in var(union_database_variable) %}\n\n    {% set relation=adapter.get_relation(\n        database=database,\n        schema=var(schema_variable, default_schema),\n        identifier=table_identifier\n    ) -%}\n\n    {% set relation_exists=relation is not none %}\n\n    {% if relation_exists %}\n\n    {% do relations.append(relation) %}\n    \n    {% endif %}\n\n    {% endfor %}\n\n    {{ dbt_utils.union_relations(relations) }}\n\n{% else %}\n\n    select * \n    from {{ var(default_variable) }}\n\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8495731}, "macro.fivetran_utils.dummy_coalesce_value": {"unique_id": "macro.fivetran_utils.dummy_coalesce_value", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/dummy_coalesce_value.sql", "original_file_path": "macros/dummy_coalesce_value.sql", "name": "dummy_coalesce_value", "macro_sql": "{% macro dummy_coalesce_value(column) %}\n\n{% set coalesce_value = {\n 'STRING': \"'DUMMY_STRING'\",\n 'BOOLEAN': 'null',\n 'INT': 999999999,\n 'FLOAT': 999999999.99,\n 'TIMESTAMP': 'cast(\"2099-12-31\" as timestamp)',\n 'DATE': 'cast(\"2099-12-31\" as date)',\n} %}\n\n{% if column.is_float() %}\n{{ return(coalesce_value['FLOAT']) }}\n\n{% elif column.is_numeric() %}\n{{ return(coalesce_value['INT']) }}\n\n{% elif column.is_string() %}\n{{ return(coalesce_value['STRING']) }}\n\n{% elif column.data_type|lower == 'boolean' %}\n{{ return(coalesce_value['BOOLEAN']) }}\n\n{% elif 'timestamp' in column.data_type|lower %}\n{{ return(coalesce_value['TIMESTAMP']) }}\n\n{% elif 'date' in column.data_type|lower %}\n{{ return(coalesce_value['DATE']) }}\n\n{% elif 'int' in column.data_type|lower %}\n{{ return(coalesce_value['INT']) }}\n\n{% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.852292}, "macro.fivetran_utils.array_agg": {"unique_id": "macro.fivetran_utils.array_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "name": "array_agg", "macro_sql": "{% macro array_agg(field_to_agg) -%}\n\n{{ adapter.dispatch('array_agg', 'fivetran_utils') (field_to_agg) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.fivetran_utils.default__array_agg"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.852913}, "macro.fivetran_utils.default__array_agg": {"unique_id": "macro.fivetran_utils.default__array_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "name": "default__array_agg", "macro_sql": "{% macro default__array_agg(field_to_agg) %}\n    array_agg({{ field_to_agg }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8531141}, "macro.fivetran_utils.redshift__array_agg": {"unique_id": "macro.fivetran_utils.redshift__array_agg", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/array_agg.sql", "original_file_path": "macros/array_agg.sql", "name": "redshift__array_agg", "macro_sql": "{% macro redshift__array_agg(field_to_agg) %}\n    listagg({{ field_to_agg }}, ',')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8533518}, "macro.fivetran_utils.empty_variable_warning": {"unique_id": "macro.fivetran_utils.empty_variable_warning", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/empty_variable_warning.sql", "original_file_path": "macros/empty_variable_warning.sql", "name": "empty_variable_warning", "macro_sql": "{% macro empty_variable_warning(variable, downstream_model) %}\n\n{% if not var(variable) %}\n{{ log(\n    \"\"\"\n    Warning: You have passed an empty list to the \"\"\" ~ variable ~ \"\"\".\n    As a result, you won't see the history of any columns in the \"\"\" ~ downstream_model ~ \"\"\" model.\n    \"\"\",\n    info=True\n) }}\n{% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8542001}, "macro.fivetran_utils.enabled_vars_one_true": {"unique_id": "macro.fivetran_utils.enabled_vars_one_true", "package_name": "fivetran_utils", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/fivetran_utils", "path": "macros/enabled_vars_one_true.sql", "original_file_path": "macros/enabled_vars_one_true.sql", "name": "enabled_vars_one_true", "macro_sql": "{% macro enabled_vars_one_true(vars) %}\n\n{% for v in vars %}\n    \n    {% if var(v, False) == True %}\n    {{ return(True) }}\n    {% endif %}\n\n{% endfor %}\n\n{{ return(False) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1655143060.8550668}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/usr/local/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}, "hubspot_source._fivetran_synced": {"unique_id": "hubspot_source._fivetran_synced", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "_fivetran_synced", "block_contents": "Timestamp of when Fivetran synced a record."}, "hubspot_source._fivetran_deleted": {"unique_id": "hubspot_source._fivetran_deleted", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "_fivetran_deleted", "block_contents": "Timestamp of when Fivetran marked a record as deleted."}, "hubspot_source.portal_id": {"unique_id": "hubspot_source.portal_id", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "portal_id", "block_contents": "The hub ID."}, "hubspot_source.is_deleted": {"unique_id": "hubspot_source.is_deleted", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "is_deleted", "block_contents": "Whether the record has been deleted in Hubspot."}, "hubspot_source.history_name": {"unique_id": "hubspot_source.history_name", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "history_name", "block_contents": "The name of the field being changed."}, "hubspot_source.history_source": {"unique_id": "hubspot_source.history_source", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "history_source", "block_contents": "The source (reason) of the change."}, "hubspot_source.history_source_id": {"unique_id": "hubspot_source.history_source_id", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "history_source_id", "block_contents": "The ID of the object that caused the change, if applicable."}, "hubspot_source.history_timestamp": {"unique_id": "hubspot_source.history_timestamp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "history_timestamp", "block_contents": "The timestamp the changed occurred."}, "hubspot_source.history_value": {"unique_id": "hubspot_source.history_value", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "history_value", "block_contents": "The new value of the field."}, "hubspot_source.email_event_browser": {"unique_id": "hubspot_source.email_event_browser", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "email_event_browser", "block_contents": "A JSON object representing the browser which serviced the event. Its comprised of the properties: 'name', 'family', 'producer', 'producer_url', 'type', 'url', 'version'."}, "hubspot_source.email_event_ip_address": {"unique_id": "hubspot_source.email_event_ip_address", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "email_event_ip_address", "block_contents": "The contact's IP address when the event occurred."}, "hubspot_source.email_event_location": {"unique_id": "hubspot_source.email_event_location", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "email_event_location", "block_contents": "A JSON object representing the location where the event occurred. It's comprised of the properties: 'city', 'state', 'country'."}, "hubspot_source.email_event_user_agent": {"unique_id": "hubspot_source.email_event_user_agent", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "docs.md", "original_file_path": "models/docs.md", "name": "email_event_user_agent", "block_contents": "The user agent responsible for the event, e.g. \u201cMozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36\u201d"}, "hubspot.bounces": {"unique_id": "hubspot.bounces", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "bounces", "block_contents": "The total number of bounce email events."}, "hubspot.clicks": {"unique_id": "hubspot.clicks", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "clicks", "block_contents": "The total number of click email events."}, "hubspot.deferrals": {"unique_id": "hubspot.deferrals", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "deferrals", "block_contents": "The total number of deferral email events."}, "hubspot.deliveries": {"unique_id": "hubspot.deliveries", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "deliveries", "block_contents": "The total number of delivery email events."}, "hubspot.drops": {"unique_id": "hubspot.drops", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "drops", "block_contents": "The total number of drop email events."}, "hubspot.forwards": {"unique_id": "hubspot.forwards", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "forwards", "block_contents": "The total number of forward email events."}, "hubspot.opens": {"unique_id": "hubspot.opens", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "opens", "block_contents": "The total number of open email events."}, "hubspot.prints": {"unique_id": "hubspot.prints", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "prints", "block_contents": "The total number of print email events."}, "hubspot.spam_reports": {"unique_id": "hubspot.spam_reports", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "spam_reports", "block_contents": "The total number of spam report email events."}, "hubspot.unsubscribes": {"unique_id": "hubspot.unsubscribes", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unsubscribes", "block_contents": "The total number of unsubscribe email events."}, "hubspot.unique_bounces": {"unique_id": "hubspot.unique_bounces", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_bounces", "block_contents": "The total number of unique email sends with a bounce email event."}, "hubspot.unique_clicks": {"unique_id": "hubspot.unique_clicks", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_clicks", "block_contents": "The total number of unique email sends with a click email event."}, "hubspot.unique_deferrals": {"unique_id": "hubspot.unique_deferrals", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_deferrals", "block_contents": "The total number of unique email sends with a deferral email event."}, "hubspot.unique_deliveries": {"unique_id": "hubspot.unique_deliveries", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_deliveries", "block_contents": "The total number of unique email sends with a delivery email event."}, "hubspot.unique_drops": {"unique_id": "hubspot.unique_drops", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_drops", "block_contents": "The total number of unique email sends with a drop email event."}, "hubspot.unique_forwards": {"unique_id": "hubspot.unique_forwards", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_forwards", "block_contents": "The total number of unique email sends with a forward email event."}, "hubspot.unique_opens": {"unique_id": "hubspot.unique_opens", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_opens", "block_contents": "The total number of unique email sends with a opens email event."}, "hubspot.unique_prints": {"unique_id": "hubspot.unique_prints", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_prints", "block_contents": "The total number of unique email sends with a print email event."}, "hubspot.unique_spam_reports": {"unique_id": "hubspot.unique_spam_reports", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_spam_reports", "block_contents": "The total number of unique email sends with a spam report email event."}, "hubspot.unique_unsubscribes": {"unique_id": "hubspot.unique_unsubscribes", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "unique_unsubscribes", "block_contents": "The total number of unique email sends with a unsubscribe email event."}, "hubspot.count_engagement_notes": {"unique_id": "hubspot.count_engagement_notes", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_notes", "block_contents": "The total number of related note engagements."}, "hubspot.count_engagement_tasks": {"unique_id": "hubspot.count_engagement_tasks", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_tasks", "block_contents": "The total number of related task engagements."}, "hubspot.count_engagement_calls": {"unique_id": "hubspot.count_engagement_calls", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_calls", "block_contents": "The total number of related call engagements."}, "hubspot.count_engagement_meetings": {"unique_id": "hubspot.count_engagement_meetings", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_meetings", "block_contents": "The total number of related meeting engagements."}, "hubspot.count_engagement_emails": {"unique_id": "hubspot.count_engagement_emails", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_emails", "block_contents": "The total number of related email engagements."}, "hubspot.count_engagement_incoming_emails": {"unique_id": "hubspot.count_engagement_incoming_emails", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_incoming_emails", "block_contents": "The total number of related incoming email engagements."}, "hubspot.count_engagement_forwarded_emails": {"unique_id": "hubspot.count_engagement_forwarded_emails", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "docs.md", "original_file_path": "models/docs.md", "name": "count_engagement_forwarded_emails", "block_contents": "The total number of related forwarded email engagements."}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {"seed.hubspot_integration_tests.contact_list_data_postgres": [{"raw_sql": "", "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "contact_list_data_postgres"], "unique_id": "seed.hubspot_integration_tests.contact_list_data_postgres", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "contact_list_data_postgres.csv", "original_file_path": "seeds/contact_list_data_postgres.csv", "name": "contact_list_data_postgres", "alias": "contact_list_data_postgres", "checksum": {"name": "sha256", "checksum": "349152bb0b8810fbbf890a9094250c04efc80151a4a8e30f7f3c75cc1ffad2c2"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type == 'postgres' else false }}"}, "created_at": 1655143061.321955}], "seed.hubspot_integration_tests.email_event_sent_data_postgres": [{"raw_sql": "", "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_sent_data_postgres"], "unique_id": "seed.hubspot_integration_tests.email_event_sent_data_postgres", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_sent_data_postgres.csv", "original_file_path": "seeds/email_event_sent_data_postgres.csv", "name": "email_event_sent_data_postgres", "alias": "email_event_sent_data_postgres", "checksum": {"name": "sha256", "checksum": "bec8cbb3459b0a77ce502feca62d013b92cdff4a0fc86e5187368f0c42a32ef0"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type == 'postgres' else false }}"}, "created_at": 1655143061.3346791}], "seed.hubspot_integration_tests.email_event_sent_data_snowflake": [{"raw_sql": "", "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_sent_data_snowflake"], "unique_id": "seed.hubspot_integration_tests.email_event_sent_data_snowflake", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_sent_data_snowflake.csv", "original_file_path": "seeds/email_event_sent_data_snowflake.csv", "name": "email_event_sent_data_snowflake", "alias": "email_event_sent_data_snowflake", "checksum": {"name": "sha256", "checksum": "f43f083762c62ba75aea7bfcc95716a05ffdd855c2fdf782da08e39330305e6b"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type == 'snowflake' else false }}"}, "created_at": 1655143061.3685381}], "seed.hubspot_integration_tests.email_event_dropped_data_snowflake": [{"raw_sql": "", "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_dropped_data_snowflake"], "unique_id": "seed.hubspot_integration_tests.email_event_dropped_data_snowflake", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_dropped_data_snowflake.csv", "original_file_path": "seeds/email_event_dropped_data_snowflake.csv", "name": "email_event_dropped_data_snowflake", "alias": "email_event_dropped_data_snowflake", "checksum": {"name": "sha256", "checksum": "6632fecd0168baf628a16fbc0bb0197cf5f808f1f0ad525842f9eae5e16473aa"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type == 'snowflake' else false }}"}, "created_at": 1655143061.3843682}], "seed.hubspot_integration_tests.email_event_dropped_data_postgres": [{"raw_sql": "", "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "quote_columns": false, "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test", "fqn": ["hubspot_integration_tests", "email_event_dropped_data_postgres"], "unique_id": "seed.hubspot_integration_tests.email_event_dropped_data_postgres", "package_name": "hubspot_integration_tests", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests", "path": "email_event_dropped_data_postgres.csv", "original_file_path": "seeds/email_event_dropped_data_postgres.csv", "name": "email_event_dropped_data_postgres", "alias": "email_event_dropped_data_postgres", "checksum": {"name": "sha256", "checksum": "3e8f7f2d3d8e92d8b55b396fbed414d787dc147a776e03b633f229875f094260"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"quote_columns": "{{ true if target.type == 'redshift' else false }}", "enabled": "{{ true if target.type == 'postgres' else false }}"}, "created_at": 1655143061.385785}], "model.hubspot_source.stg_hubspot__ticket_contact": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_contact_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_contact_tmp')),\n                staging_columns=get_ticket_contact_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        ticket_id,\n        contact_id\n\n    from macro\n\n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_contact_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_contact"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_contact", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_contact.sql", "original_file_path": "models/stg_hubspot__ticket_contact.sql", "name": "stg_hubspot__ticket_contact", "alias": "stg_hubspot__ticket_contact", "checksum": {"name": "sha256", "checksum": "8b4ea45115ac9528415e6e70165c58a88ecaada0c684632e4a8437ca43f87081"}, "tags": [], "refs": [["stg_hubspot__ticket_contact_tmp"], ["stg_hubspot__ticket_contact_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.558539}], "model.hubspot_source.stg_hubspot__ticket_pipeline": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_pipeline_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_pipeline_tmp')),\n                staging_columns=get_ticket_pipeline_columns()\n            )\n        }}\n\n    from base\n),\n\nfinal as (\n\n    select\n        cast(pipeline_id as {{ dbt_utils.type_int() }} ) as ticket_pipeline_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        display_order,\n        label as pipeline_label,\n        object_type_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_pipeline_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.type_int"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_pipeline"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_pipeline", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_pipeline.sql", "original_file_path": "models/stg_hubspot__ticket_pipeline.sql", "name": "stg_hubspot__ticket_pipeline", "alias": "stg_hubspot__ticket_pipeline", "checksum": {"name": "sha256", "checksum": "7d5bb602ccb8e3c291d9591de97fe4b5bfcf288d4f2c3f1f2165e33506e597c9"}, "tags": [], "refs": [["stg_hubspot__ticket_pipeline_tmp"], ["stg_hubspot__ticket_pipeline_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.691355}], "model.hubspot_source.stg_hubspot__ticket_deal": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_deal_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_deal_tmp')),\n                staging_columns=get_ticket_deal_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        ticket_id,\n        deal_id\n\n    from macro\n\n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_deal_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_deal"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_deal", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_deal.sql", "original_file_path": "models/stg_hubspot__ticket_deal.sql", "name": "stg_hubspot__ticket_deal", "alias": "stg_hubspot__ticket_deal", "checksum": {"name": "sha256", "checksum": "3619012836ee6540ec7bc0f8a6f8c36b4866eebadaaf15443b6477978a47a30c"}, "tags": [], "refs": [["stg_hubspot__ticket_deal_tmp"], ["stg_hubspot__ticket_deal_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.772884}], "model.hubspot_source.stg_hubspot__ticket_engagement": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_engagement_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_engagement_tmp')),\n                staging_columns=get_ticket_engagement_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        ticket_id,\n        engagement_id\n\n    from macro\n\n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_engagement_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_engagement"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_engagement", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_engagement.sql", "original_file_path": "models/stg_hubspot__ticket_engagement.sql", "name": "stg_hubspot__ticket_engagement", "alias": "stg_hubspot__ticket_engagement", "checksum": {"name": "sha256", "checksum": "80a21d05bc43aae084adc9211f637bb29c7cab32359d7e1b70643895c67f8d2b"}, "tags": [], "refs": [["stg_hubspot__ticket_engagement_tmp"], ["stg_hubspot__ticket_engagement_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.789686}], "model.hubspot_source.stg_hubspot__ticket_pipeline_stage": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_pipeline_stage_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_pipeline_stage_tmp')),\n                staging_columns=get_ticket_pipeline_stage_columns()\n            )\n        }}\n\n    from base\n),\n\nfinal as (\n\n    select\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        display_order,\n        is_closed,\n        label as pipeline_stage_label,\n        cast(pipeline_id as {{ dbt_utils.type_int() }} ) as ticket_pipeline_id,\n        cast(stage_id as {{ dbt_utils.type_int() }} ) as ticket_pipeline_stage_id,\n        ticket_state\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_pipeline_stage_columns", "macro.fivetran_utils.fill_staging_columns", "macro.dbt_utils.type_int"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_pipeline_stage"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_pipeline_stage", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_pipeline_stage.sql", "original_file_path": "models/stg_hubspot__ticket_pipeline_stage.sql", "name": "stg_hubspot__ticket_pipeline_stage", "alias": "stg_hubspot__ticket_pipeline_stage", "checksum": {"name": "sha256", "checksum": "65699f68036cde9b656bfeee2d67138411734270b81bac2d0e5319ed4124cfe0"}, "tags": [], "refs": [["stg_hubspot__ticket_pipeline_stage_tmp"], ["stg_hubspot__ticket_pipeline_stage_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.7974348}], "model.hubspot_source.stg_hubspot__contact_merge_audit": [{"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_merge_audit_enabled'])) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__contact_merge_audit_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__contact_merge_audit_tmp')),\n                staging_columns=get_contact_merge_audit_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        canonical_vid,\n        contact_id,\n        entity_id,\n        first_name,\n        last_name,\n        num_properties_moved,\n        {% if target.type == 'redshift' %}\n        \"timestamp\"\n        {% else %} \n        timestamp {% endif %}\n        as timestamp_at,\n        user_id,\n        vid_to_merge,\n        _fivetran_synced\n    from macro\n    \n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars", "macro.hubspot_source.get_contact_merge_audit_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__contact_merge_audit"], "unique_id": "model.hubspot_source.stg_hubspot__contact_merge_audit", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__contact_merge_audit.sql", "original_file_path": "models/stg_hubspot__contact_merge_audit.sql", "name": "stg_hubspot__contact_merge_audit", "alias": "stg_hubspot__contact_merge_audit", "checksum": {"name": "sha256", "checksum": "8bd751735d98a3d08762ca3bd79e9ff9b756d7fa26b84e97b1974ba8cd6e98df"}, "tags": [], "refs": [["stg_hubspot__contact_merge_audit_tmp"], ["stg_hubspot__contact_merge_audit_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__contact.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.886317}], "model.hubspot_source.stg_hubspot__ticket_company": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_company_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_company_tmp')),\n                staging_columns=get_ticket_company_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        ticket_id,\n        company_id\n\n    from macro\n\n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_company_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_company"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_company", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_company.sql", "original_file_path": "models/stg_hubspot__ticket_company.sql", "name": "stg_hubspot__ticket_company", "alias": "stg_hubspot__ticket_company", "checksum": {"name": "sha256", "checksum": "546903116d5a8e4505345c48c4eba23b6126c4d0ebeba3bb936db69dce2b5395"}, "tags": [], "refs": [["stg_hubspot__ticket_company_tmp"], ["stg_hubspot__ticket_company_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.899292}], "model.hubspot_source.stg_hubspot__ticket_property_history": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_property_history_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_property_history_tmp')),\n                staging_columns=get_ticket_property_history_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        _fivetran_synced,\n        ticket_id,\n        name as field_name,\n        source as change_source,\n        source_id as change_source_id,\n        timestamp_instant as change_timestamp,\n        value as new_value\n\n    from macro\n\n)\n\nselect *\nfrom fields", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_property_history_columns", "macro.fivetran_utils.fill_staging_columns"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket_property_history"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_property_history", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket_property_history.sql", "original_file_path": "models/stg_hubspot__ticket_property_history.sql", "name": "stg_hubspot__ticket_property_history", "alias": "stg_hubspot__ticket_property_history", "checksum": {"name": "sha256", "checksum": "0d94a7503e79169b585536da66cf8c8c2c138f0aa769ff800e147392c5dadb5a"}, "tags": [], "refs": [["stg_hubspot__ticket_property_history_tmp"], ["stg_hubspot__ticket_property_history_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.938169}], "model.hubspot_source.stg_hubspot__ticket": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_hubspot__ticket_tmp') }}\n\n), macro as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_tmp')),\n                staging_columns=get_ticket_columns()\n            )\n        }}\n    from base\n\n), fields as (\n\n    select\n        id as ticket_id,\n\n{% if var('hubspot__pass_through_all_columns', false) %}\n        -- just pass everything through\n        {{ \n            fivetran_utils.remove_prefix_from_columns(\n                columns=adapter.get_columns_in_relation(ref('stg_hubspot__ticket_tmp')), \n                prefix='property_', exclude=['id']) \n        }}\n    from base\n\n{% else %}\n        -- just default columns + explicitly configured passthrough columns\n        _fivetran_synced,\n        is_deleted,\n        property_closed_date as closed_at,\n        property_createdate as created_at,\n        property_first_agent_reply_date as first_agent_reply_at,\n        property_hs_pipeline as ticket_pipeline_id,\n        property_hs_pipeline_stage as ticket_pipeline_stage_id,\n        property_hs_ticket_category as ticket_category,\n        property_hs_ticket_priority as ticket_priority,\n        property_hubspot_owner_id as owner_id,\n        property_subject as ticket_subject,\n        property_content as ticket_content\n\n        --The below macro adds the fields defined within your hubspot__ticket_pass_through_columns variable into the staging model\n        {{ fivetran_utils.fill_pass_through_columns('hubspot__ticket_pass_through_columns') }}\n\n        -- The below macro add the ability to create calculated fields using the hubspot__ticket_calculated_fields variable.\n        {{ fivetran_utils.calculated_fields('hubspot__ticket_calculated_fields') }}\n        \n    from macro\n{% endif %}\n\n)\n\nselect *\nfrom fields\nwhere not coalesce(is_deleted, false)", "resource_type": "model", "depends_on": {"macros": ["macro.hubspot_source.get_ticket_columns", "macro.fivetran_utils.fill_staging_columns", "macro.fivetran_utils.fill_pass_through_columns", "macro.fivetran_utils.calculated_fields"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "stg_hubspot__ticket"], "unique_id": "model.hubspot_source.stg_hubspot__ticket", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "stg_hubspot__ticket.sql", "original_file_path": "models/stg_hubspot__ticket.sql", "name": "stg_hubspot__ticket", "alias": "stg_hubspot__ticket", "checksum": {"name": "sha256", "checksum": "e346495b3b0e7a9e5b66ddf31a34363b4430a064d13c70fbc260f6177a72420a"}, "tags": [], "refs": [["stg_hubspot__ticket_tmp"], ["stg_hubspot__ticket_tmp"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "hubspot_source://models/stg_hubspot__ticket.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143061.9727218}], "model.hubspot_source.stg_hubspot__ticket_company_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket_company') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_company_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_company_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_company_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_company_tmp.sql", "name": "stg_hubspot__ticket_company_tmp", "alias": "stg_hubspot__ticket_company_tmp", "checksum": {"name": "sha256", "checksum": "ab866a39ca7843eb128425f98bca66a6e8242dd2f5fe84af179d68fcab7d5ac4"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_company"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.0487008}], "model.hubspot_source.stg_hubspot__ticket_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_tmp.sql", "name": "stg_hubspot__ticket_tmp", "alias": "stg_hubspot__ticket_tmp", "checksum": {"name": "sha256", "checksum": "dbdffdb858fa36e96eebbd51cf045349e7681163d8b5e8c54cc120b72a77a56b"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.0894}], "model.hubspot_source.stg_hubspot__ticket_property_history_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket_property_history') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_property_history_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_property_history_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_property_history_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_property_history_tmp.sql", "name": "stg_hubspot__ticket_property_history_tmp", "alias": "stg_hubspot__ticket_property_history_tmp", "checksum": {"name": "sha256", "checksum": "853d46ebcf3774eb8c899e344655ece1ee9aec1495b5487e45a78ae921d95af8"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_property_history"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.094214}], "model.hubspot_source.stg_hubspot__ticket_pipeline_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nselect * \nfrom {{ var('ticket_pipeline') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_pipeline_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_pipeline_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_pipeline_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_pipeline_tmp.sql", "name": "stg_hubspot__ticket_pipeline_tmp", "alias": "stg_hubspot__ticket_pipeline_tmp", "checksum": {"name": "sha256", "checksum": "6d288825ed33116c29e43605b52be8b6d49c182536ca3830dcc034653b74e359"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_pipeline"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.098677}], "model.hubspot_source.stg_hubspot__ticket_contact_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket_contact') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_contact_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_contact_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_contact_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_contact_tmp.sql", "name": "stg_hubspot__ticket_contact_tmp", "alias": "stg_hubspot__ticket_contact_tmp", "checksum": {"name": "sha256", "checksum": "f9f143f93f0b5a0a431686e75ea785ee7ca7454287c9722ac1f7107e35539595"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_contact"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.122147}], "model.hubspot_source.stg_hubspot__contact_merge_audit_tmp": [{"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_merge_audit_enabled'])) }}\n\nselect *\nfrom {{ var('contact_merge_audit') }}", "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__contact_merge_audit_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__contact_merge_audit_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__contact_merge_audit_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__contact_merge_audit_tmp.sql", "name": "stg_hubspot__contact_merge_audit_tmp", "alias": "stg_hubspot__contact_merge_audit_tmp", "checksum": {"name": "sha256", "checksum": "e4c90596f9d02c0ea5101ebf96a310534b6e21bfa6268340d2287f3a036795e8"}, "tags": [], "refs": [["contact_merge_audit_data"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.1320179}], "model.hubspot_source.stg_hubspot__ticket_engagement_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket_engagement') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_engagement_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_engagement_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_engagement_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_engagement_tmp.sql", "name": "stg_hubspot__ticket_engagement_tmp", "alias": "stg_hubspot__ticket_engagement_tmp", "checksum": {"name": "sha256", "checksum": "ca941bf35a2fe42b308d809bc5742bfa83198620fb031bcc8f20f09163efe38e"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_engagement"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.2031841}], "model.hubspot_source.stg_hubspot__ticket_pipeline_stage_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', False)) }}\n\nselect * \nfrom {{ var('ticket_pipeline_stage') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_pipeline_stage_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_pipeline_stage_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_pipeline_stage_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_pipeline_stage_tmp.sql", "name": "stg_hubspot__ticket_pipeline_stage_tmp", "alias": "stg_hubspot__ticket_pipeline_stage_tmp", "checksum": {"name": "sha256", "checksum": "cb25ff2d6490eaf08d7c136559ce3cc8eaf04bc27005c99c2b3b0997ad6b67cd"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_pipeline_stage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.217796}], "model.hubspot_source.stg_hubspot__ticket_deal_tmp": [{"raw_sql": "{{ config(enabled=var('hubspot_service_enabled', True)) }}\n\nselect *\nfrom {{ var('ticket_deal') }}", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "stg_hubspot", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_stg_hubspot", "fqn": ["hubspot_source", "tmp", "stg_hubspot__ticket_deal_tmp"], "unique_id": "model.hubspot_source.stg_hubspot__ticket_deal_tmp", "package_name": "hubspot_source", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot_source", "path": "tmp/stg_hubspot__ticket_deal_tmp.sql", "original_file_path": "models/tmp/stg_hubspot__ticket_deal_tmp.sql", "name": "stg_hubspot__ticket_deal_tmp", "alias": "stg_hubspot__ticket_deal_tmp", "checksum": {"name": "sha256", "checksum": "294e6e8090e0238cf87a927a3e95b0a7f7de7255a4e6a80c66ad8227181a8a3e"}, "tags": [], "refs": [], "sources": [["hubspot", "ticket_deal"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "stg_hubspot", "enabled": false}, "created_at": 1655143062.251105}], "model.hubspot.int_hubspot__contact_merge_adjust": [{"raw_sql": "{{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_enabled', 'hubspot_contact_merge_audit_enabled'])) }}\n\nwith contacts as (\n\n    select *\n    from {{ var('contact') }}\n\n), contact_merge_audit as (\n    select *\n    from {{ var('contact_merge_audit') }}\n\n), contact_merge_removal as (\n    select \n        contacts.*\n    from contacts\n    \n    left join contact_merge_audit\n        on contacts.contact_id = contact_merge_audit.vid_to_merge\n    \n    where contact_merge_audit.vid_to_merge is null\n)\n\nselect *\nfrom contact_merge_removal", "resource_type": "model", "depends_on": {"macros": ["macro.fivetran_utils.enabled_vars"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "hubspot", "database": null, "tags": [], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "dbt-package-testing", "schema": "hubspot_integration_test_hubspot", "fqn": ["hubspot", "marketing", "intermediate", "int_hubspot__contact_merge_adjust"], "unique_id": "model.hubspot.int_hubspot__contact_merge_adjust", "package_name": "hubspot", "root_path": "/Users/sheri.nguyen/dbt-packages/hubspot/dbt_hubspot/integration_tests/dbt_packages/hubspot", "path": "marketing/intermediate/int_hubspot__contact_merge_adjust.sql", "original_file_path": "models/marketing/intermediate/int_hubspot__contact_merge_adjust.sql", "name": "int_hubspot__contact_merge_adjust", "alias": "int_hubspot__contact_merge_adjust", "checksum": {"name": "sha256", "checksum": "78f2fe13a1aefc977c705df993089a9f05371e9ac4d89abb6492dc982ea4317b"}, "tags": [], "refs": [["stg_hubspot__contact"], ["stg_hubspot__contact_merge_audit"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "schema": "hubspot", "enabled": false}, "created_at": 1655143062.4547899}]}, "parent_map": {"seed.hubspot_integration_tests.email_event_delivered_data": [], "seed.hubspot_integration_tests.email_event_status_change_data": [], "seed.hubspot_integration_tests.engagement_deal_data": [], "seed.hubspot_integration_tests.deal_stage_data": [], "seed.hubspot_integration_tests.email_campaign_data": [], "seed.hubspot_integration_tests.engagement_call_data": [], "seed.hubspot_integration_tests.contact_merge_audit_data": [], "seed.hubspot_integration_tests.email_event_print_data": [], "seed.hubspot_integration_tests.email_event_spam_report_data": [], "seed.hubspot_integration_tests.contact_list_data": [], "seed.hubspot_integration_tests.email_event_click_data": [], "seed.hubspot_integration_tests.email_event_deferred_data": [], "seed.hubspot_integration_tests.email_event_open_data": [], "seed.hubspot_integration_tests.company_property_history_data": [], "seed.hubspot_integration_tests.engagement_email_data": [], "seed.hubspot_integration_tests.deal_data": [], "seed.hubspot_integration_tests.engagement_note_data": [], "seed.hubspot_integration_tests.deal_pipeline_data": [], "seed.hubspot_integration_tests.email_event_data": [], "seed.hubspot_integration_tests.engagement_data": [], "seed.hubspot_integration_tests.email_event_dropped_data": [], "seed.hubspot_integration_tests.owner_data": [], "seed.hubspot_integration_tests.engagement_meeting_data": [], "seed.hubspot_integration_tests.email_event_forward_data": [], "seed.hubspot_integration_tests.deal_pipeline_stage_data": [], "seed.hubspot_integration_tests.company_data": [], "seed.hubspot_integration_tests.deal_contact_data": [], "seed.hubspot_integration_tests.contact_list_member_data": [], "seed.hubspot_integration_tests.contact_property_history_data": [], "seed.hubspot_integration_tests.deal_property_history_data": [], "seed.hubspot_integration_tests.email_event_bounce_data": [], "seed.hubspot_integration_tests.engagement_contact_data": [], "seed.hubspot_integration_tests.email_event_sent_data": [], "seed.hubspot_integration_tests.contact_data": [], "seed.hubspot_integration_tests.deal_company_data": [], "seed.hubspot_integration_tests.engagement_task_data": [], "seed.hubspot_integration_tests.engagement_company_data": [], "model.hubspot_source.stg_hubspot__engagement_task": ["model.hubspot_source.stg_hubspot__engagement_task_tmp", "model.hubspot_source.stg_hubspot__engagement_task_tmp"], "model.hubspot_source.stg_hubspot__engagement_deal": ["model.hubspot_source.stg_hubspot__engagement_deal_tmp", "model.hubspot_source.stg_hubspot__engagement_deal_tmp"], "model.hubspot_source.stg_hubspot__company_property_history": ["model.hubspot_source.stg_hubspot__company_property_history_tmp", "model.hubspot_source.stg_hubspot__company_property_history_tmp"], "model.hubspot_source.stg_hubspot__email_event_delivered": ["model.hubspot_source.stg_hubspot__email_event_delivered_tmp", "model.hubspot_source.stg_hubspot__email_event_delivered_tmp"], "model.hubspot_source.stg_hubspot__owner": ["model.hubspot_source.stg_hubspot__owner_tmp", "model.hubspot_source.stg_hubspot__owner_tmp"], "model.hubspot_source.stg_hubspot__email_event": ["model.hubspot_source.stg_hubspot__email_event_tmp", "model.hubspot_source.stg_hubspot__email_event_tmp"], "model.hubspot_source.stg_hubspot__engagement_meeting": ["model.hubspot_source.stg_hubspot__engagement_meeting_tmp", "model.hubspot_source.stg_hubspot__engagement_meeting_tmp"], "model.hubspot_source.stg_hubspot__engagement_email": ["model.hubspot_source.stg_hubspot__engagement_email_tmp", "model.hubspot_source.stg_hubspot__engagement_email_tmp"], "model.hubspot_source.stg_hubspot__email_event_status_change": ["model.hubspot_source.stg_hubspot__email_event_status_change_tmp", "model.hubspot_source.stg_hubspot__email_event_status_change_tmp"], "model.hubspot_source.stg_hubspot__contact_list_member": ["model.hubspot_source.stg_hubspot__contact_list_member_tmp", "model.hubspot_source.stg_hubspot__contact_list_member_tmp"], "model.hubspot_source.stg_hubspot__contact": ["model.hubspot_source.stg_hubspot__contact_tmp", "model.hubspot_source.stg_hubspot__contact_tmp"], "model.hubspot_source.stg_hubspot__deal": ["model.hubspot_source.stg_hubspot__deal_tmp", "model.hubspot_source.stg_hubspot__deal_tmp"], "model.hubspot_source.stg_hubspot__deal_pipeline": ["model.hubspot_source.stg_hubspot__deal_pipeline_tmp", "model.hubspot_source.stg_hubspot__deal_pipeline_tmp"], "model.hubspot_source.stg_hubspot__deal_company": ["model.hubspot_source.stg_hubspot__deal_company_tmp", "model.hubspot_source.stg_hubspot__deal_company_tmp"], "model.hubspot_source.stg_hubspot__engagement_note": ["model.hubspot_source.stg_hubspot__engagement_note_tmp", "model.hubspot_source.stg_hubspot__engagement_note_tmp"], "model.hubspot_source.stg_hubspot__engagement_contact": ["model.hubspot_source.stg_hubspot__engagement_contact_tmp", "model.hubspot_source.stg_hubspot__engagement_contact_tmp"], "model.hubspot_source.stg_hubspot__contact_list": ["model.hubspot_source.stg_hubspot__contact_list_tmp", "model.hubspot_source.stg_hubspot__contact_list_tmp"], "model.hubspot_source.stg_hubspot__email_event_spam_report": ["model.hubspot_source.stg_hubspot__email_event_spam_report_tmp", "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp"], "model.hubspot_source.stg_hubspot__deal_pipeline_stage": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp", "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp"], "model.hubspot_source.stg_hubspot__email_event_dropped": ["model.hubspot_source.stg_hubspot__email_event_dropped_tmp", "model.hubspot_source.stg_hubspot__email_event_dropped_tmp"], "model.hubspot_source.stg_hubspot__deal_stage": ["model.hubspot_source.stg_hubspot__deal_stage_tmp", "model.hubspot_source.stg_hubspot__deal_stage_tmp"], "model.hubspot_source.stg_hubspot__deal_property_history": ["model.hubspot_source.stg_hubspot__deal_property_history_tmp", "model.hubspot_source.stg_hubspot__deal_property_history_tmp"], "model.hubspot_source.stg_hubspot__email_event_forward": ["model.hubspot_source.stg_hubspot__email_event_forward_tmp", "model.hubspot_source.stg_hubspot__email_event_forward_tmp"], "model.hubspot_source.stg_hubspot__email_event_bounce": ["model.hubspot_source.stg_hubspot__email_event_bounce_tmp", "model.hubspot_source.stg_hubspot__email_event_bounce_tmp"], "model.hubspot_source.stg_hubspot__engagement_company": ["model.hubspot_source.stg_hubspot__engagement_company_tmp", "model.hubspot_source.stg_hubspot__engagement_company_tmp"], "model.hubspot_source.stg_hubspot__email_event_deferred": ["model.hubspot_source.stg_hubspot__email_event_deferred_tmp", "model.hubspot_source.stg_hubspot__email_event_deferred_tmp"], "model.hubspot_source.stg_hubspot__company": ["model.hubspot_source.stg_hubspot__company_tmp", "model.hubspot_source.stg_hubspot__company_tmp"], "model.hubspot_source.stg_hubspot__deal_contact": ["model.hubspot_source.stg_hubspot__deal_contact_tmp", "model.hubspot_source.stg_hubspot__deal_contact_tmp"], "model.hubspot_source.stg_hubspot__email_event_click": ["model.hubspot_source.stg_hubspot__email_event_click_tmp", "model.hubspot_source.stg_hubspot__email_event_click_tmp"], "model.hubspot_source.stg_hubspot__engagement_call": ["model.hubspot_source.stg_hubspot__engagement_call_tmp", "model.hubspot_source.stg_hubspot__engagement_call_tmp"], "model.hubspot_source.stg_hubspot__engagement": ["model.hubspot_source.stg_hubspot__engagement_tmp", "model.hubspot_source.stg_hubspot__engagement_tmp"], "model.hubspot_source.stg_hubspot__email_campaign": ["model.hubspot_source.stg_hubspot__email_campaign_tmp", "model.hubspot_source.stg_hubspot__email_campaign_tmp"], "model.hubspot_source.stg_hubspot__email_event_print": ["model.hubspot_source.stg_hubspot__email_event_print_tmp", "model.hubspot_source.stg_hubspot__email_event_print_tmp"], "model.hubspot_source.stg_hubspot__contact_property_history": ["model.hubspot_source.stg_hubspot__contact_property_history_tmp", "model.hubspot_source.stg_hubspot__contact_property_history_tmp"], "model.hubspot_source.stg_hubspot__email_event_open": ["model.hubspot_source.stg_hubspot__email_event_open_tmp", "model.hubspot_source.stg_hubspot__email_event_open_tmp"], "model.hubspot_source.stg_hubspot__email_event_sent": ["model.hubspot_source.stg_hubspot__email_event_sent_tmp", "model.hubspot_source.stg_hubspot__email_event_sent_tmp"], "model.hubspot_source.stg_hubspot__contact_property_history_tmp": ["seed.hubspot_integration_tests.contact_property_history_data"], "model.hubspot_source.stg_hubspot__email_event_dropped_tmp": ["seed.hubspot_integration_tests.email_event_dropped_data"], "model.hubspot_source.stg_hubspot__email_event_sent_tmp": ["seed.hubspot_integration_tests.email_event_sent_data"], "model.hubspot_source.stg_hubspot__deal_tmp": ["seed.hubspot_integration_tests.deal_data"], "model.hubspot_source.stg_hubspot__deal_contact_tmp": ["seed.hubspot_integration_tests.deal_contact_data"], "model.hubspot_source.stg_hubspot__contact_list_member_tmp": ["seed.hubspot_integration_tests.contact_list_member_data"], "model.hubspot_source.stg_hubspot__owner_tmp": ["seed.hubspot_integration_tests.owner_data"], "model.hubspot_source.stg_hubspot__deal_stage_tmp": ["seed.hubspot_integration_tests.deal_stage_data"], "model.hubspot_source.stg_hubspot__deal_pipeline_tmp": ["seed.hubspot_integration_tests.deal_pipeline_data"], "model.hubspot_source.stg_hubspot__engagement_company_tmp": ["seed.hubspot_integration_tests.engagement_company_data"], "model.hubspot_source.stg_hubspot__contact_tmp": ["seed.hubspot_integration_tests.contact_data"], "model.hubspot_source.stg_hubspot__email_event_status_change_tmp": ["seed.hubspot_integration_tests.email_event_status_change_data"], "model.hubspot_source.stg_hubspot__engagement_note_tmp": ["seed.hubspot_integration_tests.engagement_note_data"], "model.hubspot_source.stg_hubspot__deal_company_tmp": ["seed.hubspot_integration_tests.deal_company_data"], "model.hubspot_source.stg_hubspot__engagement_deal_tmp": ["seed.hubspot_integration_tests.engagement_deal_data"], "model.hubspot_source.stg_hubspot__email_event_print_tmp": ["seed.hubspot_integration_tests.email_event_print_data"], "model.hubspot_source.stg_hubspot__company_property_history_tmp": ["seed.hubspot_integration_tests.company_property_history_data"], "model.hubspot_source.stg_hubspot__email_event_tmp": ["seed.hubspot_integration_tests.email_event_data"], "model.hubspot_source.stg_hubspot__company_tmp": ["seed.hubspot_integration_tests.company_data"], "model.hubspot_source.stg_hubspot__email_event_click_tmp": ["seed.hubspot_integration_tests.email_event_click_data"], "model.hubspot_source.stg_hubspot__engagement_contact_tmp": ["seed.hubspot_integration_tests.engagement_contact_data"], "model.hubspot_source.stg_hubspot__contact_list_tmp": ["seed.hubspot_integration_tests.contact_list_data"], "model.hubspot_source.stg_hubspot__engagement_meeting_tmp": ["seed.hubspot_integration_tests.engagement_meeting_data"], "model.hubspot_source.stg_hubspot__engagement_tmp": ["seed.hubspot_integration_tests.engagement_data"], "model.hubspot_source.stg_hubspot__email_event_delivered_tmp": ["seed.hubspot_integration_tests.email_event_delivered_data"], "model.hubspot_source.stg_hubspot__engagement_email_tmp": ["seed.hubspot_integration_tests.engagement_email_data"], "model.hubspot_source.stg_hubspot__email_event_forward_tmp": ["seed.hubspot_integration_tests.email_event_forward_data"], "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp": ["seed.hubspot_integration_tests.email_event_spam_report_data"], "model.hubspot_source.stg_hubspot__email_event_bounce_tmp": ["seed.hubspot_integration_tests.email_event_bounce_data"], "model.hubspot_source.stg_hubspot__engagement_call_tmp": ["seed.hubspot_integration_tests.engagement_call_data"], "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp": ["seed.hubspot_integration_tests.deal_pipeline_stage_data"], "model.hubspot_source.stg_hubspot__engagement_task_tmp": ["seed.hubspot_integration_tests.engagement_task_data"], "model.hubspot_source.stg_hubspot__email_event_open_tmp": ["seed.hubspot_integration_tests.email_event_open_data"], "model.hubspot_source.stg_hubspot__deal_property_history_tmp": ["seed.hubspot_integration_tests.deal_property_history_data"], "model.hubspot_source.stg_hubspot__email_event_deferred_tmp": ["seed.hubspot_integration_tests.email_event_deferred_data"], "model.hubspot_source.stg_hubspot__email_campaign_tmp": ["seed.hubspot_integration_tests.email_campaign_data"], "model.hubspot.hubspot__companies": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__company", "model.hubspot_source.stg_hubspot__engagement_company"], "model.hubspot.hubspot__deals": ["model.hubspot.hubspot__engagements", "model.hubspot.int_hubspot__deals_enhanced", "model.hubspot_source.stg_hubspot__engagement_deal"], "model.hubspot.hubspot__deal_stages": ["model.hubspot.int_hubspot__deals_enhanced", "model.hubspot_source.stg_hubspot__deal_stage"], "model.hubspot.hubspot__engagements": ["model.hubspot_source.stg_hubspot__engagement", "model.hubspot_source.stg_hubspot__engagement_company", "model.hubspot_source.stg_hubspot__engagement_contact", "model.hubspot_source.stg_hubspot__engagement_deal"], "model.hubspot.hubspot__deal_history": ["model.hubspot_source.stg_hubspot__deal_property_history"], "model.hubspot.hubspot__company_history": ["model.hubspot_source.stg_hubspot__company_property_history"], "model.hubspot.hubspot__engagement_tasks": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_task"], "model.hubspot.hubspot__engagement_notes": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_note"], "model.hubspot.hubspot__engagement_calls": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_call"], "model.hubspot.hubspot__engagement_emails": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_email"], "model.hubspot.hubspot__engagement_meetings": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_meeting"], "model.hubspot.int_hubspot__deals_enhanced": ["model.hubspot_source.stg_hubspot__deal", "model.hubspot_source.stg_hubspot__deal_pipeline", "model.hubspot_source.stg_hubspot__deal_pipeline_stage", "model.hubspot_source.stg_hubspot__owner"], "model.hubspot.hubspot__email_sends": ["model.hubspot.hubspot__email_event_sent", "model.hubspot.int_hubspot__email_aggregate_status_change", "model.hubspot.int_hubspot__email_event_aggregates"], "model.hubspot.hubspot__contact_lists": ["model.hubspot.int_hubspot__email_metrics__by_contact_list", "model.hubspot_source.stg_hubspot__contact_list"], "model.hubspot.hubspot__contacts": ["model.hubspot.hubspot__email_sends", "model.hubspot.int_hubspot__engagement_metrics__by_contact", "model.hubspot_source.stg_hubspot__contact"], "model.hubspot.hubspot__email_campaigns": ["model.hubspot.hubspot__email_sends", "model.hubspot_source.stg_hubspot__email_campaign"], "model.hubspot.hubspot__email_event_dropped": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_dropped"], "model.hubspot.hubspot__email_event_deferred": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_deferred"], "model.hubspot.hubspot__email_event_spam_report": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_spam_report"], "model.hubspot.hubspot__email_event_opens": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_open"], "model.hubspot.hubspot__email_event_delivered": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_delivered"], "model.hubspot.hubspot__email_event_status_change": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_status_change"], "model.hubspot.hubspot__email_event_sent": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_sent"], "model.hubspot.hubspot__email_event_print": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_print"], "model.hubspot.hubspot__email_event_clicks": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_click"], "model.hubspot.hubspot__email_event_forward": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_forward"], "model.hubspot.hubspot__email_event_bounce": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event_bounce"], "model.hubspot.hubspot__contact_history": ["model.hubspot_source.stg_hubspot__contact_property_history"], "model.hubspot.int_hubspot__engagement_metrics__by_contact": ["model.hubspot.hubspot__engagements", "model.hubspot_source.stg_hubspot__engagement_contact"], "model.hubspot.int_hubspot__email_event_aggregates": ["model.hubspot_source.stg_hubspot__email_event"], "model.hubspot.int_hubspot__email_aggregate_status_change": ["model.hubspot.hubspot__email_event_status_change"], "model.hubspot.int_hubspot__email_metrics__by_contact_list": ["model.hubspot.hubspot__email_sends", "model.hubspot_source.stg_hubspot__contact_list_member"], "test.hubspot_source.unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.ba90fa6113": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage"], "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.d53656553e": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage"], "test.hubspot_source.unique_stg_hubspot__deal_pipeline_deal_pipeline_id.dff6c45403": ["model.hubspot_source.stg_hubspot__deal_pipeline"], "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.8a0e3cd7a3": ["model.hubspot_source.stg_hubspot__deal_pipeline"], "test.hubspot_source.not_null_stg_hubspot__deal_deal_id.ff48693e20": ["model.hubspot_source.stg_hubspot__deal"], "test.hubspot_source.unique_stg_hubspot__deal_deal_id.ac1628ac69": ["model.hubspot_source.stg_hubspot__deal"], "test.hubspot_source.unique_stg_hubspot__contact_list_contact_list_id.036739c1b0": ["model.hubspot_source.stg_hubspot__contact_list"], "test.hubspot_source.not_null_stg_hubspot__contact_list_contact_list_id.ff8e4cc29a": ["model.hubspot_source.stg_hubspot__contact_list"], "test.hubspot_source.unique_stg_hubspot__contact_contact_id.b9135eb03a": ["model.hubspot_source.stg_hubspot__contact"], "test.hubspot_source.not_null_stg_hubspot__contact_contact_id.9f112f8944": ["model.hubspot_source.stg_hubspot__contact"], "test.hubspot_source.unique_stg_hubspot__email_event_bounce_event_id.0341ffa8e9": ["model.hubspot_source.stg_hubspot__email_event_bounce"], "test.hubspot_source.not_null_stg_hubspot__email_event_bounce_event_id.71b13d26d3": ["model.hubspot_source.stg_hubspot__email_event_bounce"], "test.hubspot_source.unique_stg_hubspot__email_event_click_event_id.da8d8487a1": ["model.hubspot_source.stg_hubspot__email_event_click"], "test.hubspot_source.not_null_stg_hubspot__email_event_click_event_id.8a1be931c5": ["model.hubspot_source.stg_hubspot__email_event_click"], "test.hubspot_source.unique_stg_hubspot__email_event_deferred_event_id.2f779e2912": ["model.hubspot_source.stg_hubspot__email_event_deferred"], "test.hubspot_source.not_null_stg_hubspot__email_event_deferred_event_id.80293078e0": ["model.hubspot_source.stg_hubspot__email_event_deferred"], "test.hubspot_source.unique_stg_hubspot__email_event_delivered_event_id.f818bf03fc": ["model.hubspot_source.stg_hubspot__email_event_delivered"], "test.hubspot_source.not_null_stg_hubspot__email_event_delivered_event_id.87c8eb3f20": ["model.hubspot_source.stg_hubspot__email_event_delivered"], "test.hubspot_source.unique_stg_hubspot__email_event_dropped_event_id.40706bbf71": ["model.hubspot_source.stg_hubspot__email_event_dropped"], "test.hubspot_source.not_null_stg_hubspot__email_event_dropped_event_id.c92d449f52": ["model.hubspot_source.stg_hubspot__email_event_dropped"], "test.hubspot_source.unique_stg_hubspot__email_event_forward_event_id.7f133d2dd1": ["model.hubspot_source.stg_hubspot__email_event_forward"], "test.hubspot_source.not_null_stg_hubspot__email_event_forward_event_id.b9a8bf63b3": ["model.hubspot_source.stg_hubspot__email_event_forward"], "test.hubspot_source.unique_stg_hubspot__email_event_open_event_id.3a369549b1": ["model.hubspot_source.stg_hubspot__email_event_open"], "test.hubspot_source.not_null_stg_hubspot__email_event_open_event_id.a2e658fe16": ["model.hubspot_source.stg_hubspot__email_event_open"], "test.hubspot_source.unique_stg_hubspot__email_event_print_event_id.40a8ccd3f3": ["model.hubspot_source.stg_hubspot__email_event_print"], "test.hubspot_source.not_null_stg_hubspot__email_event_print_event_id.94d4e09b3b": ["model.hubspot_source.stg_hubspot__email_event_print"], "test.hubspot_source.unique_stg_hubspot__email_event_sent_event_id.122cb22272": ["model.hubspot_source.stg_hubspot__email_event_sent"], "test.hubspot_source.not_null_stg_hubspot__email_event_sent_event_id.cf77d9f15d": ["model.hubspot_source.stg_hubspot__email_event_sent"], "test.hubspot_source.unique_stg_hubspot__email_event_spam_report_event_id.448320447a": ["model.hubspot_source.stg_hubspot__email_event_spam_report"], "test.hubspot_source.not_null_stg_hubspot__email_event_spam_report_event_id.2a56aced8f": ["model.hubspot_source.stg_hubspot__email_event_spam_report"], "test.hubspot_source.unique_stg_hubspot__email_event_status_change_event_id.13105203e0": ["model.hubspot_source.stg_hubspot__email_event_status_change"], "test.hubspot_source.not_null_stg_hubspot__email_event_status_change_event_id.c5e80297b1": ["model.hubspot_source.stg_hubspot__email_event_status_change"], "test.hubspot_source.unique_stg_hubspot__email_event_event_id.734683460d": ["model.hubspot_source.stg_hubspot__email_event"], "test.hubspot_source.not_null_stg_hubspot__email_event_event_id.4f287f3531": ["model.hubspot_source.stg_hubspot__email_event"], "test.hubspot_source.unique_stg_hubspot__email_campaign_email_campaign_id.9820d33f2e": ["model.hubspot_source.stg_hubspot__email_campaign"], "test.hubspot_source.not_null_stg_hubspot__email_campaign_email_campaign_id.79921899a6": ["model.hubspot_source.stg_hubspot__email_campaign"], "test.hubspot_source.not_null_stg_hubspot__engagement_call_engagement_id.5ceb3917bf": ["model.hubspot_source.stg_hubspot__engagement_call"], "test.hubspot_source.unique_stg_hubspot__engagement_call_engagement_id.43b4413603": ["model.hubspot_source.stg_hubspot__engagement_call"], "test.hubspot_source.not_null_stg_hubspot__engagement_email_engagement_id.175561ecca": ["model.hubspot_source.stg_hubspot__engagement_email"], "test.hubspot_source.unique_stg_hubspot__engagement_email_engagement_id.5eeb06dcfc": ["model.hubspot_source.stg_hubspot__engagement_email"], "test.hubspot_source.not_null_stg_hubspot__engagement_meeting_engagement_id.18dd11dc28": ["model.hubspot_source.stg_hubspot__engagement_meeting"], "test.hubspot_source.unique_stg_hubspot__engagement_meeting_engagement_id.70721fb830": ["model.hubspot_source.stg_hubspot__engagement_meeting"], "test.hubspot_source.not_null_stg_hubspot__engagement_note_engagement_id.244059891e": ["model.hubspot_source.stg_hubspot__engagement_note"], "test.hubspot_source.unique_stg_hubspot__engagement_note_engagement_id.e2eaf5256e": ["model.hubspot_source.stg_hubspot__engagement_note"], "test.hubspot_source.not_null_stg_hubspot__engagement_task_engagement_id.0bbd752d82": ["model.hubspot_source.stg_hubspot__engagement_task"], "test.hubspot_source.unique_stg_hubspot__engagement_task_engagement_id.0f578bc80c": ["model.hubspot_source.stg_hubspot__engagement_task"], "test.hubspot_source.not_null_stg_hubspot__engagement_engagement_id.b26f4d328f": ["model.hubspot_source.stg_hubspot__engagement"], "test.hubspot_source.unique_stg_hubspot__engagement_engagement_id.4f054187b0": ["model.hubspot_source.stg_hubspot__engagement"], "test.hubspot_source.unique_stg_hubspot__ticket_ticket_id.78c6fbfcaf": [], "test.hubspot_source.not_null_stg_hubspot__ticket_ticket_id.299e7c4c53": [], "test.hubspot_source.unique_stg_hubspot__company_company_id.394a2a4ba0": ["model.hubspot_source.stg_hubspot__company"], "test.hubspot_source.not_null_stg_hubspot__company_company_id.0d0a080d43": ["model.hubspot_source.stg_hubspot__company"], "test.hubspot.not_null_hubspot__deals_deal_id.bdbfe47fcd": ["model.hubspot.hubspot__deals"], "test.hubspot.unique_hubspot__deals_deal_id.d728fe5f71": ["model.hubspot.hubspot__deals"], "test.hubspot.not_null_hubspot__deal_stages_deal_stage_id.162d2d204b": ["model.hubspot.hubspot__deal_stages"], "test.hubspot.unique_hubspot__deal_stages_deal_stage_id.7fd3732373": ["model.hubspot.hubspot__deal_stages"], "test.hubspot.unique_hubspot__companies_company_id.a58ceac3f2": ["model.hubspot.hubspot__companies"], "test.hubspot.not_null_hubspot__companies_company_id.687ec98e97": ["model.hubspot.hubspot__companies"], "test.hubspot.not_null_hubspot__engagements_engagement_id.59b32bc0d7": ["model.hubspot.hubspot__engagements"], "test.hubspot.unique_hubspot__engagements_engagement_id.01d5c3ee5d": ["model.hubspot.hubspot__engagements"], "test.hubspot.unique_hubspot__company_history_id.f1af964b1f": ["model.hubspot.hubspot__company_history"], "test.hubspot.not_null_hubspot__company_history_id.33035793ff": ["model.hubspot.hubspot__company_history"], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to.654ef778b1": ["model.hubspot.hubspot__company_history"], "test.hubspot.unique_hubspot__deal_history_id.1cb93fca79": ["model.hubspot.hubspot__deal_history"], "test.hubspot.not_null_hubspot__deal_history_id.a1c6cd6a75": ["model.hubspot.hubspot__deal_history"], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to.f55c724804": ["model.hubspot.hubspot__deal_history"], "test.hubspot.not_null_hubspot__engagement_calls_engagement_id.00f8d8357f": ["model.hubspot.hubspot__engagement_calls"], "test.hubspot.unique_hubspot__engagement_calls_engagement_id.972572ce6c": ["model.hubspot.hubspot__engagement_calls"], "test.hubspot.not_null_hubspot__engagement_emails_engagement_id.13a39d1e09": ["model.hubspot.hubspot__engagement_emails"], "test.hubspot.unique_hubspot__engagement_emails_engagement_id.b18e2acbde": ["model.hubspot.hubspot__engagement_emails"], "test.hubspot.not_null_hubspot__engagement_meetings_engagement_id.83a791c3df": ["model.hubspot.hubspot__engagement_meetings"], "test.hubspot.unique_hubspot__engagement_meetings_engagement_id.3098aabcd1": ["model.hubspot.hubspot__engagement_meetings"], "test.hubspot.not_null_hubspot__engagement_notes_engagement_id.76434ac965": ["model.hubspot.hubspot__engagement_notes"], "test.hubspot.unique_hubspot__engagement_notes_engagement_id.c9864b5001": ["model.hubspot.hubspot__engagement_notes"], "test.hubspot.not_null_hubspot__engagement_tasks_engagement_id.67738794ae": ["model.hubspot.hubspot__engagement_tasks"], "test.hubspot.unique_hubspot__engagement_tasks_engagement_id.754d36b939": ["model.hubspot.hubspot__engagement_tasks"], "test.hubspot.unique_hubspot__email_sends_event_id.b01306228f": ["model.hubspot.hubspot__email_sends"], "test.hubspot.not_null_hubspot__email_sends_event_id.9fc8a8bef3": ["model.hubspot.hubspot__email_sends"], "test.hubspot.unique_hubspot__email_campaigns_email_campaign_id.2470fabe62": ["model.hubspot.hubspot__email_campaigns"], "test.hubspot.not_null_hubspot__email_campaigns_email_campaign_id.6b2d6f43c0": ["model.hubspot.hubspot__email_campaigns"], "test.hubspot.unique_hubspot__contacts_contact_id.8f627121df": ["model.hubspot.hubspot__contacts"], "test.hubspot.not_null_hubspot__contacts_contact_id.e28e88dce3": ["model.hubspot.hubspot__contacts"], "test.hubspot.unique_hubspot__contact_lists_contact_list_id.ea9ef03bac": ["model.hubspot.hubspot__contact_lists"], "test.hubspot.not_null_hubspot__contact_lists_contact_list_id.3bde1bb891": ["model.hubspot.hubspot__contact_lists"], "test.hubspot.unique_hubspot__email_event_bounce_event_id.7a1c6704e1": ["model.hubspot.hubspot__email_event_bounce"], "test.hubspot.not_null_hubspot__email_event_bounce_event_id.39d8daa6f5": ["model.hubspot.hubspot__email_event_bounce"], "test.hubspot.unique_hubspot__email_event_clicks_event_id.60d3912846": ["model.hubspot.hubspot__email_event_clicks"], "test.hubspot.not_null_hubspot__email_event_clicks_event_id.f603501ca0": ["model.hubspot.hubspot__email_event_clicks"], "test.hubspot.unique_hubspot__email_event_deferred_event_id.bb75dcb83a": ["model.hubspot.hubspot__email_event_deferred"], "test.hubspot.not_null_hubspot__email_event_deferred_event_id.2c6decaa91": ["model.hubspot.hubspot__email_event_deferred"], "test.hubspot.unique_hubspot__email_event_delivered_event_id.242e838cce": ["model.hubspot.hubspot__email_event_delivered"], "test.hubspot.not_null_hubspot__email_event_delivered_event_id.0609870be3": ["model.hubspot.hubspot__email_event_delivered"], "test.hubspot.unique_hubspot__email_event_dropped_event_id.093040860b": ["model.hubspot.hubspot__email_event_dropped"], "test.hubspot.not_null_hubspot__email_event_dropped_event_id.5cfe4eeb95": ["model.hubspot.hubspot__email_event_dropped"], "test.hubspot.unique_hubspot__email_event_forward_event_id.064956aaa7": ["model.hubspot.hubspot__email_event_forward"], "test.hubspot.not_null_hubspot__email_event_forward_event_id.417a73da08": ["model.hubspot.hubspot__email_event_forward"], "test.hubspot.unique_hubspot__email_event_opens_event_id.d7963f4eb0": ["model.hubspot.hubspot__email_event_opens"], "test.hubspot.not_null_hubspot__email_event_opens_event_id.a9fe279ee1": ["model.hubspot.hubspot__email_event_opens"], "test.hubspot.unique_hubspot__email_event_print_event_id.548f6cece7": ["model.hubspot.hubspot__email_event_print"], "test.hubspot.not_null_hubspot__email_event_print_event_id.9dac8a147e": ["model.hubspot.hubspot__email_event_print"], "test.hubspot.unique_hubspot__email_event_sent_event_id.68076270f8": ["model.hubspot.hubspot__email_event_sent"], "test.hubspot.not_null_hubspot__email_event_sent_event_id.5507dcc5b9": ["model.hubspot.hubspot__email_event_sent"], "test.hubspot.unique_hubspot__email_event_spam_report_event_id.20aab81ec6": ["model.hubspot.hubspot__email_event_spam_report"], "test.hubspot.not_null_hubspot__email_event_spam_report_event_id.5ddca8771a": ["model.hubspot.hubspot__email_event_spam_report"], "test.hubspot.unique_hubspot__email_event_status_change_event_id.2e5b2b72e2": ["model.hubspot.hubspot__email_event_status_change"], "test.hubspot.not_null_hubspot__email_event_status_change_event_id.a1737e44b3": ["model.hubspot.hubspot__email_event_status_change"], "test.hubspot.unique_hubspot__contact_history_id.aef69ae1ec": ["model.hubspot.hubspot__contact_history"], "test.hubspot.not_null_hubspot__contact_history_id.eaae22e088": ["model.hubspot.hubspot__contact_history"], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to.42ccfb8329": ["model.hubspot.hubspot__contact_history"], "test.hubspot.unique_int_hubspot__email_aggregate_status_change_email_send_id.7c03e87c05": ["model.hubspot.int_hubspot__email_aggregate_status_change"], "test.hubspot.not_null_int_hubspot__email_aggregate_status_change_email_send_id.16bf74a3bc": ["model.hubspot.int_hubspot__email_aggregate_status_change"], "test.hubspot.unique_int_hubspot__email_metrics__by_contact_list_contact_list_id.095d72d5b8": ["model.hubspot.int_hubspot__email_metrics__by_contact_list"], "test.hubspot.not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id.1d3cf4caf2": ["model.hubspot.int_hubspot__email_metrics__by_contact_list"], "test.hubspot.unique_int_hubspot__email_event_aggregates_email_send_id.4deec238f9": ["model.hubspot.int_hubspot__email_event_aggregates"], "test.hubspot.not_null_int_hubspot__email_event_aggregates_email_send_id.ac29e6997a": ["model.hubspot.int_hubspot__email_event_aggregates"], "test.hubspot.unique_int_hubspot__engagement_metrics__by_contact_contact_id.1c156b64ed": ["model.hubspot.int_hubspot__engagement_metrics__by_contact"], "test.hubspot.not_null_int_hubspot__engagement_metrics__by_contact_contact_id.4a800df06b": ["model.hubspot.int_hubspot__engagement_metrics__by_contact"], "source.hubspot_source.hubspot.calendar_event": [], "source.hubspot_source.hubspot.company": [], "source.hubspot_source.hubspot.company_property_history": [], "source.hubspot_source.hubspot.contact_merge_audit": [], "source.hubspot_source.hubspot.contact": [], "source.hubspot_source.hubspot.contact_form_submission": [], "source.hubspot_source.hubspot.contact_list": [], "source.hubspot_source.hubspot.contact_list_member": [], "source.hubspot_source.hubspot.contact_property_history": [], "source.hubspot_source.hubspot.deal": [], "source.hubspot_source.hubspot.deal_stage": [], "source.hubspot_source.hubspot.deal_company": [], "source.hubspot_source.hubspot.deal_contact": [], "source.hubspot_source.hubspot.deal_pipeline": [], "source.hubspot_source.hubspot.deal_pipeline_stage": [], "source.hubspot_source.hubspot.deal_property_history": [], "source.hubspot_source.hubspot.email_campaign": [], "source.hubspot_source.hubspot.email_event": [], "source.hubspot_source.hubspot.email_event_bounce": [], "source.hubspot_source.hubspot.email_event_click": [], "source.hubspot_source.hubspot.email_event_deferred": [], "source.hubspot_source.hubspot.email_event_delivered": [], "source.hubspot_source.hubspot.email_event_dropped": [], "source.hubspot_source.hubspot.email_event_forward": [], "source.hubspot_source.hubspot.email_event_open": [], "source.hubspot_source.hubspot.email_event_print": [], "source.hubspot_source.hubspot.email_event_sent": [], "source.hubspot_source.hubspot.email_event_spam_report": [], "source.hubspot_source.hubspot.email_event_status_change": [], "source.hubspot_source.hubspot.email_subscription": [], "source.hubspot_source.hubspot.email_subscription_change": [], "source.hubspot_source.hubspot.engagement": [], "source.hubspot_source.hubspot.engagement_call": [], "source.hubspot_source.hubspot.engagement_company": [], "source.hubspot_source.hubspot.engagement_contact": [], "source.hubspot_source.hubspot.engagement_deal": [], "source.hubspot_source.hubspot.engagement_email": [], "source.hubspot_source.hubspot.engagement_email_cc": [], "source.hubspot_source.hubspot.engagement_email_to": [], "source.hubspot_source.hubspot.engagement_meeting": [], "source.hubspot_source.hubspot.engagement_note": [], "source.hubspot_source.hubspot.engagement_task": [], "source.hubspot_source.hubspot.form": [], "source.hubspot_source.hubspot.owner": [], "source.hubspot_source.hubspot.ticket_company": [], "source.hubspot_source.hubspot.ticket_contact": [], "source.hubspot_source.hubspot.ticket_deal": [], "source.hubspot_source.hubspot.ticket_engagement": [], "source.hubspot_source.hubspot.ticket_pipeline_stage": [], "source.hubspot_source.hubspot.ticket_pipeline": [], "source.hubspot_source.hubspot.ticket_property_history": [], "source.hubspot_source.hubspot.ticket": []}, "child_map": {"seed.hubspot_integration_tests.email_event_delivered_data": ["model.hubspot_source.stg_hubspot__email_event_delivered_tmp"], "seed.hubspot_integration_tests.email_event_status_change_data": ["model.hubspot_source.stg_hubspot__email_event_status_change_tmp"], "seed.hubspot_integration_tests.engagement_deal_data": ["model.hubspot_source.stg_hubspot__engagement_deal_tmp"], "seed.hubspot_integration_tests.deal_stage_data": ["model.hubspot_source.stg_hubspot__deal_stage_tmp"], "seed.hubspot_integration_tests.email_campaign_data": ["model.hubspot_source.stg_hubspot__email_campaign_tmp"], "seed.hubspot_integration_tests.engagement_call_data": ["model.hubspot_source.stg_hubspot__engagement_call_tmp"], "seed.hubspot_integration_tests.contact_merge_audit_data": [], "seed.hubspot_integration_tests.email_event_print_data": ["model.hubspot_source.stg_hubspot__email_event_print_tmp"], "seed.hubspot_integration_tests.email_event_spam_report_data": ["model.hubspot_source.stg_hubspot__email_event_spam_report_tmp"], "seed.hubspot_integration_tests.contact_list_data": ["model.hubspot_source.stg_hubspot__contact_list_tmp"], "seed.hubspot_integration_tests.email_event_click_data": ["model.hubspot_source.stg_hubspot__email_event_click_tmp"], "seed.hubspot_integration_tests.email_event_deferred_data": ["model.hubspot_source.stg_hubspot__email_event_deferred_tmp"], "seed.hubspot_integration_tests.email_event_open_data": ["model.hubspot_source.stg_hubspot__email_event_open_tmp"], "seed.hubspot_integration_tests.company_property_history_data": ["model.hubspot_source.stg_hubspot__company_property_history_tmp"], "seed.hubspot_integration_tests.engagement_email_data": ["model.hubspot_source.stg_hubspot__engagement_email_tmp"], "seed.hubspot_integration_tests.deal_data": ["model.hubspot_source.stg_hubspot__deal_tmp"], "seed.hubspot_integration_tests.engagement_note_data": ["model.hubspot_source.stg_hubspot__engagement_note_tmp"], "seed.hubspot_integration_tests.deal_pipeline_data": ["model.hubspot_source.stg_hubspot__deal_pipeline_tmp"], "seed.hubspot_integration_tests.email_event_data": ["model.hubspot_source.stg_hubspot__email_event_tmp"], "seed.hubspot_integration_tests.engagement_data": ["model.hubspot_source.stg_hubspot__engagement_tmp"], "seed.hubspot_integration_tests.email_event_dropped_data": ["model.hubspot_source.stg_hubspot__email_event_dropped_tmp"], "seed.hubspot_integration_tests.owner_data": ["model.hubspot_source.stg_hubspot__owner_tmp"], "seed.hubspot_integration_tests.engagement_meeting_data": ["model.hubspot_source.stg_hubspot__engagement_meeting_tmp"], "seed.hubspot_integration_tests.email_event_forward_data": ["model.hubspot_source.stg_hubspot__email_event_forward_tmp"], "seed.hubspot_integration_tests.deal_pipeline_stage_data": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp"], "seed.hubspot_integration_tests.company_data": ["model.hubspot_source.stg_hubspot__company_tmp"], "seed.hubspot_integration_tests.deal_contact_data": ["model.hubspot_source.stg_hubspot__deal_contact_tmp"], "seed.hubspot_integration_tests.contact_list_member_data": ["model.hubspot_source.stg_hubspot__contact_list_member_tmp"], "seed.hubspot_integration_tests.contact_property_history_data": ["model.hubspot_source.stg_hubspot__contact_property_history_tmp"], "seed.hubspot_integration_tests.deal_property_history_data": ["model.hubspot_source.stg_hubspot__deal_property_history_tmp"], "seed.hubspot_integration_tests.email_event_bounce_data": ["model.hubspot_source.stg_hubspot__email_event_bounce_tmp"], "seed.hubspot_integration_tests.engagement_contact_data": ["model.hubspot_source.stg_hubspot__engagement_contact_tmp"], "seed.hubspot_integration_tests.email_event_sent_data": ["model.hubspot_source.stg_hubspot__email_event_sent_tmp"], "seed.hubspot_integration_tests.contact_data": ["model.hubspot_source.stg_hubspot__contact_tmp"], "seed.hubspot_integration_tests.deal_company_data": ["model.hubspot_source.stg_hubspot__deal_company_tmp"], "seed.hubspot_integration_tests.engagement_task_data": ["model.hubspot_source.stg_hubspot__engagement_task_tmp"], "seed.hubspot_integration_tests.engagement_company_data": ["model.hubspot_source.stg_hubspot__engagement_company_tmp"], "model.hubspot_source.stg_hubspot__engagement_task": ["model.hubspot.hubspot__engagement_tasks", "test.hubspot_source.not_null_stg_hubspot__engagement_task_engagement_id.0bbd752d82", "test.hubspot_source.unique_stg_hubspot__engagement_task_engagement_id.0f578bc80c"], "model.hubspot_source.stg_hubspot__engagement_deal": ["model.hubspot.hubspot__deals", "model.hubspot.hubspot__engagements"], "model.hubspot_source.stg_hubspot__company_property_history": ["model.hubspot.hubspot__company_history"], "model.hubspot_source.stg_hubspot__email_event_delivered": ["model.hubspot.hubspot__email_event_delivered", "test.hubspot_source.not_null_stg_hubspot__email_event_delivered_event_id.87c8eb3f20", "test.hubspot_source.unique_stg_hubspot__email_event_delivered_event_id.f818bf03fc"], "model.hubspot_source.stg_hubspot__owner": ["model.hubspot.int_hubspot__deals_enhanced"], "model.hubspot_source.stg_hubspot__email_event": ["model.hubspot.hubspot__email_event_bounce", "model.hubspot.hubspot__email_event_clicks", "model.hubspot.hubspot__email_event_deferred", "model.hubspot.hubspot__email_event_delivered", "model.hubspot.hubspot__email_event_dropped", "model.hubspot.hubspot__email_event_forward", "model.hubspot.hubspot__email_event_opens", "model.hubspot.hubspot__email_event_print", "model.hubspot.hubspot__email_event_sent", "model.hubspot.hubspot__email_event_spam_report", "model.hubspot.hubspot__email_event_status_change", "model.hubspot.int_hubspot__email_event_aggregates", "test.hubspot_source.not_null_stg_hubspot__email_event_event_id.4f287f3531", "test.hubspot_source.unique_stg_hubspot__email_event_event_id.734683460d"], "model.hubspot_source.stg_hubspot__engagement_meeting": ["model.hubspot.hubspot__engagement_meetings", "test.hubspot_source.not_null_stg_hubspot__engagement_meeting_engagement_id.18dd11dc28", "test.hubspot_source.unique_stg_hubspot__engagement_meeting_engagement_id.70721fb830"], "model.hubspot_source.stg_hubspot__engagement_email": ["model.hubspot.hubspot__engagement_emails", "test.hubspot_source.not_null_stg_hubspot__engagement_email_engagement_id.175561ecca", "test.hubspot_source.unique_stg_hubspot__engagement_email_engagement_id.5eeb06dcfc"], "model.hubspot_source.stg_hubspot__email_event_status_change": ["model.hubspot.hubspot__email_event_status_change", "test.hubspot_source.not_null_stg_hubspot__email_event_status_change_event_id.c5e80297b1", "test.hubspot_source.unique_stg_hubspot__email_event_status_change_event_id.13105203e0"], "model.hubspot_source.stg_hubspot__contact_list_member": ["model.hubspot.int_hubspot__email_metrics__by_contact_list"], "model.hubspot_source.stg_hubspot__contact": ["model.hubspot.hubspot__contacts", "model.hubspot.hubspot__email_event_bounce", "model.hubspot.hubspot__email_event_clicks", "model.hubspot.hubspot__email_event_deferred", "model.hubspot.hubspot__email_event_delivered", "model.hubspot.hubspot__email_event_dropped", "model.hubspot.hubspot__email_event_forward", "model.hubspot.hubspot__email_event_opens", "model.hubspot.hubspot__email_event_print", "model.hubspot.hubspot__email_event_sent", "model.hubspot.hubspot__email_event_spam_report", "model.hubspot.hubspot__email_event_status_change", "test.hubspot_source.not_null_stg_hubspot__contact_contact_id.9f112f8944", "test.hubspot_source.unique_stg_hubspot__contact_contact_id.b9135eb03a"], "model.hubspot_source.stg_hubspot__deal": ["model.hubspot.int_hubspot__deals_enhanced", "test.hubspot_source.not_null_stg_hubspot__deal_deal_id.ff48693e20", "test.hubspot_source.unique_stg_hubspot__deal_deal_id.ac1628ac69"], "model.hubspot_source.stg_hubspot__deal_pipeline": ["model.hubspot.int_hubspot__deals_enhanced", "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.8a0e3cd7a3", "test.hubspot_source.unique_stg_hubspot__deal_pipeline_deal_pipeline_id.dff6c45403"], "model.hubspot_source.stg_hubspot__deal_company": [], "model.hubspot_source.stg_hubspot__engagement_note": ["model.hubspot.hubspot__engagement_notes", "test.hubspot_source.not_null_stg_hubspot__engagement_note_engagement_id.244059891e", "test.hubspot_source.unique_stg_hubspot__engagement_note_engagement_id.e2eaf5256e"], "model.hubspot_source.stg_hubspot__engagement_contact": ["model.hubspot.hubspot__engagements", "model.hubspot.int_hubspot__engagement_metrics__by_contact"], "model.hubspot_source.stg_hubspot__contact_list": ["model.hubspot.hubspot__contact_lists", "test.hubspot_source.not_null_stg_hubspot__contact_list_contact_list_id.ff8e4cc29a", "test.hubspot_source.unique_stg_hubspot__contact_list_contact_list_id.036739c1b0"], "model.hubspot_source.stg_hubspot__email_event_spam_report": ["model.hubspot.hubspot__email_event_spam_report", "test.hubspot_source.not_null_stg_hubspot__email_event_spam_report_event_id.2a56aced8f", "test.hubspot_source.unique_stg_hubspot__email_event_spam_report_event_id.448320447a"], "model.hubspot_source.stg_hubspot__deal_pipeline_stage": ["model.hubspot.int_hubspot__deals_enhanced", "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.d53656553e", "test.hubspot_source.unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.ba90fa6113"], "model.hubspot_source.stg_hubspot__email_event_dropped": ["model.hubspot.hubspot__email_event_dropped", "test.hubspot_source.not_null_stg_hubspot__email_event_dropped_event_id.c92d449f52", "test.hubspot_source.unique_stg_hubspot__email_event_dropped_event_id.40706bbf71"], "model.hubspot_source.stg_hubspot__deal_stage": ["model.hubspot.hubspot__deal_stages"], "model.hubspot_source.stg_hubspot__deal_property_history": ["model.hubspot.hubspot__deal_history"], "model.hubspot_source.stg_hubspot__email_event_forward": ["model.hubspot.hubspot__email_event_forward", "test.hubspot_source.not_null_stg_hubspot__email_event_forward_event_id.b9a8bf63b3", "test.hubspot_source.unique_stg_hubspot__email_event_forward_event_id.7f133d2dd1"], "model.hubspot_source.stg_hubspot__email_event_bounce": ["model.hubspot.hubspot__email_event_bounce", "test.hubspot_source.not_null_stg_hubspot__email_event_bounce_event_id.71b13d26d3", "test.hubspot_source.unique_stg_hubspot__email_event_bounce_event_id.0341ffa8e9"], "model.hubspot_source.stg_hubspot__engagement_company": ["model.hubspot.hubspot__companies", "model.hubspot.hubspot__engagements"], "model.hubspot_source.stg_hubspot__email_event_deferred": ["model.hubspot.hubspot__email_event_deferred", "test.hubspot_source.not_null_stg_hubspot__email_event_deferred_event_id.80293078e0", "test.hubspot_source.unique_stg_hubspot__email_event_deferred_event_id.2f779e2912"], "model.hubspot_source.stg_hubspot__company": ["model.hubspot.hubspot__companies", "test.hubspot_source.not_null_stg_hubspot__company_company_id.0d0a080d43", "test.hubspot_source.unique_stg_hubspot__company_company_id.394a2a4ba0"], "model.hubspot_source.stg_hubspot__deal_contact": [], "model.hubspot_source.stg_hubspot__email_event_click": ["model.hubspot.hubspot__email_event_clicks", "test.hubspot_source.not_null_stg_hubspot__email_event_click_event_id.8a1be931c5", "test.hubspot_source.unique_stg_hubspot__email_event_click_event_id.da8d8487a1"], "model.hubspot_source.stg_hubspot__engagement_call": ["model.hubspot.hubspot__engagement_calls", "test.hubspot_source.not_null_stg_hubspot__engagement_call_engagement_id.5ceb3917bf", "test.hubspot_source.unique_stg_hubspot__engagement_call_engagement_id.43b4413603"], "model.hubspot_source.stg_hubspot__engagement": ["model.hubspot.hubspot__engagements", "test.hubspot_source.not_null_stg_hubspot__engagement_engagement_id.b26f4d328f", "test.hubspot_source.unique_stg_hubspot__engagement_engagement_id.4f054187b0"], "model.hubspot_source.stg_hubspot__email_campaign": ["model.hubspot.hubspot__email_campaigns", "test.hubspot_source.not_null_stg_hubspot__email_campaign_email_campaign_id.79921899a6", "test.hubspot_source.unique_stg_hubspot__email_campaign_email_campaign_id.9820d33f2e"], "model.hubspot_source.stg_hubspot__email_event_print": ["model.hubspot.hubspot__email_event_print", "test.hubspot_source.not_null_stg_hubspot__email_event_print_event_id.94d4e09b3b", "test.hubspot_source.unique_stg_hubspot__email_event_print_event_id.40a8ccd3f3"], "model.hubspot_source.stg_hubspot__contact_property_history": ["model.hubspot.hubspot__contact_history"], "model.hubspot_source.stg_hubspot__email_event_open": ["model.hubspot.hubspot__email_event_opens", "test.hubspot_source.not_null_stg_hubspot__email_event_open_event_id.a2e658fe16", "test.hubspot_source.unique_stg_hubspot__email_event_open_event_id.3a369549b1"], "model.hubspot_source.stg_hubspot__email_event_sent": ["model.hubspot.hubspot__email_event_sent", "test.hubspot_source.not_null_stg_hubspot__email_event_sent_event_id.cf77d9f15d", "test.hubspot_source.unique_stg_hubspot__email_event_sent_event_id.122cb22272"], "model.hubspot_source.stg_hubspot__contact_property_history_tmp": ["model.hubspot_source.stg_hubspot__contact_property_history", "model.hubspot_source.stg_hubspot__contact_property_history"], "model.hubspot_source.stg_hubspot__email_event_dropped_tmp": ["model.hubspot_source.stg_hubspot__email_event_dropped", "model.hubspot_source.stg_hubspot__email_event_dropped"], "model.hubspot_source.stg_hubspot__email_event_sent_tmp": ["model.hubspot_source.stg_hubspot__email_event_sent", "model.hubspot_source.stg_hubspot__email_event_sent"], "model.hubspot_source.stg_hubspot__deal_tmp": ["model.hubspot_source.stg_hubspot__deal", "model.hubspot_source.stg_hubspot__deal"], "model.hubspot_source.stg_hubspot__deal_contact_tmp": ["model.hubspot_source.stg_hubspot__deal_contact", "model.hubspot_source.stg_hubspot__deal_contact"], "model.hubspot_source.stg_hubspot__contact_list_member_tmp": ["model.hubspot_source.stg_hubspot__contact_list_member", "model.hubspot_source.stg_hubspot__contact_list_member"], "model.hubspot_source.stg_hubspot__owner_tmp": ["model.hubspot_source.stg_hubspot__owner", "model.hubspot_source.stg_hubspot__owner"], "model.hubspot_source.stg_hubspot__deal_stage_tmp": ["model.hubspot_source.stg_hubspot__deal_stage", "model.hubspot_source.stg_hubspot__deal_stage"], "model.hubspot_source.stg_hubspot__deal_pipeline_tmp": ["model.hubspot_source.stg_hubspot__deal_pipeline", "model.hubspot_source.stg_hubspot__deal_pipeline"], "model.hubspot_source.stg_hubspot__engagement_company_tmp": ["model.hubspot_source.stg_hubspot__engagement_company", "model.hubspot_source.stg_hubspot__engagement_company"], "model.hubspot_source.stg_hubspot__contact_tmp": ["model.hubspot_source.stg_hubspot__contact", "model.hubspot_source.stg_hubspot__contact"], "model.hubspot_source.stg_hubspot__email_event_status_change_tmp": ["model.hubspot_source.stg_hubspot__email_event_status_change", "model.hubspot_source.stg_hubspot__email_event_status_change"], "model.hubspot_source.stg_hubspot__engagement_note_tmp": ["model.hubspot_source.stg_hubspot__engagement_note", "model.hubspot_source.stg_hubspot__engagement_note"], "model.hubspot_source.stg_hubspot__deal_company_tmp": ["model.hubspot_source.stg_hubspot__deal_company", "model.hubspot_source.stg_hubspot__deal_company"], "model.hubspot_source.stg_hubspot__engagement_deal_tmp": ["model.hubspot_source.stg_hubspot__engagement_deal", "model.hubspot_source.stg_hubspot__engagement_deal"], "model.hubspot_source.stg_hubspot__email_event_print_tmp": ["model.hubspot_source.stg_hubspot__email_event_print", "model.hubspot_source.stg_hubspot__email_event_print"], "model.hubspot_source.stg_hubspot__company_property_history_tmp": ["model.hubspot_source.stg_hubspot__company_property_history", "model.hubspot_source.stg_hubspot__company_property_history"], "model.hubspot_source.stg_hubspot__email_event_tmp": ["model.hubspot_source.stg_hubspot__email_event", "model.hubspot_source.stg_hubspot__email_event"], "model.hubspot_source.stg_hubspot__company_tmp": ["model.hubspot_source.stg_hubspot__company", "model.hubspot_source.stg_hubspot__company"], "model.hubspot_source.stg_hubspot__email_event_click_tmp": ["model.hubspot_source.stg_hubspot__email_event_click", "model.hubspot_source.stg_hubspot__email_event_click"], "model.hubspot_source.stg_hubspot__engagement_contact_tmp": ["model.hubspot_source.stg_hubspot__engagement_contact", "model.hubspot_source.stg_hubspot__engagement_contact"], "model.hubspot_source.stg_hubspot__contact_list_tmp": ["model.hubspot_source.stg_hubspot__contact_list", "model.hubspot_source.stg_hubspot__contact_list"], "model.hubspot_source.stg_hubspot__engagement_meeting_tmp": ["model.hubspot_source.stg_hubspot__engagement_meeting", "model.hubspot_source.stg_hubspot__engagement_meeting"], "model.hubspot_source.stg_hubspot__engagement_tmp": ["model.hubspot_source.stg_hubspot__engagement", "model.hubspot_source.stg_hubspot__engagement"], "model.hubspot_source.stg_hubspot__email_event_delivered_tmp": ["model.hubspot_source.stg_hubspot__email_event_delivered", "model.hubspot_source.stg_hubspot__email_event_delivered"], "model.hubspot_source.stg_hubspot__engagement_email_tmp": ["model.hubspot_source.stg_hubspot__engagement_email", "model.hubspot_source.stg_hubspot__engagement_email"], "model.hubspot_source.stg_hubspot__email_event_forward_tmp": ["model.hubspot_source.stg_hubspot__email_event_forward", "model.hubspot_source.stg_hubspot__email_event_forward"], "model.hubspot_source.stg_hubspot__email_event_spam_report_tmp": ["model.hubspot_source.stg_hubspot__email_event_spam_report", "model.hubspot_source.stg_hubspot__email_event_spam_report"], "model.hubspot_source.stg_hubspot__email_event_bounce_tmp": ["model.hubspot_source.stg_hubspot__email_event_bounce", "model.hubspot_source.stg_hubspot__email_event_bounce"], "model.hubspot_source.stg_hubspot__engagement_call_tmp": ["model.hubspot_source.stg_hubspot__engagement_call", "model.hubspot_source.stg_hubspot__engagement_call"], "model.hubspot_source.stg_hubspot__deal_pipeline_stage_tmp": ["model.hubspot_source.stg_hubspot__deal_pipeline_stage", "model.hubspot_source.stg_hubspot__deal_pipeline_stage"], "model.hubspot_source.stg_hubspot__engagement_task_tmp": ["model.hubspot_source.stg_hubspot__engagement_task", "model.hubspot_source.stg_hubspot__engagement_task"], "model.hubspot_source.stg_hubspot__email_event_open_tmp": ["model.hubspot_source.stg_hubspot__email_event_open", "model.hubspot_source.stg_hubspot__email_event_open"], "model.hubspot_source.stg_hubspot__deal_property_history_tmp": ["model.hubspot_source.stg_hubspot__deal_property_history", "model.hubspot_source.stg_hubspot__deal_property_history"], "model.hubspot_source.stg_hubspot__email_event_deferred_tmp": ["model.hubspot_source.stg_hubspot__email_event_deferred", "model.hubspot_source.stg_hubspot__email_event_deferred"], "model.hubspot_source.stg_hubspot__email_campaign_tmp": ["model.hubspot_source.stg_hubspot__email_campaign", "model.hubspot_source.stg_hubspot__email_campaign"], "model.hubspot.hubspot__companies": ["test.hubspot.not_null_hubspot__companies_company_id.687ec98e97", "test.hubspot.unique_hubspot__companies_company_id.a58ceac3f2"], "model.hubspot.hubspot__deals": ["test.hubspot.not_null_hubspot__deals_deal_id.bdbfe47fcd", "test.hubspot.unique_hubspot__deals_deal_id.d728fe5f71"], "model.hubspot.hubspot__deal_stages": ["test.hubspot.not_null_hubspot__deal_stages_deal_stage_id.162d2d204b", "test.hubspot.unique_hubspot__deal_stages_deal_stage_id.7fd3732373"], "model.hubspot.hubspot__engagements": ["model.hubspot.hubspot__companies", "model.hubspot.hubspot__deals", "model.hubspot.hubspot__engagement_calls", "model.hubspot.hubspot__engagement_emails", "model.hubspot.hubspot__engagement_meetings", "model.hubspot.hubspot__engagement_notes", "model.hubspot.hubspot__engagement_tasks", "model.hubspot.int_hubspot__engagement_metrics__by_contact", "test.hubspot.not_null_hubspot__engagements_engagement_id.59b32bc0d7", "test.hubspot.unique_hubspot__engagements_engagement_id.01d5c3ee5d"], "model.hubspot.hubspot__deal_history": ["test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to.f55c724804", "test.hubspot.not_null_hubspot__deal_history_id.a1c6cd6a75", "test.hubspot.unique_hubspot__deal_history_id.1cb93fca79"], "model.hubspot.hubspot__company_history": ["test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to.654ef778b1", "test.hubspot.not_null_hubspot__company_history_id.33035793ff", "test.hubspot.unique_hubspot__company_history_id.f1af964b1f"], "model.hubspot.hubspot__engagement_tasks": ["test.hubspot.not_null_hubspot__engagement_tasks_engagement_id.67738794ae", "test.hubspot.unique_hubspot__engagement_tasks_engagement_id.754d36b939"], "model.hubspot.hubspot__engagement_notes": ["test.hubspot.not_null_hubspot__engagement_notes_engagement_id.76434ac965", "test.hubspot.unique_hubspot__engagement_notes_engagement_id.c9864b5001"], "model.hubspot.hubspot__engagement_calls": ["test.hubspot.not_null_hubspot__engagement_calls_engagement_id.00f8d8357f", "test.hubspot.unique_hubspot__engagement_calls_engagement_id.972572ce6c"], "model.hubspot.hubspot__engagement_emails": ["test.hubspot.not_null_hubspot__engagement_emails_engagement_id.13a39d1e09", "test.hubspot.unique_hubspot__engagement_emails_engagement_id.b18e2acbde"], "model.hubspot.hubspot__engagement_meetings": ["test.hubspot.not_null_hubspot__engagement_meetings_engagement_id.83a791c3df", "test.hubspot.unique_hubspot__engagement_meetings_engagement_id.3098aabcd1"], "model.hubspot.int_hubspot__deals_enhanced": ["model.hubspot.hubspot__deal_stages", "model.hubspot.hubspot__deals"], "model.hubspot.hubspot__email_sends": ["model.hubspot.hubspot__contacts", "model.hubspot.hubspot__email_campaigns", "model.hubspot.int_hubspot__email_metrics__by_contact_list", "test.hubspot.not_null_hubspot__email_sends_event_id.9fc8a8bef3", "test.hubspot.unique_hubspot__email_sends_event_id.b01306228f"], "model.hubspot.hubspot__contact_lists": ["test.hubspot.not_null_hubspot__contact_lists_contact_list_id.3bde1bb891", "test.hubspot.unique_hubspot__contact_lists_contact_list_id.ea9ef03bac"], "model.hubspot.hubspot__contacts": ["test.hubspot.not_null_hubspot__contacts_contact_id.e28e88dce3", "test.hubspot.unique_hubspot__contacts_contact_id.8f627121df"], "model.hubspot.hubspot__email_campaigns": ["test.hubspot.not_null_hubspot__email_campaigns_email_campaign_id.6b2d6f43c0", "test.hubspot.unique_hubspot__email_campaigns_email_campaign_id.2470fabe62"], "model.hubspot.hubspot__email_event_dropped": ["test.hubspot.not_null_hubspot__email_event_dropped_event_id.5cfe4eeb95", "test.hubspot.unique_hubspot__email_event_dropped_event_id.093040860b"], "model.hubspot.hubspot__email_event_deferred": ["test.hubspot.not_null_hubspot__email_event_deferred_event_id.2c6decaa91", "test.hubspot.unique_hubspot__email_event_deferred_event_id.bb75dcb83a"], "model.hubspot.hubspot__email_event_spam_report": ["test.hubspot.not_null_hubspot__email_event_spam_report_event_id.5ddca8771a", "test.hubspot.unique_hubspot__email_event_spam_report_event_id.20aab81ec6"], "model.hubspot.hubspot__email_event_opens": ["test.hubspot.not_null_hubspot__email_event_opens_event_id.a9fe279ee1", "test.hubspot.unique_hubspot__email_event_opens_event_id.d7963f4eb0"], "model.hubspot.hubspot__email_event_delivered": ["test.hubspot.not_null_hubspot__email_event_delivered_event_id.0609870be3", "test.hubspot.unique_hubspot__email_event_delivered_event_id.242e838cce"], "model.hubspot.hubspot__email_event_status_change": ["model.hubspot.int_hubspot__email_aggregate_status_change", "test.hubspot.not_null_hubspot__email_event_status_change_event_id.a1737e44b3", "test.hubspot.unique_hubspot__email_event_status_change_event_id.2e5b2b72e2"], "model.hubspot.hubspot__email_event_sent": ["model.hubspot.hubspot__email_sends", "test.hubspot.not_null_hubspot__email_event_sent_event_id.5507dcc5b9", "test.hubspot.unique_hubspot__email_event_sent_event_id.68076270f8"], "model.hubspot.hubspot__email_event_print": ["test.hubspot.not_null_hubspot__email_event_print_event_id.9dac8a147e", "test.hubspot.unique_hubspot__email_event_print_event_id.548f6cece7"], "model.hubspot.hubspot__email_event_clicks": ["test.hubspot.not_null_hubspot__email_event_clicks_event_id.f603501ca0", "test.hubspot.unique_hubspot__email_event_clicks_event_id.60d3912846"], "model.hubspot.hubspot__email_event_forward": ["test.hubspot.not_null_hubspot__email_event_forward_event_id.417a73da08", "test.hubspot.unique_hubspot__email_event_forward_event_id.064956aaa7"], "model.hubspot.hubspot__email_event_bounce": ["test.hubspot.not_null_hubspot__email_event_bounce_event_id.39d8daa6f5", "test.hubspot.unique_hubspot__email_event_bounce_event_id.7a1c6704e1"], "model.hubspot.hubspot__contact_history": ["test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to.42ccfb8329", "test.hubspot.not_null_hubspot__contact_history_id.eaae22e088", "test.hubspot.unique_hubspot__contact_history_id.aef69ae1ec"], "model.hubspot.int_hubspot__engagement_metrics__by_contact": ["model.hubspot.hubspot__contacts", "test.hubspot.not_null_int_hubspot__engagement_metrics__by_contact_contact_id.4a800df06b", "test.hubspot.unique_int_hubspot__engagement_metrics__by_contact_contact_id.1c156b64ed"], "model.hubspot.int_hubspot__email_event_aggregates": ["model.hubspot.hubspot__email_sends", "test.hubspot.not_null_int_hubspot__email_event_aggregates_email_send_id.ac29e6997a", "test.hubspot.unique_int_hubspot__email_event_aggregates_email_send_id.4deec238f9"], "model.hubspot.int_hubspot__email_aggregate_status_change": ["model.hubspot.hubspot__email_sends", "test.hubspot.not_null_int_hubspot__email_aggregate_status_change_email_send_id.16bf74a3bc", "test.hubspot.unique_int_hubspot__email_aggregate_status_change_email_send_id.7c03e87c05"], "model.hubspot.int_hubspot__email_metrics__by_contact_list": ["model.hubspot.hubspot__contact_lists", "test.hubspot.not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id.1d3cf4caf2", "test.hubspot.unique_int_hubspot__email_metrics__by_contact_list_contact_list_id.095d72d5b8"], "test.hubspot_source.unique_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.ba90fa6113": [], "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_stage_deal_pipeline_stage_id.d53656553e": [], "test.hubspot_source.unique_stg_hubspot__deal_pipeline_deal_pipeline_id.dff6c45403": [], "test.hubspot_source.not_null_stg_hubspot__deal_pipeline_deal_pipeline_id.8a0e3cd7a3": [], "test.hubspot_source.not_null_stg_hubspot__deal_deal_id.ff48693e20": [], "test.hubspot_source.unique_stg_hubspot__deal_deal_id.ac1628ac69": [], "test.hubspot_source.unique_stg_hubspot__contact_list_contact_list_id.036739c1b0": [], "test.hubspot_source.not_null_stg_hubspot__contact_list_contact_list_id.ff8e4cc29a": [], "test.hubspot_source.unique_stg_hubspot__contact_contact_id.b9135eb03a": [], "test.hubspot_source.not_null_stg_hubspot__contact_contact_id.9f112f8944": [], "test.hubspot_source.unique_stg_hubspot__email_event_bounce_event_id.0341ffa8e9": [], "test.hubspot_source.not_null_stg_hubspot__email_event_bounce_event_id.71b13d26d3": [], "test.hubspot_source.unique_stg_hubspot__email_event_click_event_id.da8d8487a1": [], "test.hubspot_source.not_null_stg_hubspot__email_event_click_event_id.8a1be931c5": [], "test.hubspot_source.unique_stg_hubspot__email_event_deferred_event_id.2f779e2912": [], "test.hubspot_source.not_null_stg_hubspot__email_event_deferred_event_id.80293078e0": [], "test.hubspot_source.unique_stg_hubspot__email_event_delivered_event_id.f818bf03fc": [], "test.hubspot_source.not_null_stg_hubspot__email_event_delivered_event_id.87c8eb3f20": [], "test.hubspot_source.unique_stg_hubspot__email_event_dropped_event_id.40706bbf71": [], "test.hubspot_source.not_null_stg_hubspot__email_event_dropped_event_id.c92d449f52": [], "test.hubspot_source.unique_stg_hubspot__email_event_forward_event_id.7f133d2dd1": [], "test.hubspot_source.not_null_stg_hubspot__email_event_forward_event_id.b9a8bf63b3": [], "test.hubspot_source.unique_stg_hubspot__email_event_open_event_id.3a369549b1": [], "test.hubspot_source.not_null_stg_hubspot__email_event_open_event_id.a2e658fe16": [], "test.hubspot_source.unique_stg_hubspot__email_event_print_event_id.40a8ccd3f3": [], "test.hubspot_source.not_null_stg_hubspot__email_event_print_event_id.94d4e09b3b": [], "test.hubspot_source.unique_stg_hubspot__email_event_sent_event_id.122cb22272": [], "test.hubspot_source.not_null_stg_hubspot__email_event_sent_event_id.cf77d9f15d": [], "test.hubspot_source.unique_stg_hubspot__email_event_spam_report_event_id.448320447a": [], "test.hubspot_source.not_null_stg_hubspot__email_event_spam_report_event_id.2a56aced8f": [], "test.hubspot_source.unique_stg_hubspot__email_event_status_change_event_id.13105203e0": [], "test.hubspot_source.not_null_stg_hubspot__email_event_status_change_event_id.c5e80297b1": [], "test.hubspot_source.unique_stg_hubspot__email_event_event_id.734683460d": [], "test.hubspot_source.not_null_stg_hubspot__email_event_event_id.4f287f3531": [], "test.hubspot_source.unique_stg_hubspot__email_campaign_email_campaign_id.9820d33f2e": [], "test.hubspot_source.not_null_stg_hubspot__email_campaign_email_campaign_id.79921899a6": [], "test.hubspot_source.not_null_stg_hubspot__engagement_call_engagement_id.5ceb3917bf": [], "test.hubspot_source.unique_stg_hubspot__engagement_call_engagement_id.43b4413603": [], "test.hubspot_source.not_null_stg_hubspot__engagement_email_engagement_id.175561ecca": [], "test.hubspot_source.unique_stg_hubspot__engagement_email_engagement_id.5eeb06dcfc": [], "test.hubspot_source.not_null_stg_hubspot__engagement_meeting_engagement_id.18dd11dc28": [], "test.hubspot_source.unique_stg_hubspot__engagement_meeting_engagement_id.70721fb830": [], "test.hubspot_source.not_null_stg_hubspot__engagement_note_engagement_id.244059891e": [], "test.hubspot_source.unique_stg_hubspot__engagement_note_engagement_id.e2eaf5256e": [], "test.hubspot_source.not_null_stg_hubspot__engagement_task_engagement_id.0bbd752d82": [], "test.hubspot_source.unique_stg_hubspot__engagement_task_engagement_id.0f578bc80c": [], "test.hubspot_source.not_null_stg_hubspot__engagement_engagement_id.b26f4d328f": [], "test.hubspot_source.unique_stg_hubspot__engagement_engagement_id.4f054187b0": [], "test.hubspot_source.unique_stg_hubspot__ticket_ticket_id.78c6fbfcaf": [], "test.hubspot_source.not_null_stg_hubspot__ticket_ticket_id.299e7c4c53": [], "test.hubspot_source.unique_stg_hubspot__company_company_id.394a2a4ba0": [], "test.hubspot_source.not_null_stg_hubspot__company_company_id.0d0a080d43": [], "test.hubspot.not_null_hubspot__deals_deal_id.bdbfe47fcd": [], "test.hubspot.unique_hubspot__deals_deal_id.d728fe5f71": [], "test.hubspot.not_null_hubspot__deal_stages_deal_stage_id.162d2d204b": [], "test.hubspot.unique_hubspot__deal_stages_deal_stage_id.7fd3732373": [], "test.hubspot.unique_hubspot__companies_company_id.a58ceac3f2": [], "test.hubspot.not_null_hubspot__companies_company_id.687ec98e97": [], "test.hubspot.not_null_hubspot__engagements_engagement_id.59b32bc0d7": [], "test.hubspot.unique_hubspot__engagements_engagement_id.01d5c3ee5d": [], "test.hubspot.unique_hubspot__company_history_id.f1af964b1f": [], "test.hubspot.not_null_hubspot__company_history_id.33035793ff": [], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__company_history_company_id__field_name__valid_to.654ef778b1": [], "test.hubspot.unique_hubspot__deal_history_id.1cb93fca79": [], "test.hubspot.not_null_hubspot__deal_history_id.a1c6cd6a75": [], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__deal_history_deal_id__field_name__valid_to.f55c724804": [], "test.hubspot.not_null_hubspot__engagement_calls_engagement_id.00f8d8357f": [], "test.hubspot.unique_hubspot__engagement_calls_engagement_id.972572ce6c": [], "test.hubspot.not_null_hubspot__engagement_emails_engagement_id.13a39d1e09": [], "test.hubspot.unique_hubspot__engagement_emails_engagement_id.b18e2acbde": [], "test.hubspot.not_null_hubspot__engagement_meetings_engagement_id.83a791c3df": [], "test.hubspot.unique_hubspot__engagement_meetings_engagement_id.3098aabcd1": [], "test.hubspot.not_null_hubspot__engagement_notes_engagement_id.76434ac965": [], "test.hubspot.unique_hubspot__engagement_notes_engagement_id.c9864b5001": [], "test.hubspot.not_null_hubspot__engagement_tasks_engagement_id.67738794ae": [], "test.hubspot.unique_hubspot__engagement_tasks_engagement_id.754d36b939": [], "test.hubspot.unique_hubspot__email_sends_event_id.b01306228f": [], "test.hubspot.not_null_hubspot__email_sends_event_id.9fc8a8bef3": [], "test.hubspot.unique_hubspot__email_campaigns_email_campaign_id.2470fabe62": [], "test.hubspot.not_null_hubspot__email_campaigns_email_campaign_id.6b2d6f43c0": [], "test.hubspot.unique_hubspot__contacts_contact_id.8f627121df": [], "test.hubspot.not_null_hubspot__contacts_contact_id.e28e88dce3": [], "test.hubspot.unique_hubspot__contact_lists_contact_list_id.ea9ef03bac": [], "test.hubspot.not_null_hubspot__contact_lists_contact_list_id.3bde1bb891": [], "test.hubspot.unique_hubspot__email_event_bounce_event_id.7a1c6704e1": [], "test.hubspot.not_null_hubspot__email_event_bounce_event_id.39d8daa6f5": [], "test.hubspot.unique_hubspot__email_event_clicks_event_id.60d3912846": [], "test.hubspot.not_null_hubspot__email_event_clicks_event_id.f603501ca0": [], "test.hubspot.unique_hubspot__email_event_deferred_event_id.bb75dcb83a": [], "test.hubspot.not_null_hubspot__email_event_deferred_event_id.2c6decaa91": [], "test.hubspot.unique_hubspot__email_event_delivered_event_id.242e838cce": [], "test.hubspot.not_null_hubspot__email_event_delivered_event_id.0609870be3": [], "test.hubspot.unique_hubspot__email_event_dropped_event_id.093040860b": [], "test.hubspot.not_null_hubspot__email_event_dropped_event_id.5cfe4eeb95": [], "test.hubspot.unique_hubspot__email_event_forward_event_id.064956aaa7": [], "test.hubspot.not_null_hubspot__email_event_forward_event_id.417a73da08": [], "test.hubspot.unique_hubspot__email_event_opens_event_id.d7963f4eb0": [], "test.hubspot.not_null_hubspot__email_event_opens_event_id.a9fe279ee1": [], "test.hubspot.unique_hubspot__email_event_print_event_id.548f6cece7": [], "test.hubspot.not_null_hubspot__email_event_print_event_id.9dac8a147e": [], "test.hubspot.unique_hubspot__email_event_sent_event_id.68076270f8": [], "test.hubspot.not_null_hubspot__email_event_sent_event_id.5507dcc5b9": [], "test.hubspot.unique_hubspot__email_event_spam_report_event_id.20aab81ec6": [], "test.hubspot.not_null_hubspot__email_event_spam_report_event_id.5ddca8771a": [], "test.hubspot.unique_hubspot__email_event_status_change_event_id.2e5b2b72e2": [], "test.hubspot.not_null_hubspot__email_event_status_change_event_id.a1737e44b3": [], "test.hubspot.unique_hubspot__contact_history_id.aef69ae1ec": [], "test.hubspot.not_null_hubspot__contact_history_id.eaae22e088": [], "test.hubspot.dbt_utils_unique_combination_of_columns_hubspot__contact_history_contact_id__field_name__valid_to.42ccfb8329": [], "test.hubspot.unique_int_hubspot__email_aggregate_status_change_email_send_id.7c03e87c05": [], "test.hubspot.not_null_int_hubspot__email_aggregate_status_change_email_send_id.16bf74a3bc": [], "test.hubspot.unique_int_hubspot__email_metrics__by_contact_list_contact_list_id.095d72d5b8": [], "test.hubspot.not_null_int_hubspot__email_metrics__by_contact_list_contact_list_id.1d3cf4caf2": [], "test.hubspot.unique_int_hubspot__email_event_aggregates_email_send_id.4deec238f9": [], "test.hubspot.not_null_int_hubspot__email_event_aggregates_email_send_id.ac29e6997a": [], "test.hubspot.unique_int_hubspot__engagement_metrics__by_contact_contact_id.1c156b64ed": [], "test.hubspot.not_null_int_hubspot__engagement_metrics__by_contact_contact_id.4a800df06b": [], "source.hubspot_source.hubspot.calendar_event": [], "source.hubspot_source.hubspot.company": [], "source.hubspot_source.hubspot.company_property_history": [], "source.hubspot_source.hubspot.contact_merge_audit": [], "source.hubspot_source.hubspot.contact": [], "source.hubspot_source.hubspot.contact_form_submission": [], "source.hubspot_source.hubspot.contact_list": [], "source.hubspot_source.hubspot.contact_list_member": [], "source.hubspot_source.hubspot.contact_property_history": [], "source.hubspot_source.hubspot.deal": [], "source.hubspot_source.hubspot.deal_stage": [], "source.hubspot_source.hubspot.deal_company": [], "source.hubspot_source.hubspot.deal_contact": [], "source.hubspot_source.hubspot.deal_pipeline": [], "source.hubspot_source.hubspot.deal_pipeline_stage": [], "source.hubspot_source.hubspot.deal_property_history": [], "source.hubspot_source.hubspot.email_campaign": [], "source.hubspot_source.hubspot.email_event": [], "source.hubspot_source.hubspot.email_event_bounce": [], "source.hubspot_source.hubspot.email_event_click": [], "source.hubspot_source.hubspot.email_event_deferred": [], "source.hubspot_source.hubspot.email_event_delivered": [], "source.hubspot_source.hubspot.email_event_dropped": [], "source.hubspot_source.hubspot.email_event_forward": [], "source.hubspot_source.hubspot.email_event_open": [], "source.hubspot_source.hubspot.email_event_print": [], "source.hubspot_source.hubspot.email_event_sent": [], "source.hubspot_source.hubspot.email_event_spam_report": [], "source.hubspot_source.hubspot.email_event_status_change": [], "source.hubspot_source.hubspot.email_subscription": [], "source.hubspot_source.hubspot.email_subscription_change": [], "source.hubspot_source.hubspot.engagement": [], "source.hubspot_source.hubspot.engagement_call": [], "source.hubspot_source.hubspot.engagement_company": [], "source.hubspot_source.hubspot.engagement_contact": [], "source.hubspot_source.hubspot.engagement_deal": [], "source.hubspot_source.hubspot.engagement_email": [], "source.hubspot_source.hubspot.engagement_email_cc": [], "source.hubspot_source.hubspot.engagement_email_to": [], "source.hubspot_source.hubspot.engagement_meeting": [], "source.hubspot_source.hubspot.engagement_note": [], "source.hubspot_source.hubspot.engagement_task": [], "source.hubspot_source.hubspot.form": [], "source.hubspot_source.hubspot.owner": [], "source.hubspot_source.hubspot.ticket_company": [], "source.hubspot_source.hubspot.ticket_contact": [], "source.hubspot_source.hubspot.ticket_deal": [], "source.hubspot_source.hubspot.ticket_engagement": [], "source.hubspot_source.hubspot.ticket_pipeline_stage": [], "source.hubspot_source.hubspot.ticket_pipeline": [], "source.hubspot_source.hubspot.ticket_property_history": [], "source.hubspot_source.hubspot.ticket": []}}